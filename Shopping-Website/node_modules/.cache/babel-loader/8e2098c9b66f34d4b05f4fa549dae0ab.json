{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VBottomNavigation.css\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, useTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nimport { VBtnToggleSymbol } from \"../VBtnToggle/VBtnToggle.mjs\";\nexport const VBottomNavigation = genericComponent()({\n  name: 'VBottomNavigation',\n  props: {\n    bgColor: String,\n    color: String,\n    grow: Boolean,\n    mode: {\n      type: String,\n      validator: v => !v || ['horizontal', 'shift'].includes(v)\n    },\n    height: {\n      type: [Number, String],\n      default: 56\n    },\n    active: {\n      type: Boolean,\n      default: true\n    },\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeLayoutItemProps({\n      name: 'bottom-navigation'\n    }),\n    ...makeTagProps({\n      tag: 'header'\n    }),\n    ...makeGroupProps({\n      modelValue: true,\n      selectedClass: 'v-btn--selected'\n    }),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = useTheme();\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    const height = computed(() => Number(props.height) - (props.density === 'comfortable' ? 8 : 0) - (props.density === 'compact' ? 16 : 0));\n    const isActive = toRef(props, 'active');\n    const {\n      layoutItemStyles\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: computed(() => 'bottom'),\n      layoutSize: computed(() => isActive.value ? height.value : 0),\n      elementSize: height,\n      active: isActive,\n      absolute: toRef(props, 'absolute')\n    });\n    useGroup(props, VBtnToggleSymbol);\n    provideDefaults({\n      VBtn: {\n        color: toRef(props, 'color'),\n        density: toRef(props, 'density'),\n        stacked: computed(() => props.mode !== 'horizontal'),\n        variant: 'text'\n      }\n    }, {\n      scoped: true\n    });\n    useRender(() => {\n      return _createVNode(props.tag, {\n        \"class\": ['v-bottom-navigation', {\n          'v-bottom-navigation--active': isActive.value,\n          'v-bottom-navigation--grow': props.grow,\n          'v-bottom-navigation--shift': props.mode === 'shift'\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, densityClasses.value, elevationClasses.value, roundedClasses.value],\n        \"style\": [backgroundColorStyles.value, layoutItemStyles.value, {\n          height: convertToUnit(height.value),\n          transform: `translateY(${convertToUnit(!isActive.value ? 100 : 0, '%')})`\n        }, ssrBootStyles.value]\n      }, {\n        default: () => [slots.default && _createVNode(\"div\", {\n          \"class\": \"v-bottom-navigation__content\"\n        }, [slots.default()])]\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeBorderProps","useBorder","makeDensityProps","useDensity","makeElevationProps","useElevation","makeGroupProps","useGroup","makeLayoutItemProps","useLayoutItem","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","useTheme","provideDefaults","useBackgroundColor","useSsrBoot","computed","toRef","convertToUnit","genericComponent","useRender","VBtnToggleSymbol","VBottomNavigation","name","props","bgColor","String","color","grow","Boolean","mode","type","validator","v","includes","height","Number","default","active","tag","modelValue","selectedClass","emits","value","setup","_ref","slots","themeClasses","borderClasses","backgroundColorClasses","backgroundColorStyles","densityClasses","elevationClasses","roundedClasses","ssrBootStyles","density","isActive","layoutItemStyles","id","order","parseInt","position","layoutSize","elementSize","absolute","VBtn","stacked","variant","scoped","transform","_createVNode"],"sources":["../../../src/components/VBottomNavigation/VBottomNavigation.tsx"],"sourcesContent":["// Styles\nimport './VBottomNavigation.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useSsrBoot } from '@/composables/ssrBoot'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\n\nexport const VBottomNavigation = genericComponent()({\n  name: 'VBottomNavigation',\n\n  props: {\n    bgColor: String,\n    color: String,\n    grow: Boolean,\n    mode: {\n      type: String,\n      validator: (v: any) => !v || ['horizontal', 'shift'].includes(v),\n    },\n    height: {\n      type: [Number, String],\n      default: 56,\n    },\n    active: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeLayoutItemProps({ name: 'bottom-navigation' }),\n    ...makeTagProps({ tag: 'header' }),\n    ...makeGroupProps({\n      modelValue: true,\n      selectedClass: 'v-btn--selected',\n    }),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = useTheme()\n    const { borderClasses } = useBorder(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { ssrBootStyles } = useSsrBoot()\n    const height = computed(() => (\n      Number(props.height) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ))\n    const isActive = toRef(props, 'active')\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: computed(() => 'bottom'),\n      layoutSize: computed(() => isActive.value ? height.value : 0),\n      elementSize: height,\n      active: isActive,\n      absolute: toRef(props, 'absolute'),\n    })\n\n    useGroup(props, VBtnToggleSymbol)\n\n    provideDefaults({\n      VBtn: {\n        color: toRef(props, 'color'),\n        density: toRef(props, 'density'),\n        stacked: computed(() => props.mode !== 'horizontal'),\n        variant: 'text',\n      },\n    }, { scoped: true })\n\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-bottom-navigation',\n            {\n              'v-bottom-navigation--active': isActive.value,\n              'v-bottom-navigation--grow': props.grow,\n              'v-bottom-navigation--shift': props.mode === 'shift',\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            layoutItemStyles.value,\n            {\n              height: convertToUnit(height.value),\n              transform: `translateY(${convertToUnit(!isActive.value ? 100 : 0, '%')})`,\n            },\n            ssrBootStyles.value,\n          ]}\n        >\n          { slots.default && (\n            <div class=\"v-bottom-navigation__content\">\n              { slots.default() }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBottomNavigation = InstanceType<typeof VBottomNavigation>\n"]},"metadata":{},"sourceType":"module"}