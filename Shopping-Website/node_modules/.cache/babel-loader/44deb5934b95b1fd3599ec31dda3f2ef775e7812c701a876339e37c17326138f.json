{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-024d905c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \" Signup \", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createElementVNode(\"section\", null, [_createVNode(_component_v_container, {\n      class: \"center-screen\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card, {\n        class: \"container-class\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"form\", {\n          onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.submit && $options.submit(...args), [\"prevent\"]))\n        }, [_hoisted_1, _createVNode(_component_v_text_field, {\n          modelValue: $setup.name.value.value,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.name.value.value = $event),\n          counter: 30,\n          \"error-messages\": $setup.name.errorMessage.value,\n          label: \"Name\",\n          class: \"textfield\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), _createVNode(_component_v_text_field, {\n          modelValue: $setup.phone.value.value,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.phone.value.value = $event),\n          counter: 10,\n          \"error-messages\": $setup.phone.errorMessage.value,\n          label: \"Username\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), _createVNode(_component_v_text_field, {\n          modelValue: $setup.email.value.value,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.email.value.value = $event),\n          \"error-messages\": $setup.email.errorMessage.value,\n          label: \"E-mail\",\n          class: \"form-control\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), _createVNode(_component_v_text_field, {\n          type: \"password\",\n          modelValue: $setup.password.value.value,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.password.value.value = $event),\n          counter: 32,\n          \"error-messages\": $setup.password.errorMessage.value,\n          label: \"Password\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), _createVNode(_component_v_text_field, {\n          type: \"password\",\n          modelValue: $setup.confirmpassword.value.value,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.confirmpassword.value.value = $event),\n          \"error-messages\": $setup.confirmpassword.errorMessage.value,\n          label: \"Confirm Password\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"error-messages\"]), _createVNode(_component_v_btn, {\n          class: \"me-4\",\n          type: \"submit\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" submit \")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_btn, {\n          onClick: $setup.handleReset\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" clear \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])], 32 /* HYDRATE_EVENTS */)]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })])]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_v_app","_createVNode","_component_v_container","class","_component_v_card","onSubmit","_cache","_withModifiers","args","$options","submit","_hoisted_1","_component_v_text_field","$setup","name","value","$event","counter","errorMessage","label","phone","email","type","password","confirmpassword","_component_v_btn","onClick","handleReset"],"sources":["C:\\Users\\Sans\\Downloads\\Shopping-Website\\Shopping-Website\\src\\views\\Signup.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n      <section>\r\n          <v-container class=\"center-screen\">\r\n              <v-card class=\"container-class\">\r\n\r\n                  <form @submit.prevent=\"submit\">\r\n                      <h2> Signup </h2>\r\n                      <v-text-field v-model=\"name.value.value\" :counter=\"30\" :error-messages=\"name.errorMessage.value\"\r\n                          label=\"Name\" class=\"textfield\"></v-text-field>\r\n\r\n                      <v-text-field v-model=\"phone.value.value\" :counter=\"10\" :error-messages=\"phone.errorMessage.value\"\r\n                          label=\"Username\"></v-text-field>\r\n\r\n                      <v-text-field v-model=\"email.value.value\" :error-messages=\"email.errorMessage.value\"\r\n                          label=\"E-mail\" class=\"form-control\"></v-text-field>\r\n\r\n                      <v-text-field type=\"password\" v-model=\"password.value.value\" :counter=\"32\"\r\n                          :error-messages=\"password.errorMessage.value\" label=\"Password\"></v-text-field>\r\n\r\n                      <v-text-field type=\"password\" v-model=\"confirmpassword.value.value\"\r\n                          :error-messages=\"confirmpassword.errorMessage.value\" label=\"Confirm Password\"></v-text-field>\r\n\r\n\r\n                      <v-btn class=\"me-4\" type=\"submit\">\r\n                          submit\r\n                      </v-btn>\r\n\r\n                      <v-btn @click=\"handleReset\">\r\n                          clear\r\n                      </v-btn>\r\n\r\n                  </form>\r\n              </v-card>\r\n          </v-container>\r\n      </section>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { ref } from 'vue'\r\nimport { useField, useForm } from 'vee-validate'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  setup() {\r\n      const { handleSubmit, handleReset } = useForm({\r\n          validationSchema: {\r\n              name(value) {\r\n                  if (value?.length >= 2) return true\r\n\r\n                  return 'Name needs to be at least 2 characters.'\r\n              },\r\n\r\n\r\n              phone(value) {\r\n                  if (value?.length >= 2) return true\r\n\r\n                  return 'Phone number needs to be at least 2 Characters.'\r\n              },\r\n              email(value) {\r\n                  if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true\r\n\r\n                  return 'Must be a valid e-mail.'\r\n              },\r\n              password(value) {\r\n                  if (value?.length >= 8) return true\r\n\r\n                  return 'Must be a valid password.'\r\n              },\r\n\r\n              confirmpassword(value) {\r\n                  if (password.value.value === value) return true\r\n                  return \"Passwords don't match.\"\r\n              },\r\n\r\n              select(value) {\r\n                  if (value) return true\r\n\r\n                  return 'Select an item.'\r\n              },\r\n              checkbox(value) {\r\n                  if (value === '1') return true\r\n\r\n                  return 'Must be checked.'\r\n              },\r\n          },\r\n      })\r\n      const name = useField('name')\r\n      const username = useField('name')\r\n      const phone = useField('phone')\r\n      const email = useField('email')\r\n      const password = useField('password')\r\n      const confirmpassword = useField('confirmpassword')\r\n      const select = useField('select')\r\n      const checkbox = useField('checkbox')\r\n\r\n\r\n\r\n      const submit = handleSubmit(values => {\r\n          alert(JSON.stringify(values, null, 2))\r\n      })\r\n\r\n\r\n      return { name, phone, confirmpassword, password, username, email, select, checkbox, submit, handleReset }\r\n  },\r\n  methods: {\r\n      async init() {\r\n          this.signup = await axios.get('http://localhost:5000/api/users/register')\r\n      },\r\n\r\n      submit() {\r\n          router.post('/register', (req, res) => {\r\n              let {\r\n                  name,\r\n                  username,\r\n                  email,\r\n                  password,\r\n                  confirm_password\r\n              } = req.body\r\n              if (password !== confirm_password) {\r\n                  return res.status(400).json({\r\n                      msg: \"Passwords do not match.\"\r\n                  });\r\n              }\r\n\r\n              // Check for unique username\r\n              User.findOne({\r\n                  username: username\r\n              }).then(user => {\r\n                  if (user) {\r\n                      return res.status(400).json({\r\n                          msg: \"Username is already taken.\"\r\n                      });\r\n                  }\r\n              })\r\n\r\n              // Check for unique email\r\n              User.findOne({ email: email }).then(user => {\r\n                  if (user) {\r\n                      return res.status(400).json({\r\n                          msg: \"Email is already registered. Did you forget your password?\"\r\n                      });\r\n                  }\r\n              });\r\n\r\n              // If no error, then data is valid and we can register the user\r\n              let newUser = new User({\r\n                  name,\r\n                  username,\r\n                  password,\r\n                  email\r\n              });\r\n\r\n              // Hash the password\r\n              bcrypt.genSalt(10, (err, salt) => {\r\n                  bcrypt.hash(newUser.password, salt, (err, hash) => {\r\n                      if (err) throw err;\r\n                      newUser.password = hash;\r\n                      newUser.save().then(user => {\r\n                          return res.status(201).json({\r\n                              msg: \"User is now registered!!!\"\r\n                          });\r\n                      });\r\n                  });\r\n              });\r\n          });\r\n      }\r\n  }\r\n\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.center-screen {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  min-height: 100vh;\r\n}\r\n\r\nsection {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 30px;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  background-image: url(\"./public/background-image@2x.png\");\r\n  background-position: center;\r\n  background-size: cover;\r\n\r\n}\r\n\r\n.container-class {\r\n  position: relative;\r\n  width: 500px;\r\n  height: 500px;\r\n  background: transparent;\r\n  border: 2px solid rgba(255, 255, 255, 0.5);\r\n  border-radius: 20px;\r\n  backdrop-filter: blur(60px);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nh2 {\r\n  font-size: 2em;\r\n  color: #ffffff;\r\n  text-align: center;\r\n}\r\n\r\nform {\r\n  color: white;\r\n\r\n}\r\n</style>"],"mappings":";;gEAOsBA,mBAAA,CAAiB,YAAb,UAAQ;;;;;;;;uBANhCC,YAAA,CAmCQC,gBAAA;sBAlCJ,MAiCU,CAjCVF,mBAAA,CAiCU,kBAhCNG,YAAA,CA+BcC,sBAAA;MA/BDC,KAAK,EAAC;IAAe;wBAC9B,MA6BS,CA7BTF,YAAA,CA6BSG,iBAAA;QA7BDD,KAAK,EAAC;MAAiB;0BAE3B,MA0BO,CA1BPL,mBAAA,CA0BO;UA1BAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;YACzBG,UAAiB,EACjBV,YAAA,CACkDW,uBAAA;sBAD3BC,MAAA,CAAAC,IAAI,CAACC,KAAK,CAACA,KAAK;qEAAhBF,MAAA,CAAAC,IAAI,CAACC,KAAK,CAACA,KAAK,GAAAC,MAAA;UAAGC,OAAO,EAAE,EAAE;UAAG,gBAAc,EAAEJ,MAAA,CAAAC,IAAI,CAACI,YAAY,CAACH,KAAK;UAC3FI,KAAK,EAAC,MAAM;UAAChB,KAAK,EAAC;mEAEvBF,YAAA,CACoCW,uBAAA;sBADbC,MAAA,CAAAO,KAAK,CAACL,KAAK,CAACA,KAAK;qEAAjBF,MAAA,CAAAO,KAAK,CAACL,KAAK,CAACA,KAAK,GAAAC,MAAA;UAAGC,OAAO,EAAE,EAAE;UAAG,gBAAc,EAAEJ,MAAA,CAAAO,KAAK,CAACF,YAAY,CAACH,KAAK;UAC7FI,KAAK,EAAC;mEAEVlB,YAAA,CACuDW,uBAAA;sBADhCC,MAAA,CAAAQ,KAAK,CAACN,KAAK,CAACA,KAAK;qEAAjBF,MAAA,CAAAQ,KAAK,CAACN,KAAK,CAACA,KAAK,GAAAC,MAAA;UAAG,gBAAc,EAAEH,MAAA,CAAAQ,KAAK,CAACH,YAAY,CAACH,KAAK;UAC/EI,KAAK,EAAC,QAAQ;UAAChB,KAAK,EAAC;mEAEzBF,YAAA,CACkFW,uBAAA;UADpEU,IAAI,EAAC,UAAU;sBAAUT,MAAA,CAAAU,QAAQ,CAACR,KAAK,CAACA,KAAK;qEAApBF,MAAA,CAAAU,QAAQ,CAACR,KAAK,CAACA,KAAK,GAAAC,MAAA;UAAGC,OAAO,EAAE,EAAE;UACpE,gBAAc,EAAEJ,MAAA,CAAAU,QAAQ,CAACL,YAAY,CAACH,KAAK;UAAEI,KAAK,EAAC;mEAExDlB,YAAA,CACiGW,uBAAA;UADnFU,IAAI,EAAC,UAAU;sBAAUT,MAAA,CAAAW,eAAe,CAACT,KAAK,CAACA,KAAK;qEAA3BF,MAAA,CAAAW,eAAe,CAACT,KAAK,CAACA,KAAK,GAAAC,MAAA;UAC7D,gBAAc,EAAEH,MAAA,CAAAW,eAAe,CAACN,YAAY,CAACH,KAAK;UAAEI,KAAK,EAAC;mEAG/DlB,YAAA,CAEQwB,gBAAA;UAFDtB,KAAK,EAAC,MAAM;UAACmB,IAAI,EAAC;;4BAAS,MAElC,C,iBAFkC,UAElC,E;;YAEArB,YAAA,CAEQwB,gBAAA;UAFAC,OAAK,EAAEb,MAAA,CAAAc;QAAW;4BAAE,MAE5B,C,iBAF4B,SAE5B,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}