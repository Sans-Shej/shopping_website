{"ast":null,"code":"import { computed, inject, provide, ref } from 'vue';\nimport { createVuetifyAdapter } from \"../locale/adapters/vuetify.mjs\";\nimport { defaultRtl } from \"../locale/index.mjs\";\nexport const LocaleSymbol = Symbol.for('vuetify:locale');\n\nfunction isLocaleInstance(obj) {\n  return obj.name != null;\n}\n\nexport function createLocale(options) {\n  const i18n = options?.adapter && isLocaleInstance(options?.adapter) ? options?.adapter : createVuetifyAdapter(options);\n  const rtl = createRtl(i18n, options);\n  return { ...i18n,\n    ...rtl\n  };\n}\nexport function useLocale() {\n  const locale = inject(LocaleSymbol);\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance');\n  return locale;\n}\nexport function provideLocale(props) {\n  const locale = inject(LocaleSymbol);\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance');\n  const i18n = locale.provide(props);\n  const rtl = provideRtl(i18n, locale.rtl, props);\n  const data = { ...i18n,\n    ...rtl\n  };\n  provide(LocaleSymbol, data);\n  return data;\n} // RTL\n\nexport const RtlSymbol = Symbol.for('vuetify:rtl');\nexport function createRtl(i18n, options) {\n  const rtl = ref(options?.rtl ?? defaultRtl);\n  const isRtl = computed(() => rtl.value[i18n.current.value] ?? false);\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`)\n  };\n}\nexport function provideRtl(locale, rtl, props) {\n  const isRtl = computed(() => props.rtl ?? rtl.value[locale.current.value] ?? false);\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`)\n  };\n}\nexport function useRtl() {\n  const locale = inject(LocaleSymbol);\n  if (!locale) throw new Error('[Vuetify] Could not find injected rtl instance');\n  return {\n    isRtl: locale.isRtl,\n    rtlClasses: locale.rtlClasses\n  };\n}","map":{"version":3,"mappings":"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","names":["computed","inject","provide","ref","createVuetifyAdapter","defaultRtl","LocaleSymbol","Symbol","for","isLocaleInstance","obj","name","createLocale","options","i18n","adapter","rtl","createRtl","useLocale","locale","Error","provideLocale","props","provideRtl","data","RtlSymbol","isRtl","value","current","rtlClasses","useRtl"],"sources":["../../src/composables/locale.ts"],"sourcesContent":["import { computed, inject, provide, ref } from 'vue'\nimport { createVuetifyAdapter } from '@/locale/adapters/vuetify'\nimport { defaultRtl } from '@/locale'\n\nimport type { InjectionKey, Ref } from 'vue'\n\nexport interface LocaleMessages {\n  [key: string]: LocaleMessages | string\n}\n\nexport interface LocaleOptions {\n  messages?: LocaleMessages\n  locale?: string\n  fallback?: string\n  adapter?: LocaleInstance\n}\n\nexport interface LocaleInstance {\n  name: string\n  messages: Ref<LocaleMessages>\n  current: Ref<string>\n  fallback: Ref<string>\n  t: (key: string, ...params: unknown[]) => string\n  n: (value: number) => string\n  provide: (props: LocaleOptions) => LocaleInstance\n}\n\nexport const LocaleSymbol: InjectionKey<LocaleInstance & RtlInstance> = Symbol.for('vuetify:locale')\n\nfunction isLocaleInstance (obj: any): obj is LocaleInstance {\n  return obj.name != null\n}\n\nexport function createLocale (options?: LocaleOptions & RtlOptions) {\n  const i18n = options?.adapter && isLocaleInstance(options?.adapter) ? options?.adapter : createVuetifyAdapter(options)\n  const rtl = createRtl(i18n, options)\n\n  return { ...i18n, ...rtl }\n}\n\nexport function useLocale () {\n  const locale = inject(LocaleSymbol)\n\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance')\n\n  return locale\n}\n\nexport function provideLocale (props: LocaleOptions & RtlProps) {\n  const locale = inject(LocaleSymbol)\n\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance')\n\n  const i18n = locale.provide(props)\n  const rtl = provideRtl(i18n, locale.rtl, props)\n\n  const data = { ...i18n, ...rtl }\n\n  provide(LocaleSymbol, data)\n\n  return data\n}\n\n// RTL\n\nexport interface RtlOptions {\n  rtl?: Record<string, boolean>\n}\n\nexport interface RtlProps {\n  rtl?: boolean\n}\n\nexport interface RtlInstance {\n  isRtl: Ref<boolean>\n  rtl: Ref<Record<string, boolean>>\n  rtlClasses: Ref<string>\n}\n\nexport const RtlSymbol: InjectionKey<RtlInstance> = Symbol.for('vuetify:rtl')\n\nexport function createRtl (i18n: LocaleInstance, options?: RtlOptions): RtlInstance {\n  const rtl = ref<Record<string, boolean>>(options?.rtl ?? defaultRtl)\n  const isRtl = computed(() => rtl.value[i18n.current.value] ?? false)\n\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`),\n  }\n}\n\nexport function provideRtl (locale: LocaleInstance, rtl: RtlInstance['rtl'], props: RtlProps): RtlInstance {\n  const isRtl = computed(() => props.rtl ?? rtl.value[locale.current.value] ?? false)\n\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`),\n  }\n}\n\nexport function useRtl () {\n  const locale = inject(LocaleSymbol)\n\n  if (!locale) throw new Error('[Vuetify] Could not find injected rtl instance')\n\n  return { isRtl: locale.isRtl, rtlClasses: locale.rtlClasses }\n}\n"]},"metadata":{},"sourceType":"module"}