{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nexport function useInputIcon(props) {\n  const {\n    t\n  } = useLocale();\n\n  function InputIcon(_ref) {\n    let {\n      name\n    } = _ref;\n    const localeKey = {\n      prepend: 'prependAction',\n      prependInner: 'prependAction',\n      append: 'appendAction',\n      appendInner: 'appendAction',\n      clear: 'clear'\n    }[name];\n    const listener = props[`onClick:${name}`];\n    const label = listener && localeKey ? t(`$vuetify.input.${localeKey}`, props.label ?? '') : undefined;\n    return _createVNode(VIcon, {\n      \"icon\": props[`${name}Icon`],\n      \"aria-label\": label,\n      \"onClick\": listener\n    }, null);\n  }\n\n  return {\n    InputIcon\n  };\n}","map":{"version":3,"mappings":";SAASA,aAAK;AAAA,SACLC,SADK,QACI,8BADJ;AAiBd,OAAO,SAASC,YAAT,CAAqEC,KAArE,EAAmG;EACxG,MAAM;IAAEC;EAAF,IAAQH,SAAS,EAAvB;;EAEA,SAASI,SAAT,CAAkBC,IAAlB,EAA2D;IAAA,IAAvC;MAAEC;IAAF,IAAqCD,IAAE;IACzD,MAAME,SAAS,GAAG;MAChBC,OAAO,EAAE,eADO;MAEhBC,YAAY,EAAE,eAFE;MAGhBC,MAAM,EAAE,cAHQ;MAIhBC,WAAW,EAAE,cAJG;MAKhBC,KAAK,EAAE;IALS,EAMhBN,IANgB,CAAlB;IAOA,MAAMO,QAAQ,GAAGX,KAAK,CAAE,WAAUI,IAAK,EAAjB,CAAtB;IACA,MAAMQ,KAAK,GAAGD,QAAQ,IAAIN,SAAZM,GACVV,CAAC,CAAE,kBAAiBI,SAAU,EAA7B,EAAgCL,KAAK,CAACY,KAANZ,IAAe,EAA/C,CADSW,GAEVE,SAFJ;IAIA;MAAA,QAEWb,KAAK,CAAE,GAAEI,IAAK,MAAT,CAFhB;MAE+B,cACdQ,KAHjB;MAGsB,WACRD;IAJd,GAIsB,IAJtB;EAOF;;EAEA,OAAO;IAAET;EAAF,CAAP;AACF","names":["VIcon","useLocale","useInputIcon","props","t","InputIcon","_ref","name","localeKey","prepend","prependInner","append","appendInner","clear","listener","label","undefined"],"sources":["../../../src/components/VInput/InputIcon.tsx"],"sourcesContent":["import { VIcon } from '@/components/VIcon'\nimport { useLocale } from '@/composables/locale'\nimport type { IconValue } from '@/composables/icons'\n\ntype names = 'clear' | 'prepend' | 'append' | 'appendInner' | 'prependInner'\n\ntype EventProp<T = (...args: any[]) => any> = T | T[]\ntype InputIconProps<T extends names> = {\n  label: string | undefined\n} & {\n  [K in `${T}Icon`]: IconValue | undefined\n} & {\n  [K in `onClick:${T}`]: EventProp | undefined\n}\n\ntype Listeners<T extends {}, U = keyof T> = U extends `onClick:${infer V extends names}` ? V : never\n\nexport function useInputIcon<T extends {}, K extends names = Listeners<T>> (props: T & InputIconProps<K>) {\n  const { t } = useLocale()\n\n  function InputIcon ({ name }: { name: Extract<names, K> }) {\n    const localeKey = {\n      prepend: 'prependAction',\n      prependInner: 'prependAction',\n      append: 'appendAction',\n      appendInner: 'appendAction',\n      clear: 'clear',\n    }[name]\n    const listener = props[`onClick:${name}`]\n    const label = listener && localeKey\n      ? t(`$vuetify.input.${localeKey}`, props.label ?? '')\n      : undefined\n\n    return (\n      <VIcon\n        icon={ props[`${name}Icon`] }\n        aria-label={ label }\n        onClick={ listener }\n      />\n    )\n  }\n\n  return { InputIcon }\n}\n"]},"metadata":{},"sourceType":"module"}