{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VTabs.css\"; // Components\n\nimport { makeVSlideGroupProps, VSlideGroup } from \"../VSlideGroup/VSlideGroup.mjs\";\nimport { VTab } from \"./VTab.mjs\"; // Composables\n\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nimport { VTabsSymbol } from \"./shared.mjs\";\n\nfunction parseItems(items) {\n  if (!items) return [];\n  return items.map(item => {\n    if (typeof item === 'string') return {\n      title: item,\n      value: item\n    };\n    return item;\n  });\n}\n\nexport const VTabs = genericComponent()({\n  name: 'VTabs',\n  props: {\n    alignTabs: {\n      type: String,\n      default: 'start'\n    },\n    color: String,\n    fixedTabs: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    stacked: Boolean,\n    bgColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined\n    },\n    hideSlider: Boolean,\n    sliderColor: String,\n    ...makeVSlideGroupProps({\n      mandatory: 'force'\n    }),\n    ...makeDensityProps(),\n    ...makeTagProps()\n  },\n  emits: {\n    'update:modelValue': v => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const parsedItems = computed(() => parseItems(props.items));\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider')\n      }\n    });\n    useRender(() => {\n      const [slideGroupProps] = VSlideGroup.filterProps(props);\n      return _createVNode(VSlideGroup, _mergeProps(slideGroupProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-tabs', `v-tabs--${props.direction}`, `v-tabs--align-tabs-${props.alignTabs}`, {\n          'v-tabs--fixed-tabs': props.fixedTabs,\n          'v-tabs--grow': props.grow,\n          'v-tabs--stacked': props.stacked\n        }, densityClasses.value, backgroundColorClasses.value],\n        \"style\": [{\n          '--v-tabs-height': convertToUnit(props.height)\n        }, backgroundColorStyles.value],\n        \"role\": \"tablist\",\n        \"symbol\": VTabsSymbol\n      }), {\n        default: () => [slots.default ? slots.default() : parsedItems.value.map(item => _createVNode(VTab, _mergeProps(item, {\n          \"key\": item.title\n        }), null))]\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeVSlideGroupProps","VSlideGroup","VTab","makeDensityProps","useDensity","makeTagProps","provideDefaults","useBackgroundColor","useProxiedModel","computed","toRef","convertToUnit","genericComponent","useRender","VTabsSymbol","parseItems","items","map","item","title","value","VTabs","name","props","alignTabs","type","String","default","color","fixedTabs","Boolean","Array","stacked","bgColor","grow","height","Number","undefined","hideSlider","sliderColor","mandatory","emits","v","setup","_ref","slots","model","parsedItems","densityClasses","backgroundColorClasses","backgroundColorStyles","direction","fixed","slideGroupProps","filterProps","$event"],"sources":["../../../src/components/VTabs/VTabs.tsx"],"sourcesContent":["// Styles\nimport './VTabs.sass'\n\n// Components\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\nimport { VTab } from './VTab'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeTagProps } from '@/composables/tag'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport type TabItem = string | Record<string, any>\n\nfunction parseItems (items: TabItem[] | undefined) {\n  if (!items) return []\n\n  return items.map(item => {\n    if (typeof item === 'string') return { title: item, value: item }\n\n    return item\n  })\n}\n\nexport const VTabs = genericComponent()({\n  name: 'VTabs',\n\n  props: {\n    alignTabs: {\n      type: String as PropType<'start' | 'title' | 'center' | 'end'>,\n      default: 'start',\n    },\n    color: String,\n    fixedTabs: Boolean,\n    items: {\n      type: Array as PropType<TabItem[]>,\n      default: () => ([]),\n    },\n    stacked: Boolean,\n    bgColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: undefined,\n    },\n    hideSlider: Boolean,\n    sliderColor: String,\n\n    ...makeVSlideGroupProps({ mandatory: 'force' as const }),\n    ...makeDensityProps(),\n    ...makeTagProps(),\n  },\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const parsedItems = computed(() => parseItems(props.items))\n    const { densityClasses } = useDensity(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider'),\n      },\n    })\n\n    useRender(() => {\n      const [slideGroupProps] = VSlideGroup.filterProps(props)\n\n      return (\n        <VSlideGroup\n          { ...slideGroupProps }\n          v-model={ model.value }\n          class={[\n            'v-tabs',\n            `v-tabs--${props.direction}`,\n            `v-tabs--align-tabs-${props.alignTabs}`,\n            {\n              'v-tabs--fixed-tabs': props.fixedTabs,\n              'v-tabs--grow': props.grow,\n              'v-tabs--stacked': props.stacked,\n            },\n            densityClasses.value,\n            backgroundColorClasses.value,\n          ]}\n          style={[\n            { '--v-tabs-height': convertToUnit(props.height) },\n            backgroundColorStyles.value,\n          ]}\n          role=\"tablist\"\n          symbol={ VTabsSymbol }\n        >\n          { slots.default ? slots.default() : parsedItems.value.map(item => (\n            <VTab { ...item } key={ item.title } />\n          ))}\n        </VSlideGroup>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTabs = InstanceType<typeof VTabs>\n"]},"metadata":{},"sourceType":"module"}