{"ast":null,"code":"import { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VTimelineDivider } from \"./VTimelineDivider.mjs\"; // Composables\n\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeElevationProps } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps } from \"../../composables/rounded.mjs\";\nimport { makeSizeProps } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\n\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { ref, watch } from 'vue'; // Types\n\nexport const VTimelineItem = genericComponent()({\n  name: 'VTimelineItem',\n  props: {\n    density: String,\n    dotColor: String,\n    fillDot: Boolean,\n    hideDot: Boolean,\n    hideOpposite: {\n      type: Boolean,\n      default: undefined\n    },\n    icon: IconValue,\n    iconColor: String,\n    lineInset: [Number, String],\n    ...makeRoundedProps(),\n    ...makeElevationProps(),\n    ...makeSizeProps(),\n    ...makeTagProps(),\n    ...makeDimensionProps()\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const dotSize = ref(0);\n    const dotRef = ref();\n    watch(dotRef, newValue => {\n      if (!newValue) return;\n      dotSize.value = newValue.$el.querySelector('.v-timeline-divider__dot')?.getBoundingClientRect().width ?? 0;\n    }, {\n      flush: 'post'\n    });\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-timeline-item', {\n        'v-timeline-item--fill-dot': props.fillDot\n      }],\n      \"style\": {\n        '--v-timeline-dot-size': convertToUnit(dotSize.value),\n        '--v-timeline-line-inset': props.lineInset ? `calc(var(--v-timeline-dot-size) / 2 + ${convertToUnit(props.lineInset)})` : convertToUnit(0)\n      }\n    }, [_createVNode(\"div\", {\n      \"class\": \"v-timeline-item__body\",\n      \"style\": dimensionStyles.value\n    }, [slots.default?.()]), _createVNode(VTimelineDivider, {\n      \"ref\": dotRef,\n      \"hideDot\": props.hideDot,\n      \"icon\": props.icon,\n      \"iconColor\": props.iconColor,\n      \"size\": props.size,\n      \"elevation\": props.elevation,\n      \"dotColor\": props.dotColor,\n      \"fillDot\": props.fillDot,\n      \"rounded\": props.rounded\n    }, {\n      default: slots.icon\n    }), props.density !== 'compact' && _createVNode(\"div\", {\n      \"class\": \"v-timeline-item__opposite\"\n    }, [!props.hideOpposite && slots.opposite?.()])]));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VTimelineDivider","IconValue","makeElevationProps","makeRoundedProps","makeSizeProps","makeTagProps","convertToUnit","genericComponent","useRender","makeDimensionProps","useDimension","ref","watch","VTimelineItem","name","props","density","String","dotColor","fillDot","Boolean","hideDot","hideOpposite","type","default","undefined","icon","iconColor","lineInset","Number","setup","_ref","slots","dimensionStyles","dotSize","dotRef","newValue","value","$el","querySelector","getBoundingClientRect","width","flush","_createVNode","size","elevation","rounded","opposite"],"sources":["../../../src/components/VTimeline/VTimelineItem.tsx"],"sourcesContent":["// Components\nimport { VTimelineDivider } from './VTimelineDivider'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { makeElevationProps } from '@/composables/elevation'\nimport { makeRoundedProps } from '@/composables/rounded'\nimport { makeSizeProps } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { convertToUnit, genericComponent, useRender } from '@/util'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { ref, watch } from 'vue'\n\n// Types\nimport type { PropType } from 'vue'\n\n// Types\nexport type VTimelineItemSlots = {\n  default: []\n  icon: []\n  opposite: []\n}\n\nexport const VTimelineItem = genericComponent<VTimelineItemSlots>()({\n  name: 'VTimelineItem',\n\n  props: {\n    density: String as PropType<'default' | 'compact'>,\n    dotColor: String,\n    fillDot: Boolean,\n    hideDot: Boolean,\n    hideOpposite: {\n      type: Boolean,\n      default: undefined,\n    },\n    icon: IconValue,\n    iconColor: String,\n    lineInset: [Number, String],\n\n    ...makeRoundedProps(),\n    ...makeElevationProps(),\n    ...makeSizeProps(),\n    ...makeTagProps(),\n    ...makeDimensionProps(),\n  },\n\n  setup (props, { slots }) {\n    const { dimensionStyles } = useDimension(props)\n\n    const dotSize = ref(0)\n    const dotRef = ref<VTimelineDivider>()\n    watch(dotRef, newValue => {\n      if (!newValue) return\n      dotSize.value = newValue.$el.querySelector('.v-timeline-divider__dot')?.getBoundingClientRect().width ?? 0\n    }, {\n      flush: 'post',\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-timeline-item',\n          {\n            'v-timeline-item--fill-dot': props.fillDot,\n          },\n        ]}\n        style={{\n          '--v-timeline-dot-size': convertToUnit(dotSize.value),\n          '--v-timeline-line-inset': props.lineInset ? `calc(var(--v-timeline-dot-size) / 2 + ${convertToUnit(props.lineInset)})` : convertToUnit(0),\n        }}\n      >\n        <div\n          class=\"v-timeline-item__body\"\n          style={ dimensionStyles.value }\n        >\n          { slots.default?.() }\n        </div>\n\n        <VTimelineDivider\n          ref={ dotRef }\n          hideDot={ props.hideDot }\n          icon={ props.icon }\n          iconColor={ props.iconColor }\n          size={ props.size }\n          elevation={ props.elevation }\n          dotColor={ props.dotColor }\n          fillDot={ props.fillDot }\n          rounded={ props.rounded }\n          v-slots={{ default: slots.icon }}\n        />\n\n        { props.density !== 'compact' && (\n          <div class=\"v-timeline-item__opposite\">\n            { !props.hideOpposite && slots.opposite?.() }\n          </div>\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VTimelineItem = InstanceType<typeof VTimelineItem>\n"]},"metadata":{},"sourceType":"module"}