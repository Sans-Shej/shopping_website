{"ast":null,"code":"import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VExpandTransition } from \"../transitions/index.mjs\"; // Composables\n\nimport { useList } from \"./list.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { MaybeTransition } from \"../../composables/transition.mjs\";\nimport { useNestedGroupActivator, useNestedItem } from \"../../composables/nested/nested.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { defineComponent, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n\n  setup(_, _ref) {\n    let {\n      slots\n    } = _ref;\n    useNestedGroupActivator();\n    return () => slots.default?.();\n  }\n\n});\nexport const makeVListGroupProps = propsFactory({\n  activeColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse'\n  },\n  expandIcon: {\n    type: IconValue,\n    default: '$expand'\n  },\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  value: null,\n  ...makeTagProps()\n}, 'v-list-group');\nexport const VListGroup = genericComponent()({\n  name: 'VListGroup',\n  props: {\n    title: String,\n    ...makeVListGroupProps()\n  },\n\n  setup(props, _ref2) {\n    let {\n      slots\n    } = _ref2;\n    const {\n      isOpen,\n      open,\n      id: _id\n    } = useNestedItem(toRef(props, 'value'), true);\n    const id = computed(() => `v-list-group--id-${String(_id.value)}`);\n    const list = useList();\n    const {\n      isBooted\n    } = useSsrBoot();\n\n    function onClick(e) {\n      open(!isOpen.value, e);\n    }\n\n    const activatorProps = computed(() => ({\n      onClick,\n      class: 'v-list-group__header',\n      id: id.value\n    }));\n    const toggleIcon = computed(() => isOpen.value ? props.collapseIcon : props.expandIcon);\n    const activatorDefaults = computed(() => ({\n      VListItem: {\n        active: isOpen.value,\n        activeColor: props.activeColor,\n        color: props.color,\n        prependIcon: props.prependIcon || props.subgroup && toggleIcon.value,\n        appendIcon: props.appendIcon || !props.subgroup && toggleIcon.value,\n        title: props.title,\n        value: props.value\n      }\n    }));\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-list-group', {\n        'v-list-group--prepend': list?.hasPrepend.value,\n        'v-list-group--fluid': props.fluid,\n        'v-list-group--subgroup': props.subgroup,\n        'v-list-group--open': isOpen.value\n      }]\n    }, {\n      default: () => [slots.activator && _createVNode(VDefaultsProvider, {\n        \"defaults\": activatorDefaults.value\n      }, {\n        default: () => [_createVNode(VListGroupActivator, null, {\n          default: () => [slots.activator({\n            props: activatorProps.value,\n            isOpen: isOpen.value\n          })]\n        })]\n      }), _createVNode(MaybeTransition, {\n        \"transition\": {\n          component: VExpandTransition\n        },\n        \"disabled\": !isBooted.value\n      }, {\n        default: () => [_withDirectives(_createVNode(\"div\", {\n          \"class\": \"v-list-group__items\",\n          \"role\": \"group\",\n          \"aria-labelledby\": id.value\n        }, [slots.default?.()]), [[_vShow, isOpen.value]])]\n      })]\n    }));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VDefaultsProvider","VExpandTransition","useList","IconValue","makeTagProps","MaybeTransition","useNestedGroupActivator","useNestedItem","useSsrBoot","computed","toRef","defineComponent","genericComponent","propsFactory","useRender","VListGroupActivator","name","setup","_","_ref","slots","default","makeVListGroupProps","activeColor","String","color","collapseIcon","type","expandIcon","prependIcon","appendIcon","fluid","Boolean","subgroup","value","VListGroup","props","title","_ref2","isOpen","open","id","_id","list","isBooted","onClick","e","activatorProps","class","toggleIcon","activatorDefaults","VListItem","active","hasPrepend","activator","_createVNode","component"],"sources":["../../../src/components/VList/VListGroup.tsx"],"sourcesContent":["// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandTransition } from '@/components/transitions'\n\n// Composables\nimport { useList } from './list'\nimport { IconValue } from '@/composables/icons'\nimport { makeTagProps } from '@/composables/tag'\nimport { MaybeTransition } from '@/composables/transition'\nimport { useNestedGroupActivator, useNestedItem } from '@/composables/nested/nested'\nimport { useSsrBoot } from '@/composables/ssrBoot'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent, genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VListGroupSlots = {\n  default: []\n  activator: [{ isOpen: boolean, props: Record<string, unknown> }]\n}\n\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n\n  setup (_, { slots }) {\n    useNestedGroupActivator()\n\n    return () => slots.default?.()\n  },\n})\n\nexport const makeVListGroupProps = propsFactory({\n  activeColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse',\n  },\n  expandIcon: {\n    type: IconValue,\n    default: '$expand',\n  },\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  value: null,\n\n  ...makeTagProps(),\n}, 'v-list-group')\n\nexport const VListGroup = genericComponent<VListGroupSlots>()({\n  name: 'VListGroup',\n\n  props: {\n    title: String,\n\n    ...makeVListGroupProps(),\n  },\n\n  setup (props, { slots }) {\n    const { isOpen, open, id: _id } = useNestedItem(toRef(props, 'value'), true)\n    const id = computed(() => `v-list-group--id-${String(_id.value)}`)\n    const list = useList()\n    const { isBooted } = useSsrBoot()\n\n    function onClick (e: Event) {\n      open(!isOpen.value, e)\n    }\n\n    const activatorProps = computed(() => ({\n      onClick,\n      class: 'v-list-group__header',\n      id: id.value,\n    }))\n\n    const toggleIcon = computed(() => isOpen.value ? props.collapseIcon : props.expandIcon)\n    const activatorDefaults = computed(() => ({\n      VListItem: {\n        active: isOpen.value,\n        activeColor: props.activeColor,\n        color: props.color,\n        prependIcon: props.prependIcon || (props.subgroup && toggleIcon.value),\n        appendIcon: props.appendIcon || (!props.subgroup && toggleIcon.value),\n        title: props.title,\n        value: props.value,\n      },\n    }))\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-group',\n          {\n            'v-list-group--prepend': list?.hasPrepend.value,\n            'v-list-group--fluid': props.fluid,\n            'v-list-group--subgroup': props.subgroup,\n            'v-list-group--open': isOpen.value,\n          },\n        ]}\n      >\n        { slots.activator && (\n          <VDefaultsProvider defaults={ activatorDefaults.value }>\n            <VListGroupActivator>\n              { slots.activator({ props: activatorProps.value, isOpen: isOpen.value }) }\n            </VListGroupActivator>\n          </VDefaultsProvider>\n        )}\n\n        <MaybeTransition transition={{ component: VExpandTransition }} disabled={ !isBooted.value }>\n          <div class=\"v-list-group__items\" role=\"group\" aria-labelledby={ id.value } v-show={ isOpen.value }>\n            { slots.default?.() }\n          </div>\n        </MaybeTransition>\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VListGroup = InstanceType<typeof VListGroup>\n"]},"metadata":{},"sourceType":"module"}