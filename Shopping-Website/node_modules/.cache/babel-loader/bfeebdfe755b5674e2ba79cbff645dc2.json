{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VItemGroup.css\"; // Composables\n\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { genericComponent } from \"../../util/index.mjs\";\nexport const VItemGroupSymbol = Symbol.for('vuetify:v-item-group');\nexport const VItemGroup = genericComponent()({\n  name: 'VItemGroup',\n  props: { ...makeGroupProps({\n      selectedClass: 'v-item--selected'\n    }),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      isSelected,\n      select,\n      next,\n      prev,\n      selected\n    } = useGroup(props, VItemGroupSymbol);\n    return () => _createVNode(props.tag, {\n      \"class\": ['v-item-group', themeClasses.value]\n    }, {\n      default: () => [slots.default?.({\n        isSelected,\n        select,\n        next,\n        prev,\n        selected: selected.value\n      })]\n    });\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AACA,0B,CAEA;;AAAA,SACSA,cADT,EACyBC,QADzB,QACiC,6BADjC;AACiC,SACxBC,YADwB,QACZ,2BADY;AACZ,SACZC,cADY,EACIC,YADJ,QACgB,6BADhB,C,CAGrB;;AAAA,SACSC,gBADT,QACyB,sBADzB;AAGA,OAAO,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,GAAPD,CAAW,sBAAXA,CAAzB;AAEP,OAAO,MAAME,UAAU,GAAGJ,gBAAgB,GAAG;EAC3CK,IAAI,EAAE,YADqC;EAG3CC,KAAK,EAAE,EACL,GAAGX,cAAc,CAAC;MAChBY,aAAa,EAAE;IADC,CAAD,CADZ;IAIL,GAAGV,YAAY,EAJV;IAKL,GAAGC,cAAc;EALZ,CAHoC;EAW3CU,KAAK,EAAE;IACL,qBAAsBC,KAAU,IAAK;EADhC,CAXoC;;EAe3CC,KAAKA,CAAEJ,KAAFI,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAM;MAAEE;IAAF,IAAmBd,YAAY,CAACO,KAAD,CAArC;IACA,MAAM;MAAEQ,UAAF;MAAcC,MAAd;MAAsBC,IAAtB;MAA4BC,IAA5B;MAAkCC;IAAlC,IAA+CtB,QAAQ,CAACU,KAAD,EAAQL,gBAAR,CAA7D;IAEA,OAAO;MAAA,SAEI,CACL,cADK,EAELY,YAAY,CAACJ,KAFR;IAFJ,GAKF;MAAAU,gBAECP,KAAK,CAACO,OAANP,GAAgB;QAChBE,UADgB;QAEhBC,MAFgB;QAGhBC,IAHgB;QAIhBC,IAJgB;QAKhBC,QAAQ,EAAEA,QAAQ,CAACT;MALH,CAAhBG,CAFD;IAAA,CALE,CAAP;EAgBF;;AAnC2C,CAAH,CAAnC","names":["makeGroupProps","useGroup","makeTagProps","makeThemeProps","provideTheme","genericComponent","VItemGroupSymbol","Symbol","for","VItemGroup","name","props","selectedClass","emits","value","setup","_ref","slots","themeClasses","isSelected","select","next","prev","selected","default"],"sources":["../../../src/components/VItemGroup/VItemGroup.tsx"],"sourcesContent":["// Styles\nimport './VItemGroup.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\nexport const VItemGroupSymbol = Symbol.for('vuetify:v-item-group')\n\nexport const VItemGroup = genericComponent()({\n  name: 'VItemGroup',\n\n  props: {\n    ...makeGroupProps({\n      selectedClass: 'v-item--selected',\n    }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VItemGroupSymbol)\n\n    return () => (\n      <props.tag\n        class={[\n          'v-item-group',\n          themeClasses.value,\n        ]}\n      >\n        { slots.default?.({\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value,\n        })}\n      </props.tag>\n    )\n  },\n})\n\nexport type VItemGroup = InstanceType<typeof VItemGroup>\n"]},"metadata":{},"sourceType":"module"}