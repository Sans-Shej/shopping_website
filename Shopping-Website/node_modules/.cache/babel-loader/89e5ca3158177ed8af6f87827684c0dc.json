{"ast":null,"code":"import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\"; // Styles\n\nimport \"./VCombobox.css\"; // Components\n\nimport { makeSelectProps } from \"../VSelect/VSelect.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { VTextField } from \"../VTextField/index.mjs\"; // Composables\n\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { makeFilterProps, useFilter } from \"../../composables/filter.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { transformItem, useItems } from \"../../composables/items.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utility\n\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue';\nimport { genericComponent, omit, useRender, wrapInArray } from \"../../util/index.mjs\";\nimport { makeVTextFieldProps } from \"../VTextField/VTextField.mjs\"; // Types\n\nfunction highlightResult(text, matches, length) {\n  if (matches == null) return text;\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented');\n  return typeof matches === 'number' && ~matches ? _createVNode(_Fragment, null, [_createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(0, matches)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__mask\"\n  }, [text.substr(matches, length)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(matches + length)])]) : text;\n}\n\nexport const VCombobox = genericComponent()({\n  name: 'VCombobox',\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    delimiters: Array,\n    ...makeFilterProps({\n      filterKeys: ['title']\n    }),\n    ...makeSelectProps({\n      hideNoData: true,\n      returnObject: true\n    }),\n    ...omit(makeVTextFieldProps({\n      modelValue: null\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({\n      transition: false\n    })\n  },\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': val => true,\n    'update:search': val => true,\n    'update:menu': val => true\n  },\n\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const isFocused = ref(false);\n    const isPristine = ref(true);\n    const vMenuRef = ref();\n\n    const _menu = useProxiedModel(props, 'menu');\n\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return;\n        _menu.value = v;\n      }\n    });\n    const selectionIndex = ref(-1);\n    let cleared = false;\n    const color = computed(() => vTextFieldRef.value?.color);\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(color);\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(wrapInArray(v)), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const form = useForm();\n\n    const _search = ref(!props.multiple ? model.value[0]?.title ?? '' : '');\n\n    const search = computed({\n      get: () => {\n        return _search.value;\n      },\n      set: val => {\n        _search.value = val;\n\n        if (!props.multiple) {\n          model.value = [transformItem(props, val)];\n        }\n\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`));\n\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim();\n              if (v) select(transformItem(props, v));\n            });\n            _search.value = '';\n          }\n        }\n\n        if (!val) selectionIndex.value = -1;\n        isPristine.value = !val;\n      }\n    });\n    watch(_search, value => {\n      if (cleared) {\n        // wait for clear to finish, VTextField sets _search to null\n        // then search computed triggers and updates _search to ''\n        nextTick(() => cleared = false);\n      } else if (isFocused.value && !menu.value) {\n        menu.value = true;\n      }\n\n      emit('update:search', value);\n    });\n    watch(model, value => {\n      if (!props.multiple) {\n        _search.value = value[0]?.title ?? '';\n      }\n    });\n    const {\n      filteredItems,\n      getMatches\n    } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value));\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v;\n      });\n    });\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !selections.value.some(s => s.value === filteredItem.value));\n      }\n\n      return filteredItems.value;\n    });\n    const selected = computed(() => selections.value.map(selection => selection.props.value));\n    const selection = computed(() => selections.value[selectionIndex.value]);\n    const listRef = ref();\n\n    function onClear(e) {\n      cleared = true;\n\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n\n    function onMousedownControl() {\n      if (props.hideNoData && !items.value.length || props.readonly || form?.isReadonly.value) return;\n      menu.value = true;\n    }\n\n    function onKeydown(e) {\n      if (props.readonly || form?.isReadonly.value) return;\n      const selectionStart = vTextFieldRef.value.selectionStart;\n      const length = selected.value.length;\n\n      if (selectionIndex.value > -1 || ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault();\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true;\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false;\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true;\n      }\n\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next');\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev');\n      }\n\n      if (!props.multiple) return;\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1;\n          }\n\n          return;\n        }\n\n        const originalSelectionIndex = selectionIndex.value;\n        if (selection.value) select(selection.value);\n        selectionIndex.value = originalSelectionIndex >= length - 1 ? length - 2 : originalSelectionIndex;\n      }\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return;\n        const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\n\n        if (selections.value[prev]) {\n          selectionIndex.value = prev;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length);\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return;\n        const next = selectionIndex.value + 1;\n\n        if (selections.value[next]) {\n          selectionIndex.value = next;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(0, 0);\n        }\n      }\n\n      if (e.key === 'Enter' && search.value) {\n        select(transformItem(props, search.value));\n        search.value = '';\n      }\n    }\n\n    function onAfterLeave() {\n      if (isFocused.value) isPristine.value = true;\n    }\n\n    function select(item) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value));\n\n        if (index === -1) {\n          model.value = [...model.value, item];\n        } else {\n          const value = [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        }\n\n        search.value = '';\n      } else {\n        model.value = [item];\n        _search.value = item.title; // watch for search watcher to trigger\n\n        nextTick(() => {\n          menu.value = false;\n          isPristine.value = true;\n        });\n      }\n    }\n\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n\n    function onFocusout(e) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus();\n      }\n    }\n\n    watch(filteredItems, val => {\n      if (!val.length && props.hideNoData) menu.value = false;\n    });\n    watch(isFocused, val => {\n      if (val) {\n        selectionIndex.value = -1;\n      } else {\n        menu.value = false;\n        if (!props.multiple || !search.value) return;\n        model.value = [...model.value, transformItem(props, search.value)];\n        search.value = '';\n      }\n    });\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots.prepend || slots.append || slots['no-data']);\n      const isDirty = model.value.length > 0;\n      const [textFieldProps] = VTextField.filterProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": [$event => search.value = $event, v => {\n          if (v == null) model.value = [];\n        }],\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": $event => isFocused.value = $event,\n        \"validationValue\": model.externalValue,\n        \"dirty\": isDirty,\n        \"class\": ['v-combobox', {\n          'v-combobox--active-menu': menu.value,\n          'v-combobox--chips': !!props.chips,\n          'v-combobox--selecting-index': selectionIndex.value > -1,\n          [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true\n        }],\n        \"appendInnerIcon\": props.items.length ? props.menuIcon : undefined,\n        \"readonly\": props.readonly,\n        \"placeholder\": isDirty ? undefined : props.placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onKeydown\": onKeydown\n      }), { ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-combobox__content\",\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterLeave\": onAfterLeave\n        }, props.menuProps), {\n          default: () => [hasList && _createVNode(VList, {\n            \"ref\": listRef,\n            \"selected\": selected.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onFocusin\": onFocusin,\n            \"onFocusout\": onFocusout\n          }, {\n            default: () => [!displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null)), slots['prepend-item']?.(), displayItems.value.map(item => slots.item?.({\n              item,\n              props: mergeProps(item.props, {\n                onClick: () => select(item)\n              })\n            }) ?? _createVNode(VListItem, _mergeProps({\n              \"key\": item.value\n            }, item.props, {\n              \"onClick\": () => select(item)\n            }), {\n              prepend: _ref2 => {\n                let {\n                  isSelected\n                } = _ref2;\n                return props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                  \"modelValue\": isSelected,\n                  \"ripple\": false,\n                  \"tabindex\": \"-1\"\n                }, null) : undefined;\n              },\n              title: () => {\n                return isPristine.value ? item.title : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0);\n              }\n            })), slots['append-item']?.()]\n          })]\n        }), selections.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item);\n          }\n\n          const slotProps = {\n            'onClick:close': onChipClose,\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": ['v-combobox__selection', index === selectionIndex.value && ['v-combobox__selection--selected', textColorClasses.value]],\n            \"style\": index === selectionIndex.value ? textColorStyles.value : {}\n          }, [hasChips ? !slots.chip ? _createVNode(VChip, _mergeProps({\n            \"key\": \"chip\",\n            \"closable\": props.closableChips,\n            \"size\": \"small\",\n            \"text\": item.title\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"chip-defaults\",\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slots.chip?.({\n              item,\n              index,\n              props: slotProps\n            })]\n          }) : slots.selection?.({\n            item,\n            index\n          }) ?? _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-text\"\n          }, [item.title, props.multiple && index < selections.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })])\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select\n    }, vTextFieldRef);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeSelectProps","VCheckboxBtn","VChip","VDefaultsProvider","VList","VListItem","VMenu","VTextField","forwardRefs","makeFilterProps","useFilter","makeTransitionProps","transformItem","useItems","useForm","useLocale","useProxiedModel","useTextColor","computed","mergeProps","nextTick","ref","watch","genericComponent","omit","useRender","wrapInArray","makeVTextFieldProps","highlightResult","text","matches","length","Array","isArray","Error","_createVNode","substr","VCombobox","name","props","delimiters","filterKeys","hideNoData","returnObject","modelValue","transition","emits","focused","val","setup","_ref","emit","slots","t","vTextFieldRef","isFocused","isPristine","vMenuRef","_menu","menu","get","value","set","v","Î¨openChildren","selectionIndex","cleared","color","items","transformIn","transformOut","textColorClasses","textColorStyles","model","transformed","multiple","form","_search","title","search","values","split","RegExp","join","forEach","trim","select","filteredItems","getMatches","undefined","selections","map","find","item","valueComparator","displayItems","hideSelected","filter","filteredItem","some","s","selected","selection","listRef","onClear","e","openOnClear","onMousedownControl","readonly","isReadonly","onKeydown","selectionStart","includes","key","preventDefault","focus","originalSelectionIndex","prev","setSelectionRange","next","onAfterLeave","index","findIndex","splice","onFocusin","onFocusout","relatedTarget","hasChips","chips","chip","hasList","prepend","append","isDirty","textFieldProps","filterProps","$event","externalValue","menuIcon","placeholder","default","eager","menuProps","noDataText","onClick","_ref2","isSelected","onChipClose","stopPropagation","slotProps","closableChips","closable","size"],"sources":["../../../src/components/VCombobox/VCombobox.tsx"],"sourcesContent":["// Styles\nimport './VCombobox.sass'\n\n// Components\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { transformItem, useItems } from '@/composables/items'\nimport { useForm } from '@/composables/form'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\n\n// Utility\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue'\nimport { genericComponent, omit, useRender, wrapInArray } from '@/util'\nimport { makeVTextFieldProps } from '@/components/VTextField/VTextField'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MakeSlots, SlotsToProps } from '@/util'\nimport type { FilterMatch } from '@/composables/filter'\nimport type { InternalItem } from '@/composables/items'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nfunction highlightResult (text: string, matches: FilterMatch | undefined, length: number) {\n  if (matches == null) return text\n\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-combobox__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-combobox__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-combobox__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = string | (T extends Primitive\n  ? T\n  : (ReturnObject extends true ? T : any))\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject>\n\nexport const VCombobox = genericComponent<new <\n  T,\n  ReturnObject extends boolean = true,\n  Multiple extends boolean = false,\n  V extends Value<T, ReturnObject, Multiple> = Value<T, ReturnObject, Multiple>\n>() => {\n  $props: {\n    items?: readonly T[]\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V\n    'onUpdate:modelValue'?: (val: V) => void\n  } & SlotsToProps<\n    Omit<VInputSlots & VFieldSlots, 'default'> & MakeSlots<{\n      item: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      chip: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      selection: [{ item: InternalItem<T>, index: number }]\n      'prepend-item': []\n      'append-item': []\n      'no-data': []\n    }>\n  >\n}>()({\n  name: 'VCombobox',\n\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    delimiters: Array as PropType<string[]>,\n\n    ...makeFilterProps({ filterKeys: ['title'] }),\n    ...makeSelectProps({ hideNoData: true, returnObject: true }),\n    ...omit(makeVTextFieldProps({\n      modelValue: null,\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({ transition: false }),\n  },\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (val: any) => true,\n    'update:search': (val: string) => true,\n    'update:menu': (val: boolean) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const isFocused = ref(false)\n    const isPristine = ref(true)\n    const vMenuRef = ref<VMenu>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return\n        _menu.value = v\n      },\n    })\n    const selectionIndex = ref(-1)\n    let cleared = false\n    const color = computed(() => vTextFieldRef.value?.color)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const form = useForm()\n    const _search = ref(!props.multiple ? model.value[0]?.title ?? '' : '')\n    const search = computed<string>({\n      get: () => {\n        return _search.value\n      },\n      set: val => {\n        _search.value = val\n        if (!props.multiple) {\n          model.value = [transformItem(props, val)]\n        }\n\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`))\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim()\n              if (v) select(transformItem(props, v))\n            })\n            _search.value = ''\n          }\n        }\n\n        if (!val) selectionIndex.value = -1\n\n        isPristine.value = !val\n      },\n    })\n    watch(_search, value => {\n      if (cleared) {\n        // wait for clear to finish, VTextField sets _search to null\n        // then search computed triggers and updates _search to ''\n        nextTick(() => (cleared = false))\n      } else if (isFocused.value && !menu.value) {\n        menu.value = true\n      }\n\n      emit('update:search', value)\n    })\n    watch(model, value => {\n      if (!props.multiple) {\n        _search.value = value[0]?.title ?? ''\n      }\n    })\n\n    const { filteredItems, getMatches } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value))\n\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v\n      })\n    })\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !selections.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n    const selection = computed(() => selections.value[selectionIndex.value])\n    const listRef = ref<VList>()\n\n    function onClear (e: MouseEvent) {\n      cleared = true\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (\n        (props.hideNoData && !items.value.length) ||\n        props.readonly || form?.isReadonly.value\n      ) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      const selectionStart = vTextFieldRef.value.selectionStart\n      const length = selected.value.length\n\n      if (\n        selectionIndex.value > -1 ||\n        ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true\n      }\n\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next')\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev')\n      }\n\n      if (!props.multiple) return\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1\n          }\n\n          return\n        }\n\n        const originalSelectionIndex = selectionIndex.value\n\n        if (selection.value) select(selection.value)\n\n        selectionIndex.value = originalSelectionIndex >= length - 1 ? (length - 2) : originalSelectionIndex\n      }\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (selections.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length)\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (selections.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(0, 0)\n        }\n      }\n\n      if (e.key === 'Enter' && search.value) {\n        select(transformItem(props, search.value))\n        search.value = ''\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) isPristine.value = true\n    }\n    function select (item: InternalItem) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n\n        search.value = ''\n      } else {\n        model.value = [item]\n        _search.value = item.title\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false\n          isPristine.value = true\n        })\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n\n    function onFocusout (e: FocusEvent) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    watch(filteredItems, val => {\n      if (!val.length && props.hideNoData) menu.value = false\n    })\n\n    watch(isFocused, val => {\n      if (val) {\n        selectionIndex.value = -1\n      } else {\n        menu.value = false\n\n        if (!props.multiple || !search.value) return\n\n        model.value = [...model.value, transformItem(props, search.value)]\n        search.value = ''\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!((!props.hideNoData || displayItems.value.length) || slots.prepend || slots.append || slots['no-data'])\n      const isDirty = model.value.length > 0\n      const [textFieldProps] = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          v-model={ search.value }\n          onUpdate:modelValue={ v => { if (v == null) model.value = [] } }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          dirty={ isDirty }\n          class={[\n            'v-combobox',\n            {\n              'v-combobox--active-menu': menu.value,\n              'v-combobox--chips': !!props.chips,\n              'v-combobox--selecting-index': selectionIndex.value > -1,\n              [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.items.length ? props.menuIcon : undefined }\n          readonly={ props.readonly }\n          placeholder={ isDirty ? undefined : props.placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-combobox__content\"\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                    >\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      { slots['prepend-item']?.() }\n\n                      { displayItems.value.map(item => slots.item?.({\n                        item,\n                        props: mergeProps(item.props, { onClick: () => select(item) }),\n                      }) ?? (\n                        <VListItem\n                          key={ item.value }\n                          { ...item.props }\n                          onClick={ () => select(item) }\n                        >\n                          {{\n                            prepend: ({ isSelected }) => props.multiple && !props.hideSelected ? (\n                              <VCheckboxBtn\n                                modelValue={ isSelected }\n                                ripple={ false }\n                                tabindex=\"-1\"\n                              />\n                            ) : undefined,\n                            title: () => {\n                              return isPristine.value\n                                ? item.title\n                                : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0)\n                            },\n                          }}\n                        </VListItem>\n                      ))}\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { selections.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-combobox__selection',\n                        index === selectionIndex.value && [\n                          'v-combobox__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slots.chip?.({ item, index, props: slotProps }) }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slots.selection?.({ item, index }) ?? (\n                          <span class=\"v-combobox__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < selections.value.length - 1) && (\n                              <span class=\"v-combobox__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VCombobox = InstanceType<typeof VCombobox>\n"]},"metadata":{},"sourceType":"module"}