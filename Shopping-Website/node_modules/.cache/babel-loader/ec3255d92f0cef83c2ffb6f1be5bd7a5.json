{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VSliderTrack.css\"; // Components\n\nimport { VSliderSymbol } from \"./slider.mjs\"; // Composables\n\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useRounded } from \"../../composables/rounded.mjs\"; // Utilities\n\nimport { computed, inject } from 'vue';\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VSliderTrack = genericComponent()({\n  name: 'VSliderTrack',\n  props: {\n    start: {\n      type: Number,\n      required: true\n    },\n    stop: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: {},\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const slider = inject(VSliderSymbol);\n    if (!slider) throw new Error('[Vuetify] v-slider-track must be inside v-slider or v-range-slider');\n    const {\n      color,\n      horizontalDirection,\n      parsedTicks,\n      rounded,\n      showTicks,\n      tickSize,\n      trackColor,\n      trackFillColor,\n      trackSize,\n      vertical,\n      min,\n      max\n    } = slider;\n    const {\n      roundedClasses\n    } = useRounded(rounded);\n    const {\n      backgroundColorClasses: trackFillColorClasses,\n      backgroundColorStyles: trackFillColorStyles\n    } = useBackgroundColor(trackFillColor);\n    const {\n      backgroundColorClasses: trackColorClasses,\n      backgroundColorStyles: trackColorStyles\n    } = useBackgroundColor(trackColor);\n    const startDir = computed(() => `inset-${vertical.value ? 'block-end' : 'inline-start'}`);\n    const endDir = computed(() => vertical.value ? 'height' : 'width');\n    const backgroundStyles = computed(() => {\n      return {\n        [startDir.value]: '0%',\n        [endDir.value]: '100%'\n      };\n    });\n    const trackFillWidth = computed(() => props.stop - props.start);\n    const trackFillStyles = computed(() => {\n      return {\n        [startDir.value]: convertToUnit(props.start, '%'),\n        [endDir.value]: convertToUnit(trackFillWidth.value, '%')\n      };\n    });\n    const computedTicks = computed(() => {\n      if (!showTicks.value) return [];\n      const ticks = vertical.value ? parsedTicks.value.slice().reverse() : parsedTicks.value;\n      return ticks.map((tick, index) => {\n        const directionProperty = vertical.value ? 'bottom' : 'margin-inline-start';\n        const directionValue = tick.value !== min.value && tick.value !== max.value ? convertToUnit(tick.position, '%') : undefined;\n        return _createVNode(\"div\", {\n          \"key\": tick.value,\n          \"class\": ['v-slider-track__tick', {\n            'v-slider-track__tick--filled': tick.position >= props.start && tick.position <= props.stop,\n            'v-slider-track__tick--first': tick.value === min.value,\n            'v-slider-track__tick--last': tick.value === max.value\n          }],\n          \"style\": {\n            [directionProperty]: directionValue\n          }\n        }, [(tick.label || slots['tick-label']) && _createVNode(\"div\", {\n          \"class\": \"v-slider-track__tick-label\"\n        }, [slots['tick-label']?.({\n          tick,\n          index\n        }) ?? tick.label])]);\n      });\n    });\n    useRender(() => {\n      return _createVNode(\"div\", {\n        \"class\": ['v-slider-track', roundedClasses.value],\n        \"style\": {\n          '--v-slider-track-size': convertToUnit(trackSize.value),\n          '--v-slider-tick-size': convertToUnit(tickSize.value),\n          direction: !vertical.value ? horizontalDirection.value : undefined\n        }\n      }, [_createVNode(\"div\", {\n        \"class\": ['v-slider-track__background', trackColorClasses.value, {\n          'v-slider-track__background--opacity': !!color.value || !trackFillColor.value\n        }],\n        \"style\": { ...backgroundStyles.value,\n          ...trackColorStyles.value\n        }\n      }, null), _createVNode(\"div\", {\n        \"class\": ['v-slider-track__fill', trackFillColorClasses.value],\n        \"style\": { ...trackFillStyles.value,\n          ...trackFillColorStyles.value\n        }\n      }, null), showTicks.value && _createVNode(\"div\", {\n        \"class\": ['v-slider-track__ticks', {\n          'v-slider-track__ticks--always-show': showTicks.value === 'always'\n        }]\n      }, [computedTicks.value])]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VSliderSymbol","useBackgroundColor","useRounded","computed","inject","convertToUnit","genericComponent","useRender","VSliderTrack","name","props","start","type","Number","required","stop","emits","setup","_ref","slots","slider","Error","color","horizontalDirection","parsedTicks","rounded","showTicks","tickSize","trackColor","trackFillColor","trackSize","vertical","min","max","roundedClasses","backgroundColorClasses","trackFillColorClasses","backgroundColorStyles","trackFillColorStyles","trackColorClasses","trackColorStyles","startDir","value","endDir","backgroundStyles","trackFillWidth","trackFillStyles","computedTicks","ticks","slice","reverse","map","tick","index","directionProperty","directionValue","position","undefined","label","_createVNode","direction"],"sources":["../../../src/components/VSlider/VSliderTrack.tsx"],"sourcesContent":["// Styles\nimport './VSliderTrack.sass'\n\n// Components\nimport { VSliderSymbol } from './slider'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { useRounded } from '@/composables/rounded'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\nexport type VSliderTrackSlots = {\n  'tick-label': []\n}\n\nexport const VSliderTrack = genericComponent<VSliderTrackSlots>()({\n  name: 'VSliderTrack',\n\n  props: {\n    start: {\n      type: Number,\n      required: true,\n    },\n    stop: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  emits: {},\n\n  setup (props, { slots }) {\n    const slider = inject(VSliderSymbol)\n\n    if (!slider) throw new Error('[Vuetify] v-slider-track must be inside v-slider or v-range-slider')\n\n    const {\n      color,\n      horizontalDirection,\n      parsedTicks,\n      rounded,\n      showTicks,\n      tickSize,\n      trackColor,\n      trackFillColor,\n      trackSize,\n      vertical,\n      min,\n      max,\n    } = slider\n\n    const { roundedClasses } = useRounded(rounded)\n\n    const {\n      backgroundColorClasses: trackFillColorClasses,\n      backgroundColorStyles: trackFillColorStyles,\n    } = useBackgroundColor(trackFillColor)\n\n    const {\n      backgroundColorClasses: trackColorClasses,\n      backgroundColorStyles: trackColorStyles,\n    } = useBackgroundColor(trackColor)\n\n    const startDir = computed(() => `inset-${vertical.value ? 'block-end' : 'inline-start'}`)\n    const endDir = computed(() => vertical.value ? 'height' : 'width')\n\n    const backgroundStyles = computed(() => {\n      return {\n        [startDir.value]: '0%',\n        [endDir.value]: '100%',\n      }\n    })\n\n    const trackFillWidth = computed(() => props.stop - props.start)\n\n    const trackFillStyles = computed(() => {\n      return {\n        [startDir.value]: convertToUnit(props.start, '%'),\n        [endDir.value]: convertToUnit(trackFillWidth.value, '%'),\n      }\n    })\n\n    const computedTicks = computed(() => {\n      if (!showTicks.value) return []\n\n      const ticks = vertical.value ? parsedTicks.value.slice().reverse() : parsedTicks.value\n\n      return ticks.map((tick, index) => {\n        const directionProperty = vertical.value ? 'bottom' : 'margin-inline-start'\n        const directionValue = tick.value !== min.value && tick.value !== max.value ? convertToUnit(tick.position, '%') : undefined\n\n        return (\n          <div\n            key={ tick.value }\n            class={[\n              'v-slider-track__tick',\n              {\n                'v-slider-track__tick--filled': tick.position >= props.start && tick.position <= props.stop,\n                'v-slider-track__tick--first': tick.value === min.value,\n                'v-slider-track__tick--last': tick.value === max.value,\n              },\n            ]}\n            style={{ [directionProperty]: directionValue }}\n          >\n            {\n              (tick.label || slots['tick-label']) && (\n                <div class=\"v-slider-track__tick-label\">\n                  { slots['tick-label']?.({ tick, index }) ?? tick.label }\n                </div>\n              )\n            }\n          </div>\n        )\n      })\n    })\n\n    useRender(() => {\n      return (\n        <div\n          class={[\n            'v-slider-track',\n            roundedClasses.value,\n          ]}\n          style={{\n            '--v-slider-track-size': convertToUnit(trackSize.value),\n            '--v-slider-tick-size': convertToUnit(tickSize.value),\n            direction: !vertical.value ? horizontalDirection.value : undefined,\n          }}\n        >\n          <div\n            class={[\n              'v-slider-track__background',\n              trackColorClasses.value,\n              {\n                'v-slider-track__background--opacity': !!color.value || !trackFillColor.value,\n              },\n            ]}\n            style={{\n              ...backgroundStyles.value,\n              ...trackColorStyles.value,\n            }}\n          />\n          <div\n            class={[\n              'v-slider-track__fill',\n              trackFillColorClasses.value,\n            ]}\n            style={{\n              ...trackFillStyles.value,\n              ...trackFillColorStyles.value,\n            }}\n          />\n\n          { showTicks.value && (\n            <div\n              class={[\n                'v-slider-track__ticks',\n                {\n                  'v-slider-track__ticks--always-show': showTicks.value === 'always',\n                },\n              ]}\n            >\n              { computedTicks.value }\n            </div>\n          )}\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSliderTrack = InstanceType<typeof VSliderTrack>\n"]},"metadata":{},"sourceType":"module"}