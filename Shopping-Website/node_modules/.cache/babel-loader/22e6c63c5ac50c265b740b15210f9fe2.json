{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Composables\n\nimport { makeVariantProps } from \"../../composables/variant.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\n\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nimport { toRef } from 'vue';\nexport const VToolbarItems = genericComponent()({\n  name: 'VToolbarItems',\n  props: makeVariantProps({\n    variant: 'text'\n  }),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    provideDefaults({\n      VBtn: {\n        color: toRef(props, 'color'),\n        height: 'inherit',\n        variant: toRef(props, 'variant')\n      }\n    });\n    useRender(() => _createVNode(\"div\", {\n      \"class\": \"v-toolbar-items\"\n    }, [slots.default?.()]));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AAAA,SACSA,gBADT,QACyB,+BADzB;AACyB,SAChBC,eADgB,QACD,gCADC,C,CAGzB;;AAAA,SACSC,gBADT,EAC2BC,SAD3B,QACoC,sBADpC;AAEA,SAASC,KAAT,QAAsB,KAAtB;AAEA,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,GAAG;EAC9CI,IAAI,EAAE,eADwC;EAG9CC,KAAK,EAAEP,gBAAgB,CAAC;IAAEQ,OAAO,EAAE;EAAX,CAAD,CAHuB;;EAK9CC,KAAKA,CAAEF,KAAFE,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvBT,eAAe,CAAC;MACdW,IAAI,EAAE;QACJC,KAAK,EAAET,KAAK,CAACG,KAAD,EAAQ,OAAR,CADR;QAEJO,MAAM,EAAE,SAFJ;QAGJN,OAAO,EAAEJ,KAAK,CAACG,KAAD,EAAQ,SAAR;MAHV;IADQ,CAAD,CAAfN;IAQAE,SAAS,CAAC;MAAA,SACG;IADH,GACoB,CACxBQ,KAAK,CAACI,OAANJ,IADwB,CADpB,CAAD,CAATR;IAMA,OAAO,EAAP;EACF;;AArB8C,CAAH,CAAtC","names":["makeVariantProps","provideDefaults","genericComponent","useRender","toRef","VToolbarItems","name","props","variant","setup","_ref","slots","VBtn","color","height","default"],"sources":["../../../src/components/VToolbar/VToolbarItems.tsx"],"sourcesContent":["// Composables\nimport { makeVariantProps } from '@/composables/variant'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\nexport const VToolbarItems = genericComponent()({\n  name: 'VToolbarItems',\n\n  props: makeVariantProps({ variant: 'text' }),\n\n  setup (props, { slots }) {\n    provideDefaults({\n      VBtn: {\n        color: toRef(props, 'color'),\n        height: 'inherit',\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => (\n      <div class=\"v-toolbar-items\">\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VToolbarItems = InstanceType<typeof VToolbarItems>\n"]},"metadata":{},"sourceType":"module"}