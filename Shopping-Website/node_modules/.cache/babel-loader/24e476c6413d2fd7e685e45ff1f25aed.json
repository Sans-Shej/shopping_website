{"ast":null,"code":"import { ref } from 'vue';\nimport { useField, useForm } from 'vee-validate';\nexport default {\n  name: 'app',\n\n  setup() {\n    const {\n      handleSubmit,\n      handleReset\n    } = useForm({\n      validationSchema: {\n        name(value) {\n          if (value?.length >= 2) return true;\n          return 'Name needs to be at least 2 characters.';\n        },\n\n        phone(value) {\n          if (value?.length >= 2) return true;\n          return 'Phone number needs to be at least 2 Characters.';\n        },\n\n        email(value) {\n          if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true;\n          return 'Must be a valid e-mail.';\n        },\n\n        password(value) {\n          if (value?.length >= 8) return true;\n          return 'Must be a valid password.';\n        },\n\n        confirmpassword(value) {\n          if (password.value.value === value) return true;\n          return \"Passwords don't match.\";\n        },\n\n        select(value) {\n          if (value) return true;\n          return 'Select an item.';\n        },\n\n        checkbox(value) {\n          if (value === '1') return true;\n          return 'Must be checked.';\n        }\n\n      }\n    });\n    const name = useField('name');\n    const username = useField('name');\n    const phone = useField('phone');\n    const email = useField('email');\n    const password = useField('password');\n    const confirmpassword = useField('confirmpassword');\n    const select = useField('select');\n    const checkbox = useField('checkbox');\n    const items = ref(['Item 1', 'Item 2', 'Item 3', 'Item 4']);\n    const submit = handleSubmit(values => {\n      alert(JSON.stringify(values, null, 2));\n    });\n    return {\n      name,\n      phone,\n      confirmpassword,\n      password,\n      username,\n      email,\n      select,\n      checkbox,\n      items,\n      submit,\n      handleReset\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAyCA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,cAAlC;AAEA,eAAe;EACXC,IAAI,EAAC,KADM;;EAEXC,KAAK,GAAG;IACJ,MAAM;MAAEC,YAAF;MAAgBC;IAAhB,IAAgCJ,OAAO,CAAC;MAC1CK,gBAAgB,EAAE;QACdJ,IAAI,CAACK,KAAD,EAAQ;UACR,IAAIA,KAAK,EAAEC,MAAP,IAAiB,CAArB,EAAwB,OAAO,IAAP;UAExB,OAAO,yCAAP;QACH,CALa;;QAQdC,KAAK,CAACF,KAAD,EAAQ;UACT,IAAIA,KAAK,EAAEC,MAAP,IAAiB,CAArB,EAAwB,OAAO,IAAP;UAExB,OAAO,iDAAP;QACH,CAZa;;QAadE,KAAK,CAACH,KAAD,EAAQ;UACT,IAAI,+BAA+BI,IAA/B,CAAoCJ,KAApC,CAAJ,EAAgD,OAAO,IAAP;UAEhD,OAAO,yBAAP;QACH,CAjBa;;QAkBdK,QAAQ,CAACL,KAAD,EAAQ;UACZ,IAAIA,KAAK,EAAEC,MAAP,IAAiB,CAArB,EAAwB,OAAO,IAAP;UAExB,OAAO,2BAAP;QACH,CAtBa;;QAwBdK,eAAe,CAACN,KAAD,EAAQ;UACnB,IAAIK,QAAQ,CAACL,KAAT,CAAeA,KAAf,KAAyBA,KAA7B,EAAoC,OAAO,IAAP;UACpC,OAAO,wBAAP;QACH,CA3Ba;;QA6BdO,MAAM,CAACP,KAAD,EAAQ;UACV,IAAIA,KAAJ,EAAW,OAAO,IAAP;UAEX,OAAO,iBAAP;QACH,CAjCa;;QAkCdQ,QAAQ,CAACR,KAAD,EAAQ;UACZ,IAAIA,KAAI,KAAM,GAAd,EAAmB,OAAO,IAAP;UAEnB,OAAO,kBAAP;QACH;;MAtCa;IADwB,CAAD,CAA7C;IA0CA,MAAML,IAAG,GAAIF,QAAQ,CAAC,MAAD,CAArB;IACA,MAAMgB,QAAO,GAAIhB,QAAQ,CAAC,MAAD,CAAzB;IACA,MAAMS,KAAI,GAAIT,QAAQ,CAAC,OAAD,CAAtB;IACA,MAAMU,KAAI,GAAIV,QAAQ,CAAC,OAAD,CAAtB;IACA,MAAMY,QAAO,GAAIZ,QAAQ,CAAC,UAAD,CAAzB;IACA,MAAMa,eAAc,GAAIb,QAAQ,CAAC,iBAAD,CAAhC;IACA,MAAMc,MAAK,GAAId,QAAQ,CAAC,QAAD,CAAvB;IACA,MAAMe,QAAO,GAAIf,QAAQ,CAAC,UAAD,CAAzB;IAEA,MAAMiB,KAAI,GAAIlB,GAAG,CAAC,CACd,QADc,EAEd,QAFc,EAGd,QAHc,EAId,QAJc,CAAD,CAAjB;IAOA,MAAMmB,MAAK,GAAId,YAAY,CAACe,MAAK,IAAK;MAClCC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;IACH,CAF0B,CAA3B;IAKA,OAAO;MAAEjB,IAAF;MAAQO,KAAR;MAAeI,eAAf;MAAgCD,QAAhC;MAA0CI,QAA1C;MAAoDN,KAApD;MAA2DI,MAA3D;MAAmEC,QAAnE;MAA6EE,KAA7E;MAAoFC,MAApF;MAA4Fb;IAA5F,CAAP;EACH;;AAnEU,CAAf","names":["ref","useField","useForm","name","setup","handleSubmit","handleReset","validationSchema","value","length","phone","email","test","password","confirmpassword","select","checkbox","username","items","submit","values","alert","JSON","stringify"],"sourceRoot":"","sources":["C:\\Users\\Sans\\Downloads\\Shopping-Website\\Shopping-Website\\src\\views\\Signup.vue"],"sourcesContent":["<template>\r\n    <div class=\"bg\">\r\n    <v-app>\r\n        <v-container class=\"center-screen\">\r\n            <v-card width=400 height=\"auto\" class=\"container-class\" flat color=\"transparent\">\r\n                <h2> Signup </h2>\r\n                <form @submit.prevent=\"submit\">\r\n                    <v-text-field v-model=\"name.value.value\" :counter=\"30\" :error-messages=\"name.errorMessage.value\"\r\n                        label=\"Name\"></v-text-field>\r\n\r\n                    <v-text-field v-model=\"phone.value.value\" :counter=\"10\" :error-messages=\"phone.errorMessage.value\"\r\n                        label=\"Username\"></v-text-field>\r\n\r\n                    <v-text-field v-model=\"email.value.value\" :error-messages=\"email.errorMessage.value\"\r\n                        label=\"E-mail\"></v-text-field>\r\n\r\n                    <v-text-field type=\"password\" v-model=\"password.value.value\" :counter=\"32\"\r\n                        :error-messages=\"password.errorMessage.value\" label=\"Password\"></v-text-field>\r\n\r\n                    <v-text-field type=\"password\" v-model=\"confirmpassword.value.value\"\r\n                        :error-messages=\"confirmpassword.errorMessage.value\" label=\"Confirm Password\"></v-text-field>\r\n\r\n\r\n                    <v-btn class=\"me-4\" type=\"submit\">\r\n                        submit\r\n                    </v-btn>\r\n\r\n                    <v-btn @click=\"handleReset\">\r\n                        clear\r\n                    </v-btn>\r\n\r\n                </form>\r\n            </v-card>\r\n        </v-container>\r\n    </v-app>\r\n    </div>\r\n<!-- </span> -->\r\n</template>\r\n\r\n<script>\r\n\r\nimport { ref } from 'vue'\r\nimport { useField, useForm } from 'vee-validate'\r\n\r\nexport default {\r\n    name:'app',\r\n    setup() {\r\n        const { handleSubmit, handleReset } = useForm({\r\n            validationSchema: {\r\n                name(value) {\r\n                    if (value?.length >= 2) return true\r\n\r\n                    return 'Name needs to be at least 2 characters.'\r\n                },\r\n\r\n\r\n                phone(value) {\r\n                    if (value?.length >= 2) return true\r\n\r\n                    return 'Phone number needs to be at least 2 Characters.'\r\n                },\r\n                email(value) {\r\n                    if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true\r\n\r\n                    return 'Must be a valid e-mail.'\r\n                },\r\n                password(value) {\r\n                    if (value?.length >= 8) return true\r\n\r\n                    return 'Must be a valid password.'\r\n                },\r\n\r\n                confirmpassword(value) {\r\n                    if (password.value.value === value) return true\r\n                    return \"Passwords don't match.\"\r\n                },\r\n\r\n                select(value) {\r\n                    if (value) return true\r\n\r\n                    return 'Select an item.'\r\n                },\r\n                checkbox(value) {\r\n                    if (value === '1') return true\r\n\r\n                    return 'Must be checked.'\r\n                },\r\n            },\r\n        })\r\n        const name = useField('name')\r\n        const username = useField('name')\r\n        const phone = useField('phone')\r\n        const email = useField('email')\r\n        const password = useField('password')\r\n        const confirmpassword = useField('confirmpassword')\r\n        const select = useField('select')\r\n        const checkbox = useField('checkbox')\r\n\r\n        const items = ref([\r\n            'Item 1',\r\n            'Item 2',\r\n            'Item 3',\r\n            'Item 4',\r\n        ])\r\n\r\n        const submit = handleSubmit(values => {\r\n            alert(JSON.stringify(values, null, 2))\r\n        })\r\n\r\n\r\n        return { name, phone, confirmpassword, password, username, email, select, checkbox, items, submit, handleReset }\r\n    },\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.center-screen {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    min-height: 100vh;\r\n    /* background-color: aqua; */\r\n\r\n}\r\n.bg {\r\n  background: url('https://ohlaladani.com.br/wp-content/uploads/wallpaper-OHLALADANI_DESKTOP_WALLPAPERS_AVENTURA-2.jpg');\r\n  background-size: cover;\r\n  background-color: blue;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}