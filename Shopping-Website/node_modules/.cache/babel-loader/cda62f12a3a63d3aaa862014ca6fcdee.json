{"ast":null,"code":"import { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VBanner.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VBannerActions } from \"./VBannerActions.mjs\";\nimport { VBannerText } from \"./VBannerText.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useDisplay } from \"../../composables/display.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\"; // Utilities\n\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nimport { toRef } from 'vue'; // Types\n\nexport const VBanner = genericComponent()({\n  name: 'VBanner',\n  props: {\n    avatar: String,\n    color: String,\n    icon: IconValue,\n    lines: String,\n    stacked: Boolean,\n    sticky: Boolean,\n    text: String,\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      mobile\n    } = useDisplay();\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const color = toRef(props, 'color');\n    const density = toRef(props, 'density');\n    provideDefaults({\n      VBannerActions: {\n        color,\n        density\n      }\n    });\n    useRender(() => {\n      const hasText = !!(props.text || slots.text);\n      const hasPrependMedia = !!(props.avatar || props.icon);\n      const hasPrepend = !!(hasPrependMedia || slots.prepend);\n      return _createVNode(props.tag, {\n        \"class\": ['v-banner', {\n          'v-banner--stacked': props.stacked || mobile.value,\n          'v-banner--sticky': props.sticky,\n          [`v-banner--${props.lines}-line`]: !!props.lines\n        }, borderClasses.value, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, themeClasses.value],\n        \"style\": [dimensionStyles.value, locationStyles.value],\n        \"role\": \"banner\"\n      }, {\n        default: () => [hasPrepend && _createVNode(\"div\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-banner__prepend\"\n        }, [!slots.prepend ? _createVNode(VAvatar, {\n          \"key\": \"prepend-avatar\",\n          \"color\": color.value,\n          \"density\": density.value,\n          \"icon\": props.icon,\n          \"image\": props.avatar\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend-defaults\",\n          \"disabled\": !hasPrependMedia,\n          \"defaults\": {\n            VAvatar: {\n              color: color.value,\n              density: density.value,\n              icon: props.icon,\n              image: props.avatar\n            }\n          }\n        }, slots.prepend)]), _createVNode(\"div\", {\n          \"class\": \"v-banner__content\"\n        }, [hasText && _createVNode(VBannerText, {\n          \"key\": \"text\"\n        }, {\n          default: () => [slots.text?.() ?? props.text]\n        }), slots.default?.()]), slots.actions && _createVNode(VBannerActions, {\n          \"key\": \"actions\"\n        }, slots.actions)]\n      });\n    });\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VAvatar","VBannerActions","VBannerText","VDefaultsProvider","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","provideDefaults","useDisplay","IconValue","genericComponent","useRender","toRef","VBanner","name","props","avatar","String","color","icon","lines","stacked","Boolean","sticky","text","setup","_ref","slots","borderClasses","densityClasses","mobile","dimensionStyles","elevationClasses","locationStyles","positionClasses","roundedClasses","themeClasses","density","hasText","hasPrependMedia","hasPrepend","prepend","value","default","_createVNode","image","actions"],"sources":["../../../src/components/VBanner/VBanner.tsx"],"sourcesContent":["// Styles\nimport './VBanner.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VBannerActions } from './VBannerActions'\nimport { VBannerText } from './VBannerText'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useDisplay } from '@/composables/display'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { genericComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\nexport type VBannerSlots = MakeSlots<{\n  default: []\n  prepend: []\n  text: []\n  actions: []\n}>\n\nexport const VBanner = genericComponent<VBannerSlots>()({\n  name: 'VBanner',\n\n  props: {\n    avatar: String,\n    color: String,\n    icon: IconValue,\n    lines: String as PropType<'one' | 'two' | 'three'>,\n    stacked: Boolean,\n    sticky: Boolean,\n    text: String,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { mobile } = useDisplay()\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n\n    const { themeClasses } = provideTheme(props)\n\n    const color = toRef(props, 'color')\n    const density = toRef(props, 'density')\n\n    provideDefaults({ VBannerActions: { color, density } })\n\n    useRender(() => {\n      const hasText = !!(props.text || slots.text)\n      const hasPrependMedia = !!(props.avatar || props.icon)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n\n      return (\n        <props.tag\n          class={[\n            'v-banner',\n            {\n              'v-banner--stacked': props.stacked || mobile.value,\n              'v-banner--sticky': props.sticky,\n              [`v-banner--${props.lines}-line`]: !!props.lines,\n            },\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n          ]}\n          style={[\n            dimensionStyles.value,\n            locationStyles.value,\n          ]}\n          role=\"banner\"\n        >\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-banner__prepend\">\n              { !slots.prepend ? (\n                <VAvatar\n                  key=\"prepend-avatar\"\n                  color={ color.value }\n                  density={ density.value }\n                  icon={ props.icon }\n                  image={ props.avatar }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      color: color.value,\n                      density: density.value,\n                      icon: props.icon,\n                      image: props.avatar,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-banner__content\">\n            { hasText && (\n              <VBannerText key=\"text\">\n                { slots.text?.() ?? props.text }\n              </VBannerText>\n            )}\n\n            { slots.default?.() }\n          </div>\n\n          { slots.actions && (\n            <VBannerActions key=\"actions\" v-slots:default={ slots.actions } />\n          )}\n        </props.tag>\n      )\n    })\n  },\n})\n\nexport type VBanner = InstanceType<typeof VBanner>\n"]},"metadata":{},"sourceType":"module"}