{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VAvatar.css\"; // Components\n\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'flat'\n  })\n}, 'v-avatar');\nexport const VAvatar = genericComponent()({\n  name: 'VAvatar',\n  props: makeVAvatarProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-avatar', {\n        'v-avatar--start': props.start,\n        'v-avatar--end': props.end\n      }, themeClasses.value, colorClasses.value, densityClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],\n      \"style\": [colorStyles.value, sizeStyles.value]\n    }, {\n      default: () => [props.image ? _createVNode(VImg, {\n        \"key\": \"image\",\n        \"src\": props.image,\n        \"alt\": \"\",\n        \"cover\": true\n      }, null) : props.icon ? _createVNode(VIcon, {\n        \"key\": \"icon\",\n        \"icon\": props.icon\n      }, null) : slots.default?.(), genOverlays(false, 'v-avatar')]\n    }));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AACA,uB,CAEA;;AAAA,SACSA,KADT,QACc,oBADd;AACc,SACLC,IADK,QACD,mBADC,C,CAGd;;AAAA,SACSC,WADT,EACsBC,gBADtB,EACwCC,UADxC,QACkD,+BADlD;AACkD,SACzCC,SADyC,QAChC,6BADgC;AAChC,SACTC,gBADS,EACSC,UADT,QACmB,+BADnB;AACmB,SAC5BC,gBAD4B,EACVC,UADU,QACA,+BADA;AACA,SAC5BC,aAD4B,EACbC,OADa,QACN,4BADM;AACN,SACtBC,YADsB,QACV,2BADU;AACV,SACZC,cADY,EACIC,YADJ,QACgB,6BADhB,C,CAGrB;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,EACyCC,SADzC,QACkD,sBADlD;AAGA,OAAO,MAAMC,gBAAgB,GAAGF,YAAY,CAAC;EAC3CG,KAAK,EAAEC,OADoC;EAE3CC,GAAG,EAAED,OAFsC;EAG3CE,IAAI,EAAEjB,SAHqC;EAI3CkB,KAAK,EAAEC,MAJoC;EAM3C,GAAGlB,gBAAgB,EANwB;EAO3C,GAAGE,gBAAgB,EAPwB;EAQ3C,GAAGE,aAAa,EAR2B;EAS3C,GAAGE,YAAY,EAT4B;EAU3C,GAAGC,cAAc,EAV0B;EAW3C,GAAGV,gBAAgB,CAAC;IAAEsB,OAAO,EAAE;EAAX,CAAD;AAXwB,CAAD,EAYzC,UAZyC,CAArC;AAcP,OAAO,MAAMC,OAAO,GAAGX,gBAAgB,GAAG;EACxCY,IAAI,EAAE,SADkC;EAGxCC,KAAK,EAAEV,gBAAgB,EAHiB;;EAKxCW,KAAKA,CAAED,KAAFC,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAM;MAAEE;IAAF,IAAmBlB,YAAY,CAACc,KAAD,CAArC;IACA,MAAM;MAAEK,YAAF;MAAgBC,WAAhB;MAA6BC;IAA7B,IAAgD/B,UAAU,CAACwB,KAAD,CAAhE;IACA,MAAM;MAAEQ;IAAF,IAAqB7B,UAAU,CAACqB,KAAD,CAArC;IACA,MAAM;MAAES;IAAF,IAAqB5B,UAAU,CAACmB,KAAD,CAArC;IACA,MAAM;MAAEU,WAAF;MAAeC;IAAf,IAA8B5B,OAAO,CAACiB,KAAD,CAA3C;IAEAX,SAAS,CAAC;MAAA,SAEC,CACL,UADK,EAEL;QACE,mBAAmBW,KAAK,CAACT,KAD3B;QAEE,iBAAiBS,KAAK,CAACP;MAFzB,CAFK,EAMLW,YAAY,CAACQ,KANR,EAOLP,YAAY,CAACO,KAPR,EAQLJ,cAAc,CAACI,KARV,EASLH,cAAc,CAACG,KATV,EAULF,WAAW,CAACE,KAVP,EAWLL,cAAc,CAACK,KAXV,CAFD;MAcL,SACM,CACLN,WAAW,CAACM,KADP,EAELD,UAAU,CAACC,KAFN;IAfD,GAkBL;MAAAC,gBAECb,KAAK,CAACL,KAANK,GAAWc;QAAA,OACE,OADF;QACS,OAAOd,KAAK,CAACL,KADtB;QAC2B,OAAO,EADlC;QACoC;MADpC,GACoC,IADpC,CAAXK,GAEEA,KAAK,CAACN,IAANM,GAAUc;QAAA,OACI,MADJ;QACU,QAAQd,KAAK,CAACN;MADxB,GAC4B,IAD5B,CAAVM,GAEEG,KAAK,CAACU,OAANV,IANL,EASC7B,WAAW,CAAC,KAAD,EAAQ,UAAR,CATZ;IAAA,CAlBK,CAAD,CAATe;IA+BA,OAAO,EAAP;EACF;;AA5CwC,CAAH,CAAhC","names":["VIcon","VImg","genOverlays","makeVariantProps","useVariant","IconValue","makeDensityProps","useDensity","makeRoundedProps","useRounded","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","genericComponent","propsFactory","useRender","makeVAvatarProps","start","Boolean","end","icon","image","String","variant","VAvatar","name","props","setup","_ref","slots","themeClasses","colorClasses","colorStyles","variantClasses","densityClasses","roundedClasses","sizeClasses","sizeStyles","value","default","_createVNode"],"sources":["../../../src/components/VAvatar/VAvatar.tsx"],"sourcesContent":["// Styles\nimport './VAvatar.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'flat' } as const),\n}, 'v-avatar')\n\nexport const VAvatar = genericComponent()({\n  name: 'VAvatar',\n\n  props: makeVAvatarProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-avatar',\n          {\n            'v-avatar--start': props.start,\n            'v-avatar--end': props.end,\n          },\n          themeClasses.value,\n          colorClasses.value,\n          densityClasses.value,\n          roundedClasses.value,\n          sizeClasses.value,\n          variantClasses.value,\n        ]}\n        style={[\n          colorStyles.value,\n          sizeStyles.value,\n        ]}\n      >\n        { props.image\n          ? (<VImg key=\"image\" src={ props.image } alt=\"\" cover />)\n          : props.icon\n            ? (<VIcon key=\"icon\" icon={ props.icon } />)\n            : slots.default?.()\n        }\n\n        { genOverlays(false, 'v-avatar') }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VAvatar = InstanceType<typeof VAvatar>\n"]},"metadata":{},"sourceType":"module"}