{"ast":null,"code":"import { resolveDirective as _resolveDirective, createVNode as _createVNode, mergeProps as _mergeProps, Fragment as _Fragment } from \"vue\"; // Styles\n\nimport \"./VFileInput.css\"; // Components\n\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\"; // Composables\n\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\n\nimport { computed, nextTick, ref, watch } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, humanReadableFileSize, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\n\nexport const VFileInput = genericComponent()({\n  name: 'VFileInput',\n  inheritAttrs: false,\n  props: {\n    chips: Boolean,\n    counter: Boolean,\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize'\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter'\n    },\n    multiple: Boolean,\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: v => {\n        return typeof v === 'boolean' || [1000, 1024].includes(v);\n      }\n    },\n    ...makeVInputProps({\n      prependIcon: '$file'\n    }),\n    modelValue: {\n      type: Array,\n      default: () => [],\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object');\n      }\n    },\n    ...makeVFieldProps({\n      clearable: true\n    })\n  },\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': files => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined);\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, _ref2) => {\n      let {\n        size = 0\n      } = _ref2;\n      return bytes + size;\n    }, 0));\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value));\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const {\n        name = '',\n        size = 0\n      } = file;\n      return !props.showSize ? name : `${name} (${humanReadableFileSize(size, base.value)})`;\n    }));\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0;\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);else return t(props.counterString, fileCount);\n    });\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus();\n      }\n\n      if (!isFocused.value) focus();\n    }\n\n    function onClickPrepend(e) {\n      onControlClick(e);\n    }\n\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n\n    function onControlClick(e) {\n      inputRef.value?.click();\n      emit('click:control', e);\n    }\n\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = [];\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length;\n\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = '';\n      }\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const [{\n        modelValue: _,\n        ...inputProps\n      }] = VInput.filterProps(props);\n      const [fieldProps] = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": \"v-file-input\",\n        \"onClick:prepend\": onClickPrepend\n      }, rootAttrs, inputProps, {\n        \"focused\": isFocused.value\n      }), { ...slots,\n        default: _ref3 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref3;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"prepend-icon\": props.prependIcon,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isDirty.value || isFocused.value,\n            \"dirty\": isDirty.value,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), { ...slots,\n            default: _ref4 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref4;\n              return _createVNode(_Fragment, null, [_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"type\": \"file\",\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"multiple\": props.multiple,\n                \"name\": props.name,\n                \"onClick\": e => {\n                  e.stopPropagation();\n                  onFocus();\n                },\n                \"onChange\": e => {\n                  if (!e.target) return;\n                  const target = e.target;\n                  model.value = [...(target.files ?? [])];\n                },\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), _createVNode(\"div\", {\n                \"class\": fieldClass\n              }, [!!model.value?.length && (slots.selection ? slots.selection({\n                fileNames: fileNames.value,\n                totalBytes: totalBytes.value,\n                totalBytesReadable: totalBytesReadable.value\n              }) : props.chips ? fileNames.value.map(text => _createVNode(VChip, {\n                \"key\": text,\n                \"size\": \"small\",\n                \"color\": props.color\n              }, {\n                default: () => [text]\n              })) : fileNames.value.join(', '))])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": !!model.value?.length,\n          \"value\": counterValue.value\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["filterFieldProps","makeVFieldProps","makeVInputProps","VInput","VChip","VCounter","VField","forwardRefs","useFocus","useLocale","useProxiedModel","computed","nextTick","ref","watch","callEvent","filterInputAttrs","genericComponent","humanReadableFileSize","useRender","wrapInArray","VFileInput","name","inheritAttrs","props","chips","Boolean","counter","counterSizeString","type","String","default","counterString","multiple","showSize","Number","validator","v","includes","prependIcon","modelValue","Array","val","every","clearable","emits","e","focused","files","setup","_ref","attrs","emit","slots","t","model","isFocused","focus","blur","base","undefined","totalBytes","value","reduce","bytes","_ref2","size","totalBytesReadable","fileNames","map","file","counterValue","fileCount","length","vInputRef","vFieldRef","inputRef","onFocus","document","activeElement","onClickPrepend","onControlClick","onControlMousedown","click","onClear","stopPropagation","newValue","hasModelReset","isArray","hasCounter","hasDetails","details","rootAttrs","inputAttrs","_","inputProps","filterProps","fieldProps","$event","_ref3","id","isDisabled","isDirty","isReadonly","isValid","_ref4","class","fieldClass","slotProps","target","_createVNode","selection","text","color","join"],"sources":["../../../src/components/VFileInput/VFileInput.tsx"],"sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from '@/components/VField/VField'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VChip } from '@/components/VChip'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useFocus } from '@/composables/focus'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, nextTick, ref, watch } from 'vue'\nimport {\n  callEvent,\n  filterInputAttrs,\n  genericComponent,\n  humanReadableFileSize,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nexport type VFileInputSlots = VInputSlots & VFieldSlots & MakeSlots<{\n  counter: []\n}>\n\nexport const VFileInput = genericComponent<VFileInputSlots>()({\n  name: 'VFileInput',\n\n  inheritAttrs: false,\n\n  props: {\n    chips: Boolean,\n    counter: Boolean,\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    multiple: Boolean,\n    showSize: {\n      type: [Boolean, Number] as PropType<boolean | 1000 | 1024>,\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    },\n\n    ...makeVInputProps({ prependIcon: '$file' }),\n\n    modelValue: {\n      type: Array as PropType<File[]>,\n      default: () => ([]),\n      validator: (val: any) => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    },\n\n    ...makeVFieldProps({ clearable: true }),\n  },\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'mousedown:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (files: File[]) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined)\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, { size = 0 }) => bytes + size, 0))\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value))\n\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const { name = '', size = 0 } = file\n\n      return !props.showSize\n        ? name\n        : `${name} (${humanReadableFileSize(size, base.value)})`\n    }))\n\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value)\n      else return t(props.counterString, fileCount)\n    })\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const inputRef = ref<HTMLInputElement>()\n    function onFocus () {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus()\n      }\n\n      if (!isFocused.value) focus()\n    }\n    function onClickPrepend (e: MouseEvent) {\n      onControlClick(e)\n    }\n    function onControlMousedown (e: MouseEvent) {\n      emit('mousedown:control', e)\n    }\n    function onControlClick (e: MouseEvent) {\n      inputRef.value?.click()\n\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = []\n\n        callEvent(props['onClick:clear'], e)\n      })\n    }\n\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length\n\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = ''\n      }\n    })\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter)\n      const hasDetails = !!(hasCounter || slots.details)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [{ modelValue: _, ...inputProps }] = VInput.filterProps(props)\n      const [fieldProps] = filterFieldProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class=\"v-file-input\"\n          onClick:prepend={ onClickPrepend }\n          { ...rootAttrs }\n          { ...inputProps }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                prepend-icon={ props.prependIcon }\n                onMousedown={ onControlMousedown }\n                onClick={ onControlClick }\n                onClick:clear={ onClear }\n                onClick:prependInner={ props['onClick:prependInner'] }\n                onClick:appendInner={ props['onClick:appendInner'] }\n                { ...fieldProps }\n                id={ id.value }\n                active={ isDirty.value || isFocused.value }\n                dirty={ isDirty.value }\n                disabled={ isDisabled.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      <input\n                        ref={ inputRef }\n                        type=\"file\"\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        multiple={ props.multiple }\n                        name={ props.name }\n                        onClick={ e => {\n                          e.stopPropagation()\n\n                          onFocus()\n                        }}\n                        onChange={ e => {\n                          if (!e.target) return\n\n                          const target = e.target as HTMLInputElement\n                          model.value = [...target.files ?? []]\n                        }}\n                        onFocus={ onFocus }\n                        onBlur={ blur }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      <div class={ fieldClass }>\n                        { !!model.value?.length && (\n                          slots.selection ? slots.selection({\n                            fileNames: fileNames.value,\n                            totalBytes: totalBytes.value,\n                            totalBytesReadable: totalBytesReadable.value,\n                          })\n                          : props.chips ? fileNames.value.map(text => (\n                            <VChip\n                              key={ text }\n                              size=\"small\"\n                              color={ props.color }\n                            >{ text }</VChip>\n                          ))\n                          : fileNames.value.join(', ')\n                        )}\n                      </div>\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasDetails ? slotProps => (\n              <>\n                { slots.details?.(slotProps) }\n\n                { hasCounter && (\n                  <>\n                    <span />\n\n                    <VCounter\n                      active={ !!model.value?.length }\n                      value={ counterValue.value }\n                      v-slots:default={ slots.counter }\n                    />\n                  </>\n                )}\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef)\n  },\n})\n\nexport type VFileInput = InstanceType<typeof VFileInput>\n"]},"metadata":{},"sourceType":"module"}