{"ast":null,"code":"import Vue from 'vue';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n/** Define a default action to perform after authentication */\n\nconst DEFAULT_REDIRECT_CALLBACK = () => window.history.replaceState({}, document.title, window.location.pathname);\n\nlet instance;\n/** Returns the current instance of the SDK */\n\nexport const getInstance = () => instance;\n/** Creates an instance of the Auth0 SDK. If one has already been created, it returns that instance */\n\nexport const useAuth0 = ({\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  redirectUri = window.location.origin,\n  ...options\n}) => {\n  if (instance) return instance; // The 'instance' is simply a Vue object\n\n  instance = new Vue({\n    data() {\n      return {\n        loading: true,\n        isAuthenticated: false,\n        user: {},\n        auth0Client: null,\n        popupOpen: false,\n        error: null\n      };\n    },\n\n    methods: {\n      /** Authenticates the user using a popup window */\n      async loginWithPopup(o) {\n        this.popupOpen = true;\n\n        try {\n          await this.auth0Client.loginWithPopup(o);\n        } catch (e) {\n          // eslint-disable-next-line\n          console.error(e);\n        } finally {\n          this.popupOpen = false;\n        }\n\n        this.user = await this.auth0Client.getUser();\n        this.isAuthenticated = true;\n      },\n\n      /** Handles the callback when logging in using a redirect */\n      async handleRedirectCallback() {\n        this.loading = true;\n\n        try {\n          await this.auth0Client.handleRedirectCallback();\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = true;\n        } catch (e) {\n          this.error = e;\n        } finally {\n          this.loading = false;\n        }\n      },\n\n      /** Authenticates the user using the redirect method */\n      loginWithRedirect(o) {\n        return this.auth0Client.loginWithRedirect(o);\n      },\n\n      /** Returns all the claims present in the ID token */\n      getIdTokenClaims(o) {\n        return this.auth0Client.getIdTokenClaims(o);\n      },\n\n      /** Returns the access token. If the token is invalid or missing, a new one is retrieved */\n      getTokenSilently(o) {\n        return this.auth0Client.getTokenSilently(o);\n      },\n\n      /** Gets the access token using a popup window */\n      getTokenWithPopup(o) {\n        return this.auth0Client.getTokenWithPopup(o);\n      },\n\n      /** Logs the user out and removes their session on the authorization server */\n      logout(o) {\n        return this.auth0Client.logout(o);\n      }\n\n    },\n\n    /** Use this lifecycle method to instantiate the SDK client */\n    async created() {\n      // Create a new instance of the SDK client using members of the given options object\n      this.auth0Client = await createAuth0Client({\n        domain: options.domain,\n        client_id: options.clientId,\n        audience: options.audience,\n        redirect_uri: redirectUri\n      });\n\n      try {\n        // If the user is returning to the app after authentication..\n        if (window.location.search.includes('code=') && window.location.search.includes('state=')) {\n          // handle the redirect and retrieve tokens\n          const {\n            appState\n          } = await this.auth0Client.handleRedirectCallback(); // Notify subscribers that the redirect callback has happened, passing the appState\n          // (useful for retrieving any pre-authentication state)\n\n          onRedirectCallback(appState);\n        }\n      } catch (e) {\n        this.error = e;\n      } finally {\n        // Initialize the internal authentication state\n        this.isAuthenticated = await this.auth0Client.isAuthenticated();\n        this.user = await this.auth0Client.getUser();\n        this.loading = false;\n      }\n    }\n\n  });\n  return instance;\n}; // Create a simple Vue plugin to expose the wrapper object throughout the application\n\nexport const Auth0Plugin = {\n  install(Vue, options) {\n    Vue.prototype.$auth = useAuth0(options);\n  }\n\n};","map":{"version":3,"names":["Vue","createAuth0Client","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","instance","getInstance","useAuth0","onRedirectCallback","redirectUri","origin","options","data","loading","isAuthenticated","user","auth0Client","popupOpen","error","methods","loginWithPopup","o","e","console","getUser","handleRedirectCallback","loginWithRedirect","getIdTokenClaims","getTokenSilently","getTokenWithPopup","logout","created","domain","client_id","clientId","audience","redirect_uri","search","includes","appState","Auth0Plugin","install","prototype","$auth"],"sources":["C:/Users/Sans/Downloads/Shopping-Website/Shopping-Website/src/auth/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\n/** Define a default action to perform after authentication */\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nlet instance;\r\n\r\n/** Returns the current instance of the SDK */\r\nexport const getInstance = () => instance;\r\n\r\n/** Creates an instance of the Auth0 SDK. If one has already been created, it returns that instance */\r\nexport const useAuth0 = ({\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  redirectUri = window.location.origin,\r\n  ...options\r\n}) => {\r\n    if (instance) return instance;\r\n  \r\n    // The 'instance' is simply a Vue object\r\n    instance = new Vue({\r\n      data() {\r\n        return {\r\n          loading: true,\r\n          isAuthenticated: false,\r\n          user: {},\r\n          auth0Client: null,\r\n          popupOpen: false,\r\n          error: null,\r\n        };\r\n      },\r\n      methods: {\r\n        /** Authenticates the user using a popup window */\r\n        async loginWithPopup(o) {\r\n          this.popupOpen = true;\r\n  \r\n          try {\r\n            await this.auth0Client.loginWithPopup(o);\r\n          } catch (e) {\r\n            // eslint-disable-next-line\r\n            console.error(e);\r\n          } finally {\r\n            this.popupOpen = false;\r\n          }\r\n  \r\n          this.user = await this.auth0Client.getUser();\r\n          this.isAuthenticated = true;\r\n        },\r\n\r\n       /** Handles the callback when logging in using a redirect */\r\n      async handleRedirectCallback() {\r\n        this.loading = true;\r\n        try {\r\n          await this.auth0Client.handleRedirectCallback();\r\n          this.user = await this.auth0Client.getUser();\r\n          this.isAuthenticated = true;\r\n        } catch (e) {\r\n          this.error = e;\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      /** Authenticates the user using the redirect method */\r\n      loginWithRedirect(o) {\r\n        return this.auth0Client.loginWithRedirect(o);\r\n      },\r\n      /** Returns all the claims present in the ID token */\r\n      getIdTokenClaims(o) {\r\n        return this.auth0Client.getIdTokenClaims(o);\r\n      },\r\n      /** Returns the access token. If the token is invalid or missing, a new one is retrieved */\r\n      getTokenSilently(o) {\r\n        return this.auth0Client.getTokenSilently(o);\r\n      },\r\n      /** Gets the access token using a popup window */\r\n\r\n      getTokenWithPopup(o) {\r\n        return this.auth0Client.getTokenWithPopup(o);\r\n      },\r\n      /** Logs the user out and removes their session on the authorization server */\r\n      logout(o) {\r\n        return this.auth0Client.logout(o);\r\n      },\r\n    },\r\n    /** Use this lifecycle method to instantiate the SDK client */\r\n    async created() {\r\n      // Create a new instance of the SDK client using members of the given options object\r\n      this.auth0Client = await createAuth0Client({\r\n        domain: options.domain,\r\n        client_id: options.clientId,\r\n        audience: options.audience,\r\n        redirect_uri: redirectUri,\r\n      });\r\n\r\n      try {\r\n        // If the user is returning to the app after authentication..\r\n        if (\r\n          window.location.search.includes('code=') &&\r\n          window.location.search.includes('state=')\r\n        ) {\r\n          // handle the redirect and retrieve tokens\r\n          const { appState } = await this.auth0Client.handleRedirectCallback();\r\n\r\n          // Notify subscribers that the redirect callback has happened, passing the appState\r\n          // (useful for retrieving any pre-authentication state)\r\n          onRedirectCallback(appState);\r\n        }\r\n      } catch (e) {\r\n        this.error = e;\r\n      } finally {\r\n        // Initialize the internal authentication state\r\n        this.isAuthenticated = await this.auth0Client.isAuthenticated();\r\n        this.user = await this.auth0Client.getUser();\r\n        this.loading = false;\r\n      }\r\n    },\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\n// Create a simple Vue plugin to expose the wrapper object throughout the application\r\nexport const Auth0Plugin = {\r\n  install(Vue, options) {\r\n    Vue.prototype.$auth = useAuth0(options);\r\n  },\r\n}; "],"mappings":"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"},"metadata":{},"sourceType":"module"}