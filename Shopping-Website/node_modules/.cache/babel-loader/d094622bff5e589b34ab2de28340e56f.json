{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"mappings":";;uBACIA,oBAEM,KAFN","names":["_createElementBlock"],"sourceRoot":"","sources":["C:\\Users\\Sans\\Downloads\\Shopping-Website\\Shopping-Website\\src\\views\\Signup.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        \r\n    }\r\n</script>\r\n\r\n<style >\r\n\r\n</style>\r\n<!-- <template>\r\n    \r\n    <v-app>\r\n        <v-container class=\"center-screen\">\r\n            <v-card width=400 height=\"auto\" class=\"container-class\" flat color=\"transparent\">\r\n                <h2> Signup </h2>\r\n                <form @submit.prevent=\"submit\">\r\n                    <v-text-field v-model=\"name.value.value\" :counter=\"30\" :error-messages=\"name.errorMessage.value\"\r\n                        label=\"Name\"></v-text-field>\r\n\r\n                    <v-text-field v-model=\"phone.value.value\" :counter=\"10\" :error-messages=\"phone.errorMessage.value\"\r\n                        label=\"Username\"></v-text-field>\r\n\r\n                    <v-text-field v-model=\"email.value.value\" :error-messages=\"email.errorMessage.value\"\r\n                        label=\"E-mail\"></v-text-field>\r\n\r\n                    <v-text-field type=\"password\" v-model=\"password.value.value\" :counter=\"32\"\r\n                        :error-messages=\"password.errorMessage.value\" label=\"Password\"></v-text-field>\r\n\r\n                    <v-text-field type=\"password\" v-model=\"confirmpassword.value.value\"\r\n                        :error-messages=\"confirmpassword.errorMessage.value\" label=\"Confirm Password\"></v-text-field>\r\n\r\n\r\n                    <v-btn class=\"me-4\" type=\"submit\">\r\n                        submit\r\n                    </v-btn>\r\n\r\n                    <v-btn @click=\"handleReset\">\r\n                        clear\r\n                    </v-btn>\r\n\r\n                </form>\r\n            </v-card>\r\n        </v-container>\r\n    </v-app>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { ref } from 'vue'\r\nimport { useField, useForm } from 'vee-validate'\r\n\r\nexport default {\r\n    setup() {\r\n        const { handleSubmit, handleReset } = useForm({\r\n            validationSchema: {\r\n                name(value) {\r\n                    if (value?.length >= 2) return true\r\n\r\n                    return 'Name needs to be at least 2 characters.'\r\n                },\r\n\r\n\r\n                phone(value) {\r\n                    if (value?.length >= 2) return true\r\n\r\n                    return 'Phone number needs to be at least 2 Characters.'\r\n                },\r\n                email(value) {\r\n                    if (/^[a-z.-]+@[a-z.-]+\\.[a-z]+$/i.test(value)) return true\r\n\r\n                    return 'Must be a valid e-mail.'\r\n                },\r\n                password(value) {\r\n                    if (value?.length >= 8) return true\r\n\r\n                    return 'Must be a valid password.'\r\n                },\r\n\r\n                confirmpassword(value) {\r\n                    if (password.value.value === value) return true\r\n                    return \"Passwords don't match.\"\r\n                },\r\n\r\n                select(value) {\r\n                    if (value) return true\r\n\r\n                    return 'Select an item.'\r\n                },\r\n                checkbox(value) {\r\n                    if (value === '1') return true\r\n\r\n                    return 'Must be checked.'\r\n                },\r\n            },\r\n        })\r\n        const name = useField('name')\r\n        const username = useField('name')\r\n        const phone = useField('phone')\r\n        const email = useField('email')\r\n        const password = useField('password')\r\n        const confirmpassword = useField('confirmpassword')\r\n        const select = useField('select')\r\n        const checkbox = useField('checkbox')\r\n\r\n        const items = ref([\r\n            'Item 1',\r\n            'Item 2',\r\n            'Item 3',\r\n            'Item 4',\r\n        ])\r\n\r\n        const submit = handleSubmit(values => {\r\n            alert(JSON.stringify(values, null, 2))\r\n        })\r\n\r\n\r\n        return { name, phone, confirmpassword, password, username, email, select, checkbox, items, submit, handleReset }\r\n    },\r\n\r\n  \r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.center-screen {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    min-height: 100vh;\r\n}\r\n</style> -->"]},"metadata":{},"sourceType":"module"}