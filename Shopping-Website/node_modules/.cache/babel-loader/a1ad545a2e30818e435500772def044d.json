{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VSwitch.css\"; // Components\n\nimport { makeSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { VProgressCircular } from \"../VProgressCircular/index.mjs\"; // Composables\n\nimport { LoaderSlot, useLoader } from \"../../composables/loader.mjs\";\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utility\n\nimport { computed, ref } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VSwitch = genericComponent()({\n  name: 'VSwitch',\n  inheritAttrs: false,\n  props: {\n    indeterminate: Boolean,\n    inset: Boolean,\n    flat: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    ...makeVInputProps(),\n    ...makeSelectionControlProps()\n  },\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': () => true,\n    'update:indeterminate': val => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const indeterminate = useProxiedModel(props, 'indeterminate');\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const loaderColor = computed(() => {\n      return typeof props.loading === 'string' && props.loading !== '' ? props.loading : props.color;\n    });\n    const uid = getUid();\n    const id = computed(() => props.id || `switch-${uid}`);\n\n    function onChange() {\n      if (indeterminate.value) {\n        indeterminate.value = false;\n      }\n    }\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs);\n      const [inputProps, _1] = VInput.filterProps(props);\n      const [controlProps, _2] = VSelectionControl.filterProps(props);\n      const control = ref();\n\n      function onClick(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        control.value?.input?.click();\n      }\n\n      return _createVNode(VInput, _mergeProps({\n        \"class\": ['v-switch', {\n          'v-switch--inset': props.inset\n        }, {\n          'v-switch--indeterminate': indeterminate.value\n        }, loaderClasses.value]\n      }, inputAttrs, inputProps, {\n        \"id\": id.value,\n        \"focused\": isFocused.value\n      }), { ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            messagesId,\n            isDisabled,\n            isReadonly,\n            isValid\n          } = _ref2;\n          return _createVNode(VSelectionControl, _mergeProps({\n            \"ref\": control\n          }, controlProps, {\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": [$event => model.value = $event, onChange],\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"type\": \"checkbox\",\n            \"aria-checked\": indeterminate.value ? 'mixed' : undefined,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value,\n            \"onFocus\": focus,\n            \"onBlur\": blur\n          }, controlAttrs), { ...slots,\n            default: () => _createVNode(\"div\", {\n              \"class\": \"v-switch__track\",\n              \"onClick\": onClick\n            }, null),\n            input: _ref3 => {\n              let {\n                textColorClasses,\n                textColorStyles\n              } = _ref3;\n              return _createVNode(\"div\", {\n                \"class\": ['v-switch__thumb', textColorClasses.value],\n                \"style\": textColorStyles.value\n              }, [props.loading && _createVNode(LoaderSlot, {\n                \"name\": \"v-switch\",\n                \"active\": true,\n                \"color\": isValid.value === false ? undefined : loaderColor.value\n              }, {\n                default: slotProps => slots.loader ? slots.loader(slotProps) : _createVNode(VProgressCircular, {\n                  \"active\": slotProps.isActive,\n                  \"color\": slotProps.color,\n                  \"indeterminate\": true,\n                  \"size\": \"16\",\n                  \"width\": \"2\"\n                }, null)\n              })]);\n            }\n          });\n        }\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeSelectionControlProps","VSelectionControl","makeVInputProps","VInput","VProgressCircular","LoaderSlot","useLoader","useFocus","useProxiedModel","computed","ref","filterInputAttrs","genericComponent","getUid","useRender","VSwitch","name","inheritAttrs","props","indeterminate","Boolean","inset","flat","loading","type","String","default","emits","focused","update:modelValue","val","setup","_ref","attrs","slots","model","loaderClasses","isFocused","focus","blur","loaderColor","color","uid","id","onChange","value","inputAttrs","controlAttrs","inputProps","_1","filterProps","controlProps","_2","control","onClick","e","stopPropagation","preventDefault","input","click","_ref2","messagesId","isDisabled","isReadonly","isValid","$event","undefined","_ref3","textColorClasses","textColorStyles","_createVNode","slotProps","loader","isActive"],"sources":["../../../src/components/VSwitch/VSwitch.tsx"],"sourcesContent":["// Styles\nimport './VSwitch.sass'\n\n// Components\nimport { makeSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Composables\nimport { LoaderSlot, useLoader } from '@/composables/loader'\nimport { useFocus } from '@/composables/focus'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, ref } from 'vue'\nimport { filterInputAttrs, genericComponent, getUid, useRender } from '@/util'\n\n// Types\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { MakeSlots } from '@/util'\n\nexport type VSwitchSlots =\n  & VInputSlots\n  & VSelectionControlSlots\n  & MakeSlots<{ loader: [LoaderSlotProps] }>\n\nexport const VSwitch = genericComponent<VSwitchSlots>()({\n  name: 'VSwitch',\n\n  inheritAttrs: false,\n\n  props: {\n    indeterminate: Boolean,\n    inset: Boolean,\n    flat: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n\n    ...makeVInputProps(),\n    ...makeSelectionControlProps(),\n  },\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': () => true,\n    'update:indeterminate': (val: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n    const { loaderClasses } = useLoader(props)\n    const { isFocused, focus, blur } = useFocus(props)\n\n    const loaderColor = computed(() => {\n      return typeof props.loading === 'string' && props.loading !== ''\n        ? props.loading\n        : props.color\n    })\n\n    const uid = getUid()\n    const id = computed(() => props.id || `switch-${uid}`)\n\n    function onChange () {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = VInput.filterProps(props)\n      const [controlProps, _2] = VSelectionControl.filterProps(props)\n      const control = ref<VSelectionControl>()\n\n      function onClick (e: Event) {\n        e.stopPropagation()\n        e.preventDefault()\n        control.value?.input?.click()\n      }\n\n      return (\n        <VInput\n          class={[\n            'v-switch',\n            { 'v-switch--inset': props.inset },\n            { 'v-switch--indeterminate': indeterminate.value },\n            loaderClasses.value,\n          ]}\n          { ...inputAttrs }\n          { ...inputProps }\n          id={ id.value }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n              isValid,\n            }) => (\n              <VSelectionControl\n                ref={ control }\n                { ...controlProps }\n                v-model={ model.value }\n                id={ id.value }\n                aria-describedby={ messagesId.value }\n                type=\"checkbox\"\n                onUpdate:modelValue={ onChange }\n                aria-checked={ indeterminate.value ? 'mixed' : undefined }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                onFocus={ focus }\n                onBlur={ blur }\n                { ...controlAttrs }\n              >\n                {{\n                  ...slots,\n                  default: () => (<div class=\"v-switch__track\" onClick={ onClick }></div>),\n                  input: ({ textColorClasses, textColorStyles }) => (\n                    <div\n                      class={[\n                        'v-switch__thumb',\n                        textColorClasses.value,\n                      ]}\n                      style={ textColorStyles.value }\n                    >\n                      { props.loading && (\n                        <LoaderSlot\n                          name=\"v-switch\"\n                          active\n                          color={ isValid.value === false ? undefined : loaderColor.value }\n                        >\n                          { slotProps => (\n                            slots.loader\n                              ? slots.loader(slotProps)\n                              : (\n                                  <VProgressCircular\n                                    active={ slotProps.isActive }\n                                    color={ slotProps.color }\n                                    indeterminate\n                                    size=\"16\"\n                                    width=\"2\"\n                                  />\n                              )\n                          )}\n                        </LoaderSlot>\n                      )}\n                    </div>\n                  ),\n                }}\n              </VSelectionControl>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSwitch = InstanceType<typeof VSwitch>\n"]},"metadata":{},"sourceType":"module"}