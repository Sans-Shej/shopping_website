{"ast":null,"code":"import { mergeProps as _mergeProps, Fragment as _Fragment, vShow as _vShow, withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n/* eslint-disable complexity */\n// Styles\n\nimport \"./VChip.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VChipGroupSymbol } from \"../VChipGroup/VChipGroup.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VExpandXTransition } from \"../transitions/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { EventProp, genericComponent } from \"../../util/index.mjs\";\nimport { computed } from 'vue'; // Types\n\nexport const VChip = genericComponent()({\n  name: 'VChip',\n  directives: {\n    Ripple\n  },\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$delete'\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close'\n    },\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete'\n    },\n    label: Boolean,\n    link: {\n      type: Boolean,\n      default: undefined\n    },\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    onClick: EventProp(),\n    onClickOnce: EventProp(),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'span'\n    }),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'tonal'\n    })\n  },\n  emits: {\n    'click:close': e => true,\n    'update:modelValue': value => true,\n    'group:selected': val => true,\n    click: e => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const isActive = useProxiedModel(props, 'modelValue');\n    const group = useGroupItem(props, VChipGroupSymbol, false);\n    const link = useLink(props, attrs);\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (!!group || props.link || link.isClickable.value));\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n\n      onClick(e) {\n        isActive.value = false;\n        emit('click:close', e);\n      }\n\n    }));\n\n    function onClick(e) {\n      emit('click', e);\n      if (!isClickable.value) return;\n      link.navigate?.(e);\n      group?.toggle();\n    }\n\n    function onKeyDown(e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        onClick(e);\n      }\n    }\n\n    return () => {\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar);\n      const hasAppend = !!(hasAppendMedia || slots.append);\n      const hasClose = !!(slots.close || props.closable);\n      const hasFilter = !!(slots.filter || props.filter) && group;\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar);\n      const hasPrepend = !!(hasPrependMedia || slots.prepend);\n      const hasColor = !group || group.isSelected.value;\n      return isActive.value && _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-chip', {\n          'v-chip--disabled': props.disabled,\n          'v-chip--label': props.label,\n          'v-chip--link': isClickable.value,\n          'v-chip--filter': hasFilter,\n          'v-chip--pill': props.pill\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value, group?.selectedClass.value],\n        \"style\": [hasColor ? colorStyles.value : undefined],\n        \"disabled\": props.disabled || undefined,\n        \"draggable\": props.draggable,\n        \"href\": link.href.value,\n        \"tabindex\": isClickable.value ? 0 : undefined,\n        \"onClick\": onClick,\n        \"onKeydown\": isClickable.value && !isLink.value && onKeyDown\n      }, {\n        default: () => [genOverlays(isClickable.value, 'v-chip'), hasFilter && _createVNode(VExpandXTransition, {\n          \"key\": \"filter\"\n        }, {\n          default: () => [_withDirectives(_createVNode(\"div\", {\n            \"class\": \"v-chip__filter\"\n          }, [!slots.filter ? _createVNode(VIcon, {\n            \"key\": \"filter-icon\",\n            \"icon\": props.filterIcon\n          }, null) : _withDirectives(_createVNode(VDefaultsProvider, {\n            \"key\": \"filter-defaults\",\n            \"disabled\": !props.filterIcon,\n            \"defaults\": {\n              VIcon: {\n                icon: props.filterIcon\n              }\n            }\n          }, null), [[_resolveDirective(\"slot\"), slots.filter, \"default\"]])]), [[_vShow, group.isSelected.value]])]\n        }), hasPrepend && _createVNode(\"div\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-chip__prepend\"\n        }, [!slots.prepend ? _createVNode(_Fragment, null, [props.prependIcon && _createVNode(VIcon, {\n          \"key\": \"prepend-icon\",\n          \"icon\": props.prependIcon,\n          \"start\": true\n        }, null), props.prependAvatar && _createVNode(VAvatar, {\n          \"key\": \"prepend-avatar\",\n          \"image\": props.prependAvatar,\n          \"start\": true\n        }, null)]) : _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend-defaults\",\n          \"disabled\": !hasPrependMedia,\n          \"defaults\": {\n            VAvatar: {\n              image: props.prependAvatar,\n              start: true\n            },\n            VIcon: {\n              icon: props.prependIcon,\n              start: true\n            }\n          }\n        }, slots.prepend)]), slots.default?.({\n          isSelected: group?.isSelected.value,\n          selectedClass: group?.selectedClass.value,\n          select: group?.select,\n          toggle: group?.toggle,\n          value: group?.value.value,\n          disabled: props.disabled\n        }) ?? props.text, hasAppend && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-chip__append\"\n        }, [!slots.append ? _createVNode(_Fragment, null, [props.appendIcon && _createVNode(VIcon, {\n          \"key\": \"append-icon\",\n          \"end\": true,\n          \"icon\": props.appendIcon\n        }, null), props.appendAvatar && _createVNode(VAvatar, {\n          \"key\": \"append-avatar\",\n          \"end\": true,\n          \"image\": props.appendAvatar\n        }, null)]) : _createVNode(VDefaultsProvider, {\n          \"key\": \"append-defaults\",\n          \"disabled\": !hasAppendMedia,\n          \"defaults\": {\n            VAvatar: {\n              end: true,\n              image: props.appendAvatar\n            },\n            VIcon: {\n              end: true,\n              icon: props.appendIcon\n            }\n          }\n        }, slots.append)]), hasClose && _createVNode(\"div\", _mergeProps({\n          \"key\": \"close\",\n          \"class\": \"v-chip__close\"\n        }, closeProps.value), [!slots.close ? _createVNode(VIcon, {\n          \"key\": \"close-icon\",\n          \"icon\": props.closeIcon,\n          \"size\": \"x-small\"\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"close-defaults\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.closeIcon,\n              size: 'x-small'\n            }\n          }\n        }, slots.close)])]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value && props.ripple, null]]);\n    };\n  }\n\n});","map":{"version":3,"mappings":";AAAA;AACA;;AACA,qB,CAEA;;AAAA,SACSA,OADT,QACgB,sBADhB;AACgB,SACPC,gBADO,QACS,8BADT;AACS,SAChBC,iBADgB,QACC,gCADD;AACC,SACjBC,kBADiB,QACC,0BADD;AACC,SAClBC,KADkB,QACb,oBADa,C,CAG3B;;AAAA,SACSC,WADT,EACsBC,gBADtB,EACwCC,UADxC,QACkD,+BADlD;AACkD,SACzCC,eADyC,EACxBC,SADwB,QACf,8BADe;AACf,SAC1BC,gBAD0B,EACRC,UADQ,QACE,+BADF;AACE,SAC5BC,kBAD4B,EACRC,YADQ,QACI,iCADJ;AACI,SAChCC,kBADgC,EACZC,YADY,QACA,6BADA;AACA,SAChCC,gBADgC,EACdC,UADc,QACJ,+BADI;AACJ,SAC5BC,eAD4B,EACXC,OADW,QACJ,8BADI;AACJ,SACxBC,aADwB,EACTC,OADS,QACF,4BADE;AACF,SACtBC,YADsB,QACV,2BADU;AACV,SACZC,cADY,EACIC,YADJ,QACgB,6BADhB;AACgB,SAC5BC,eAD4B,QACb,oCADa;AACb,SACfC,SADe,QACN,6BADM;AACN,SACTC,SADS,QACA,8BADA,C,CAGlB;;AAAA,SACSC,MADT,QACe,mCADf,C,CAGA;;AAAA,SACSC,SADT,EACoBC,gBADpB,QACoC,sBADpC;AAEA,SAASC,QAAT,QAAyB,KAAzB,C,CAEA;;AAUA,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,GAAe;EAClDG,IAAI,EAAE,OAD4C;EAGlDC,UAAU,EAAE;IAAEN;EAAF,CAHsC;EAKlDO,KAAK,EAAE;IACLC,WAAW,EAAEC,MADR;IAELC,YAAY,EAAED,MAFT;IAGLE,UAAU,EAAEb,SAHP;IAILc,QAAQ,EAAEC,OAJL;IAKLC,SAAS,EAAE;MACTC,IAAI,EAAEjB,SADG;MAETkB,OAAO,EAAE;IAFA,CALN;IASLC,UAAU,EAAE;MACVF,IAAI,EAAEN,MADI;MAEVO,OAAO,EAAE;IAFC,CATP;IAaLE,SAAS,EAAEL,OAbN;IAcLM,MAAM,EAAEN,OAdH;IAeLO,UAAU,EAAE;MACVL,IAAI,EAAEN,MADI;MAEVO,OAAO,EAAE;IAFC,CAfP;IAmBLK,KAAK,EAAER,OAnBF;IAoBLS,IAAI,EAAE;MACJP,IAAI,EAAEF,OADF;MAEJG,OAAO,EAAEO;IAFL,CApBD;IAwBLC,IAAI,EAAEX,OAxBD;IAyBLY,aAAa,EAAEhB,MAzBV;IA0BLiB,WAAW,EAAE5B,SA1BR;IA2BL6B,MAAM,EAAE;MACNZ,IAAI,EAAEF,OADA;MAENG,OAAO,EAAE;IAFH,CA3BH;IA+BLY,IAAI,EAAEnB,MA/BD;IAgCLoB,UAAU,EAAE;MACVd,IAAI,EAAEF,OADI;MAEVG,OAAO,EAAE;IAFC,CAhCP;IAqCLc,OAAO,EAAE7B,SAAS,EArCb;IAsCL8B,WAAW,EAAE9B,SAAS,EAtCjB;IAwCL,GAAGrB,eAAe,EAxCb;IAyCL,GAAGE,gBAAgB,EAzCd;IA0CL,GAAGE,kBAAkB,EA1ChB;IA2CL,GAAGE,kBAAkB,EA3ChB;IA4CL,GAAGE,gBAAgB,EA5Cd;IA6CL,GAAGE,eAAe,EA7Cb;IA8CL,GAAGE,aAAa,EA9CX;IA+CL,GAAGE,YAAY,CAAC;MAAEsC,GAAG,EAAE;IAAP,CAAD,CA/CV;IAgDL,GAAGrC,cAAc,EAhDZ;IAiDL,GAAGjB,gBAAgB,CAAC;MAAEuD,OAAO,EAAE;IAAX,CAAD;EAjDd,CAL2C;EAyDlDC,KAAK,EAAE;IACL,eAAgBC,CAAa,IAAK,IAD7B;IAEL,qBAAsBC,KAAc,IAAK,IAFpC;IAGL,kBAAmBC,GAAuB,IAAK,IAH1C;IAILC,KAAK,EAAGH,CAA6B,IAAK;EAJrC,CAzD2C;;EAgElDI,KAAKA,CAAEhC,KAAFgC,EAAOC,IAAPD,EAAiC;IAAA,IAAxB;MAAEE,KAAF;MAASC,IAAT;MAAeC;IAAf,IAAsBH,IAAE;IACpC,MAAM;MAAEI;IAAF,IAAQ7C,SAAS,EAAvB;IACA,MAAM;MAAE8C;IAAF,IAAoBhE,SAAS,CAAC0B,KAAD,CAAnC;IACA,MAAM;MAAEuC,YAAF;MAAgBC,WAAhB;MAA6BC;IAA7B,IAAgDrE,UAAU,CAAC4B,KAAD,CAAhE;IACA,MAAM;MAAE0C;IAAF,IAAqBlE,UAAU,CAACwB,KAAD,CAArC;IACA,MAAM;MAAE2C;IAAF,IAAuBjE,YAAY,CAACsB,KAAD,CAAzC;IACA,MAAM;MAAE4C;IAAF,IAAqB9D,UAAU,CAACkB,KAAD,CAArC;IACA,MAAM;MAAE6C;IAAF,IAAkB3D,OAAO,CAACc,KAAD,CAA/B;IACA,MAAM;MAAE8C;IAAF,IAAmBzD,YAAY,CAACW,KAAD,CAArC;IAEA,MAAM+C,QAAQ,GAAGzD,eAAe,CAACU,KAAD,EAAQ,YAAR,CAAhC;IACA,MAAMgD,KAAK,GAAGpE,YAAY,CAACoB,KAAD,EAAQlC,gBAAR,EAA0B,KAA1B,CAA1B;IACA,MAAMiD,IAAI,GAAG/B,OAAO,CAACgB,KAAD,EAAQkC,KAAR,CAApB;IACA,MAAMe,MAAM,GAAGrD,QAAQ,CAAC,MAAMI,KAAK,CAACe,IAANf,KAAe,KAAfA,IAAwBe,IAAI,CAACkC,MAALlC,CAAYc,KAA3C,CAAvB;IACA,MAAMqB,WAAW,GAAGtD,QAAQ,CAAC,MAC3B,CAACI,KAAK,CAACmD,QAAP,IACAnD,KAAK,CAACe,IAANf,KAAe,KADf,KAEC,CAAC,CAACgD,KAAF,IAAWhD,KAAK,CAACe,IAAjB,IAAyBA,IAAI,CAACmC,WAALnC,CAAiBc,KAF3C,CAD0B,CAA5B;IAKA,MAAMuB,UAAU,GAAGxD,QAAQ,CAAC,OAAO;MACjC,cAAcyC,CAAC,CAACrC,KAAK,CAACU,UAAP,CADkB;;MAEjCa,OAAOA,CAAEK,CAAFL,EAAiB;QACtBwB,QAAQ,CAAClB,KAATkB,GAAiB,KAAjBA;QAEAZ,IAAI,CAAC,aAAD,EAAgBP,CAAhB,CAAJO;MACF;;IANiC,CAAP,CAAD,CAA3B;;IASA,SAASZ,OAAT,CAAkBK,CAAlB,EAAiC;MAC/BO,IAAI,CAAC,OAAD,EAAUP,CAAV,CAAJO;MAEA,IAAI,CAACe,WAAW,CAACrB,KAAjB,EAAwB;MAExBd,IAAI,CAACsC,QAALtC,GAAgBa,CAAhBb;MACAiC,KAAK,EAAEM,MAAPN;IACF;;IAEA,SAASO,SAAT,CAAoB3B,CAApB,EAAsC;MACpC,IAAIA,CAAC,CAAC4B,GAAF5B,KAAU,OAAVA,IAAqBA,CAAC,CAAC4B,GAAF5B,KAAU,GAAnC,EAAwC;QACtCA,CAAC,CAAC6B,cAAF7B;QACAL,OAAO,CAACK,CAAD,CAAPL;MACF;IACF;;IAEA,OAAO,MAAM;MACX,MAAMmC,GAAG,GAAI3C,IAAI,CAACkC,MAALlC,CAAYc,KAAZd,GAAqB,GAArBA,GAA2Bf,KAAK,CAACyB,GAA9C;MACA,MAAMkC,cAAc,GAAG,CAAC,EAAE3D,KAAK,CAACI,UAANJ,IAAoBA,KAAK,CAACG,YAA5B,CAAxB;MACA,MAAMyD,SAAS,GAAG,CAAC,EAAED,cAAc,IAAIvB,KAAK,CAACyB,MAA1B,CAAnB;MACA,MAAMC,QAAQ,GAAG,CAAC,EAAE1B,KAAK,CAAC2B,KAAN3B,IAAepC,KAAK,CAACK,QAAvB,CAAlB;MACA,MAAM2D,SAAS,GAAG,CAAC,EAAE5B,KAAK,CAACxB,MAANwB,IAAgBpC,KAAK,CAACY,MAAxB,CAAD,IAAoCoC,KAAtD;MACA,MAAMiB,eAAe,GAAG,CAAC,EAAEjE,KAAK,CAACmB,WAANnB,IAAqBA,KAAK,CAACkB,aAA7B,CAAzB;MACA,MAAMgD,UAAU,GAAG,CAAC,EAAED,eAAe,IAAI7B,KAAK,CAAC+B,OAA3B,CAApB;MACA,MAAMC,QAAQ,GAAG,CAACpB,KAAD,IAAUA,KAAK,CAACqB,UAANrB,CAAiBnB,KAA5C;MAEA,OAAOkB,QAAQ,CAAClB,KAATkB,IAAcuB;QAAA,SAEV,CACL,QADK,EAEL;UACE,oBAAoBtE,KAAK,CAACmD,QAD5B;UAEE,iBAAiBnD,KAAK,CAACc,KAFzB;UAGE,gBAAgBoC,WAAW,CAACrB,KAH9B;UAIE,kBAAkBmC,SAJpB;UAKE,gBAAgBhE,KAAK,CAACiB;QALxB,CAFK,EASL6B,YAAY,CAACjB,KATR,EAULS,aAAa,CAACT,KAVT,EAWLuC,QAAQ,GAAG7B,YAAY,CAACV,KAAhB,GAAwBb,SAX3B,EAYL0B,cAAc,CAACb,KAZV,EAaLc,gBAAgB,CAACd,KAbZ,EAcLe,cAAc,CAACf,KAdV,EAeLgB,WAAW,CAAChB,KAfP,EAgBLY,cAAc,CAACZ,KAhBV,EAiBLmB,KAAK,EAAEuB,aAAPvB,CAAqBnB,KAjBhB,CAFU;QAoBhB,SACM,CACLuC,QAAQ,GAAG5B,WAAW,CAACX,KAAf,GAAuBb,SAD1B,CArBU;QAuBhB,YACUhB,KAAK,CAACmD,QAANnD,IAAkBgB,SAxBZ;QAwBqB,aAC1BhB,KAAK,CAACW,SAzBD;QAyBU,QACpBI,IAAI,CAACyD,IAALzD,CAAUc,KA1BA;QA0BK,YACXqB,WAAW,CAACrB,KAAZqB,GAAoB,CAApBA,GAAwBlC,SA3BlB;QA2B2B,WAClCO,OA5BO;QA4BA,aACL2B,WAAW,CAACrB,KAAZqB,IAAqB,CAACD,MAAM,CAACpB,KAA7BqB,IAAsCK;MA7BjC,GA6B0C;QAAA9C,gBAGzDvC,WAAW,CAACgF,WAAW,CAACrB,KAAb,EAAoB,QAApB,CAH8C,EAKzDmC,SAAS;UAAA,OACe;QADf,GACuB;UAAAvD;YAAA,SAEtB;UAFsB,GAEN,CAGpB,CAAC2B,KAAK,CAACxB,MAAP,GAAa6D;YAAA,OAEP,aAFO;YAEM,QACVzE,KAAK,CAACa;UAHF,GAGY,IAHZ,CAAb,GAGyByD;YAAA,OAInB,iBAJmB;YAIF,YACV,CAACtE,KAAK,CAACa,UALK;YAKK,YAClB;cACR5C,KAAK,EAAE;gBAAEyG,IAAI,EAAE1E,KAAK,CAACa;cAAd;YADC;UANa,GAQtB,IARsB,GAQtB,6BACgBuB,KAAK,CAACxB,MADtB,EAC4B,SAD5B,EARsB,CANL,CAFM,GAmB3B,UAhBQoC,KAAK,CAACqB,UAANrB,CAAiBnB,KAgBzB,EAnB2B;QAAA,CADvB,CALgD,EA8BzDqC,UAAU;UAAA,OACD,SADC;UACQ,SAAO;QADf,GACgC,CACtC,CAAC9B,KAAK,CAAC+B,OAAP,GAAcM,+BAEVzE,KAAK,CAACmB,WAANnB,IAAiByE;UAAA,OAEX,cAFW;UAEG,QACXzE,KAAK,CAACmB,WAHE;UAGS;QAHT,GAGS,IAHT,CAFP,EAUVnB,KAAK,CAACkB,aAANlB,IAAmByE;UAAA,OAEb,gBAFa;UAEG,SACZzE,KAAK,CAACkB,aAHG;UAGU;QAHV,GAGU,IAHV,CAVT,EAAd,GAgBGuD;UAAA,OAIG,kBAJH;UAIqB,YACX,CAACR,eALX;UAK0B,YACjB;YACRpG,OAAO,EAAE;cACP8G,KAAK,EAAE3E,KAAK,CAACkB,aADN;cAEP0D,KAAK,EAAE;YAFA,CADD;YAKR3G,KAAK,EAAE;cACLyG,IAAI,EAAE1E,KAAK,CAACmB,WADP;cAELyD,KAAK,EAAE;YAFF;UALC;QANT,GAgBiBxC,KAAK,CAAC+B,OAhBvB,CAjBmC,CADhC,CA9B+C,EAsEzD/B,KAAK,CAAC3B,OAAN2B,GAAgB;UAChBiC,UAAU,EAAErB,KAAK,EAAEqB,UAAPrB,CAAkBnB,KADd;UAEhB0C,aAAa,EAAEvB,KAAK,EAAEuB,aAAPvB,CAAqBnB,KAFpB;UAGhBgD,MAAM,EAAE7B,KAAK,EAAE6B,MAHC;UAIhBvB,MAAM,EAAEN,KAAK,EAAEM,MAJC;UAKhBzB,KAAK,EAAEmB,KAAK,EAAEnB,KAAPmB,CAAanB,KALJ;UAMhBsB,QAAQ,EAAEnD,KAAK,CAACmD;QANA,CAAhBf,KAOIpC,KAAK,CAACqB,IA7E+C,EA+EzDuC,SAAS;UAAA,OACA,QADA;UACQ,SAAO;QADf,GAC+B,CACpC,CAACxB,KAAK,CAACyB,MAAP,GAAaY,+BAETzE,KAAK,CAACI,UAANJ,IAAgByE;UAAA,OAEV,aAFU;UAEG,WAFH;UAEG,QAEVzE,KAAK,CAACI;QAJC,GAIS,IAJT,CAFP,EAUTJ,KAAK,CAACG,YAANH,IAAkByE;UAAA,OAEZ,eAFY;UAEG,WAFH;UAEG,SAEXzE,KAAK,CAACG;QAJE,GAIU,IAJV,CAVT,EAAb,GAgBGsE;UAAA,OAIG,iBAJH;UAIoB,YACV,CAACd,cALX;UAKyB,YAChB;YACR9F,OAAO,EAAE;cACPiH,GAAG,EAAE,IADE;cAEPH,KAAK,EAAE3E,KAAK,CAACG;YAFN,CADD;YAKRlC,KAAK,EAAE;cACL6G,GAAG,EAAE,IADA;cAELJ,IAAI,EAAE1E,KAAK,CAACI;YAFP;UALC;QANT,GAgBiBgC,KAAK,CAACyB,MAhBvB,CAjBiC,CAD/B,CA/EgD,EAuHzDC,QAAQ;UAAA,OAEF,OAFE;UAEK,SACL;QAHA,GAIDV,UAAU,CAACvB,KAJV,GAIe,CAEnB,CAACO,KAAK,CAAC2B,KAAP,GAAYU;UAAA,OAEN,YAFM;UAEM,QACTzE,KAAK,CAACO,SAHH;UAGY,QACjB;QAJK,GAII,IAJJ,CAAZ,GAIgBkE;UAAA,OAIV,gBAJU;UAIM,YACV;YACRxG,KAAK,EAAE;cACLyG,IAAI,EAAE1E,KAAK,CAACO,SADP;cAELwE,IAAI,EAAE;YAFD;UADC;QALI,GAWI3C,KAAK,CAAC2B,KAXV,CANG,CAJf,CAvHiD;MAAA,CA7B1C,GA6KhB,+BA/IUb,WAAW,CAACrB,KAAZqB,IAAqBlD,KAAK,CAACoB,MA+IrC,EA/I6C,IA+I7C,EA7KgB,CAArB;IAgLD,CA1LD;EA2LF;;AAvSkD,CAAf,CAA9B","names":["VAvatar","VChipGroupSymbol","VDefaultsProvider","VExpandXTransition","VIcon","genOverlays","makeVariantProps","useVariant","makeBorderProps","useBorder","makeDensityProps","useDensity","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","useProxiedModel","IconValue","useLocale","Ripple","EventProp","genericComponent","computed","VChip","name","directives","props","activeClass","String","appendAvatar","appendIcon","closable","Boolean","closeIcon","type","default","closeLabel","draggable","filter","filterIcon","label","link","undefined","pill","prependAvatar","prependIcon","ripple","text","modelValue","onClick","onClickOnce","tag","variant","emits","e","value","val","click","setup","_ref","attrs","emit","slots","t","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","elevationClasses","roundedClasses","sizeClasses","themeClasses","isActive","group","isLink","isClickable","disabled","closeProps","navigate","toggle","onKeyDown","key","preventDefault","Tag","hasAppendMedia","hasAppend","append","hasClose","close","hasFilter","hasPrependMedia","hasPrepend","prepend","hasColor","isSelected","_withDirectives","selectedClass","href","_createVNode","icon","image","start","select","end","size"],"sources":["../../../src/components/VChip/VChip.tsx"],"sourcesContent":["/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { EventProp, genericComponent } from '@/util'\nimport { computed } from 'vue'\n\n// Types\nimport type { MakeSlots } from '@/util'\n\nexport type VChipSlots = MakeSlots<{\n  default: []\n  label: []\n  prepend: []\n  append: []\n}>\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: IconValue,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: {\n      type: Boolean,\n      default: undefined,\n    },\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: IconValue,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n\n    onClick: EventProp<[MouseEvent]>(),\n    onClickOnce: EventProp<[MouseEvent]>(),\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'span' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'tonal' } as const),\n  },\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasColor = !group || group.isSelected.value\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={[isClickable.value && props.ripple, null]}\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { !slots.filter ? (\n                  <VIcon\n                    key=\"filter-icon\"\n                    icon={ props.filterIcon }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"filter-defaults\"\n                    disabled={ !props.filterIcon }\n                    defaults={{\n                      VIcon: { icon: props.filterIcon },\n                    }}\n                    v-slot:default={ slots.filter }\n                  />\n                )}\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      icon={ props.prependIcon }\n                      start\n                    />\n                  )}\n\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      image={ props.prependAvatar }\n                      start\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      image: props.prependAvatar,\n                      start: true,\n                    },\n                    VIcon: {\n                      icon: props.prependIcon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          { slots.default?.({\n            isSelected: group?.isSelected.value,\n            selectedClass: group?.selectedClass.value,\n            select: group?.select,\n            toggle: group?.toggle,\n            value: group?.value.value,\n            disabled: props.disabled,\n          }) ?? props.text }\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      end\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      end\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      end: true,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      end: true,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </div>\n          )}\n\n          { hasClose && (\n            <div\n              key=\"close\"\n              class=\"v-chip__close\"\n              { ...closeProps.value }\n            >\n              { !slots.close ? (\n                <VIcon\n                  key=\"close-icon\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VIcon: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                    },\n                  }}\n                  v-slots:default={ slots.close }\n                />\n              )}\n            </div>\n          )}\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n"]},"metadata":{},"sourceType":"module"}