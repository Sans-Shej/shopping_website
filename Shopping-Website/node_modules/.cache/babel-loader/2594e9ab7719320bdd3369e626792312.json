{"ast":null,"code":"function mounted(el, binding) {\n  const handler = binding.value;\n  const options = {\n    passive: !binding.modifiers?.active\n  };\n  window.addEventListener('resize', handler, options);\n  el._onResize = Object(el._onResize);\n  el._onResize[binding.instance.$.uid] = {\n    handler,\n    options\n  };\n\n  if (!binding.modifiers?.quiet) {\n    handler();\n  }\n}\n\nfunction unmounted(el, binding) {\n  if (!el._onResize?.[binding.instance.$.uid]) return;\n  const {\n    handler,\n    options\n  } = el._onResize[binding.instance.$.uid];\n  window.removeEventListener('resize', handler, options);\n  delete el._onResize[binding.instance.$.uid];\n}\n\nexport const Resize = {\n  mounted,\n  unmounted\n};\nexport default Resize;","map":{"version":3,"mappings":"AAUA,SAASA,OAAT,CAAkBC,EAAlB,EAAmCC,OAAnC,EAAoE;EAClE,MAAMC,OAAO,GAAGD,OAAO,CAACE,KAAxB;EACA,MAAMC,OAAgC,GAAG;IACvCC,OAAO,EAAE,CAACJ,OAAO,CAACK,SAARL,EAAmBM;EADU,CAAzC;EAIAC,MAAM,CAACC,gBAAPD,CAAwB,QAAxBA,EAAkCN,OAAlCM,EAA2CJ,OAA3CI;EAEAR,EAAE,CAACU,SAAHV,GAAeW,MAAM,CAACX,EAAE,CAACU,SAAJ,CAArBV;EACAA,EAAE,CAACU,SAAHV,CAAcC,OAAO,CAACW,QAARX,CAAkBY,CAAlBZ,CAAoBa,GAAlCd,IAAyC;IACvCE,OADuC;IAEvCE;EAFuC,CAAzCJ;;EAKA,IAAI,CAACC,OAAO,CAACK,SAARL,EAAmBc,KAAxB,EAA+B;IAC7Bb,OAAO;EACT;AACF;;AAEA,SAASc,SAAT,CAAoBhB,EAApB,EAAqCC,OAArC,EAAsE;EACpE,IAAI,CAACD,EAAE,CAACU,SAAHV,GAAeC,OAAO,CAACW,QAARX,CAAkBY,CAAlBZ,CAAoBa,GAAnCd,CAAL,EAA8C;EAE9C,MAAM;IAAEE,OAAF;IAAWE;EAAX,IAAuBJ,EAAE,CAACU,SAAHV,CAAaC,OAAO,CAACW,QAARX,CAAkBY,CAAlBZ,CAAoBa,GAAjCd,CAA7B;EAEAQ,MAAM,CAACS,mBAAPT,CAA2B,QAA3BA,EAAqCN,OAArCM,EAA8CJ,OAA9CI;EAEA,OAAOR,EAAE,CAACU,SAAHV,CAAaC,OAAO,CAACW,QAARX,CAAkBY,CAAlBZ,CAAoBa,GAAjCd,CAAP;AACF;;AAEA,OAAO,MAAMkB,MAAM,GAAG;EACpBnB,OADoB;EAEpBiB;AAFoB,CAAf;AAKP,eAAeE,MAAf","names":["mounted","el","binding","handler","value","options","passive","modifiers","active","window","addEventListener","_onResize","Object","instance","$","uid","quiet","unmounted","removeEventListener","Resize"],"sources":["../../../src/directives/resize/index.ts"],"sourcesContent":["import type { DirectiveBinding } from 'vue'\n\ninterface ResizeDirectiveBinding extends Omit<DirectiveBinding, 'modifiers'> {\n  value: () => void\n  modifiers?: {\n    active?: boolean\n    quiet?: boolean\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: ResizeDirectiveBinding) {\n  const handler = binding.value\n  const options: AddEventListenerOptions = {\n    passive: !binding.modifiers?.active,\n  }\n\n  window.addEventListener('resize', handler, options)\n\n  el._onResize = Object(el._onResize)\n  el._onResize![binding.instance!.$.uid] = {\n    handler,\n    options,\n  }\n\n  if (!binding.modifiers?.quiet) {\n    handler()\n  }\n}\n\nfunction unmounted (el: HTMLElement, binding: ResizeDirectiveBinding) {\n  if (!el._onResize?.[binding.instance!.$.uid]) return\n\n  const { handler, options } = el._onResize[binding.instance!.$.uid]!\n\n  window.removeEventListener('resize', handler, options)\n\n  delete el._onResize[binding.instance!.$.uid]\n}\n\nexport const Resize = {\n  mounted,\n  unmounted,\n}\n\nexport default Resize\n"]},"metadata":{},"sourceType":"module"}