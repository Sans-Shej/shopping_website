{"ast":null,"code":"// Composables\nimport { makeDelayProps, useDelay } from \"../../composables/delay.mjs\";\nimport { VMenuSymbol } from \"../VMenu/shared.mjs\"; // Utilities\n\nimport { getCurrentInstance, IN_BROWSER, isComponentInstance, propsFactory, SUPPORTS_FOCUS_VISIBLE } from \"../../util/index.mjs\";\nimport { computed, effectScope, inject, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue'; // Types\n\nexport const makeActivatorProps = propsFactory({\n  activator: [String, Object],\n  activatorProps: {\n    type: Object,\n    default: () => ({})\n  },\n  openOnClick: {\n    type: Boolean,\n    default: undefined\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined\n  },\n  closeOnContentClick: Boolean,\n  ...makeDelayProps()\n}, 'v-overlay-activator');\nexport function useActivator(props, _ref) {\n  let {\n    isActive,\n    isTop\n  } = _ref;\n  const activatorEl = ref();\n  let isHovered = false;\n  let isFocused = false;\n  let firstEnter = true;\n  const openOnFocus = computed(() => props.openOnFocus || props.openOnFocus == null && props.openOnHover);\n  const openOnClick = computed(() => props.openOnClick || props.openOnClick == null && !props.openOnHover && !openOnFocus.value);\n  const {\n    runOpenDelay,\n    runCloseDelay\n  } = useDelay(props, value => {\n    if (value === (props.openOnHover && isHovered || openOnFocus.value && isFocused) && !(props.openOnHover && isActive.value && !isTop.value)) {\n      if (isActive.value !== value) {\n        firstEnter = true;\n      }\n\n      isActive.value = value;\n    }\n  });\n  const availableEvents = {\n    click: e => {\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      isActive.value = !isActive.value;\n    },\n    mouseenter: e => {\n      if (e.sourceCapabilities?.firesTouchEvents) return;\n      isHovered = true;\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    mouseleave: e => {\n      isHovered = false;\n      runCloseDelay();\n    },\n    focus: e => {\n      if (SUPPORTS_FOCUS_VISIBLE && !e.target.matches(':focus-visible')) return;\n      isFocused = true;\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    blur: e => {\n      isFocused = false;\n      e.stopPropagation();\n      runCloseDelay();\n    }\n  };\n  const activatorEvents = computed(() => {\n    const events = {};\n\n    if (openOnClick.value) {\n      events.click = availableEvents.click;\n    }\n\n    if (props.openOnHover) {\n      events.mouseenter = availableEvents.mouseenter;\n      events.mouseleave = availableEvents.mouseleave;\n    }\n\n    if (openOnFocus.value) {\n      events.focus = availableEvents.focus;\n      events.blur = availableEvents.blur;\n    }\n\n    return events;\n  });\n  const contentEvents = computed(() => {\n    const events = {};\n\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        isHovered = true;\n        runOpenDelay();\n      };\n\n      events.mouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null);\n\n      events.click = () => {\n        isActive.value = false;\n        menu?.closeParents();\n      };\n    }\n\n    return events;\n  });\n  const scrimEvents = computed(() => {\n    const events = {};\n\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        if (firstEnter) {\n          isHovered = true;\n          firstEnter = false;\n          runOpenDelay();\n        }\n      };\n\n      events.mouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n\n    return events;\n  });\n  watch(isTop, val => {\n    if (val && (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused) || openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))) {\n      isActive.value = false;\n    }\n  });\n  const activatorRef = ref();\n  watchEffect(() => {\n    if (!activatorRef.value) return;\n    nextTick(() => {\n      const activator = activatorRef.value;\n      activatorEl.value = isComponentInstance(activator) ? activator.$el : activator;\n    });\n  });\n  const vm = getCurrentInstance('useActivator');\n  let scope;\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope();\n      scope.run(() => {\n        _useActivator(props, vm, {\n          activatorEl,\n          activatorEvents\n        });\n      });\n    } else if (scope) {\n      scope.stop();\n    }\n  }, {\n    flush: 'post',\n    immediate: true\n  });\n  onScopeDispose(() => {\n    scope?.stop();\n  });\n  return {\n    activatorEl,\n    activatorRef,\n    activatorEvents,\n    contentEvents,\n    scrimEvents\n  };\n}\n\nfunction _useActivator(props, vm, _ref2) {\n  let {\n    activatorEl,\n    activatorEvents\n  } = _ref2;\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal);\n      activator && unbindActivatorProps(activator);\n    }\n\n    if (val) {\n      nextTick(() => bindActivatorProps());\n    }\n  }, {\n    immediate: true\n  });\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps();\n  });\n  onScopeDispose(() => {\n    unbindActivatorProps();\n  });\n\n  function bindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n\n    if (!el) return;\n    Object.entries(activatorEvents.value).forEach(_ref3 => {\n      let [name, cb] = _ref3;\n      el.addEventListener(name, cb);\n    });\n    Object.keys(_props).forEach(k => {\n      if (_props[k] == null) {\n        el.removeAttribute(k);\n      } else {\n        el.setAttribute(k, _props[k]);\n      }\n    });\n  }\n\n  function unbindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n\n    if (!el) return;\n    Object.entries(activatorEvents.value).forEach(_ref4 => {\n      let [name, cb] = _ref4;\n      el.removeEventListener(name, cb);\n    });\n    Object.keys(_props).forEach(k => {\n      el.removeAttribute(k);\n    });\n  }\n\n  function getActivator() {\n    let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.activator;\n    let activator;\n\n    if (selector) {\n      if (selector === 'parent') {\n        let el = vm?.proxy?.$el?.parentNode;\n\n        while (el.hasAttribute('data-no-activator')) {\n          el = el.parentNode;\n        }\n\n        activator = el;\n      } else if (typeof selector === 'string') {\n        // Selector\n        activator = document.querySelector(selector);\n      } else if ('$el' in selector) {\n        // Component (ref)\n        activator = selector.$el;\n      } else {\n        // HTMLElement | Element\n        activator = selector;\n      }\n    } // The activator should only be a valid element (Ignore comments and text nodes)\n\n\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : null;\n    return activatorEl.value;\n  }\n}","map":{"version":3,"mappings":"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","names":["makeDelayProps","useDelay","VMenuSymbol","getCurrentInstance","IN_BROWSER","isComponentInstance","propsFactory","SUPPORTS_FOCUS_VISIBLE","computed","effectScope","inject","nextTick","onScopeDispose","ref","watch","watchEffect","makeActivatorProps","activator","String","Object","activatorProps","type","default","openOnClick","Boolean","undefined","openOnHover","openOnFocus","closeOnContentClick","useActivator","props","_ref","isActive","isTop","activatorEl","isHovered","isFocused","firstEnter","value","runOpenDelay","runCloseDelay","availableEvents","click","e","stopPropagation","currentTarget","target","mouseenter","sourceCapabilities","firesTouchEvents","mouseleave","focus","matches","blur","activatorEvents","events","contentEvents","menu","closeParents","scrimEvents","val","activatorRef","$el","vm","scope","run","_useActivator","stop","flush","immediate","_ref2","oldVal","getActivator","unbindActivatorProps","bindActivatorProps","el","_props","entries","forEach","_ref3","name","cb","addEventListener","keys","k","removeAttribute","setAttribute","_ref4","removeEventListener","selector","proxy","parentNode","hasAttribute","document","querySelector","nodeType","Node","ELEMENT_NODE"],"sources":["../../../src/components/VOverlay/useActivator.tsx"],"sourcesContent":["// Composables\nimport { makeDelayProps, useDelay } from '@/composables/delay'\nimport { VMenuSymbol } from '@/components/VMenu/shared'\n\n// Utilities\nimport { getCurrentInstance, IN_BROWSER, isComponentInstance, propsFactory, SUPPORTS_FOCUS_VISIBLE } from '@/util'\nimport {\n  computed,\n  effectScope,\n  inject,\n  nextTick,\n  onScopeDispose,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\n\n// Types\nimport type { DelayProps } from '@/composables/delay'\nimport type {\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n  EffectScope,\n  PropType,\n  Ref,\n} from 'vue'\n\ninterface ActivatorProps extends DelayProps {\n  activator?: 'parent' | string | Element | ComponentPublicInstance\n  activatorProps: Record<string, any>\n\n  openOnClick: boolean | undefined\n  openOnHover: boolean\n  openOnFocus: boolean | undefined\n\n  closeOnContentClick: boolean\n}\n\nexport const makeActivatorProps = propsFactory({\n  activator: [String, Object] as PropType<ActivatorProps['activator']>,\n  activatorProps: {\n    type: Object as PropType<ActivatorProps['activatorProps']>,\n    default: () => ({}),\n  },\n\n  openOnClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined,\n  },\n\n  closeOnContentClick: Boolean,\n\n  ...makeDelayProps(),\n}, 'v-overlay-activator')\n\nexport function useActivator (\n  props: ActivatorProps,\n  { isActive, isTop }: { isActive: Ref<boolean>, isTop: Ref<boolean> }\n) {\n  const activatorEl = ref<HTMLElement>()\n\n  let isHovered = false\n  let isFocused = false\n  let firstEnter = true\n\n  const openOnFocus = computed(() => props.openOnFocus || (props.openOnFocus == null && props.openOnHover))\n  const openOnClick = computed(() => props.openOnClick || (props.openOnClick == null && !props.openOnHover && !openOnFocus.value))\n\n  const { runOpenDelay, runCloseDelay } = useDelay(props, value => {\n    if (\n      value === (\n        (props.openOnHover && isHovered) ||\n        (openOnFocus.value && isFocused)\n      ) && !(props.openOnHover && isActive.value && !isTop.value)\n    ) {\n      if (isActive.value !== value) {\n        firstEnter = true\n      }\n      isActive.value = value\n    }\n  })\n\n  const availableEvents = {\n    click: (e: MouseEvent) => {\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      isActive.value = !isActive.value\n    },\n    mouseenter: (e: MouseEvent) => {\n      if (e.sourceCapabilities?.firesTouchEvents) return\n\n      isHovered = true\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      runOpenDelay()\n    },\n    mouseleave: (e: MouseEvent) => {\n      isHovered = false\n      runCloseDelay()\n    },\n    focus: (e: FocusEvent) => {\n      if (\n        SUPPORTS_FOCUS_VISIBLE &&\n        !(e.target as HTMLElement).matches(':focus-visible')\n      ) return\n\n      isFocused = true\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n\n      runOpenDelay()\n    },\n    blur: (e: FocusEvent) => {\n      isFocused = false\n      e.stopPropagation()\n\n      runCloseDelay()\n    },\n  }\n\n  const activatorEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (openOnClick.value) {\n      events.click = availableEvents.click\n    }\n    if (props.openOnHover) {\n      events.mouseenter = availableEvents.mouseenter\n      events.mouseleave = availableEvents.mouseleave\n    }\n    if (openOnFocus.value) {\n      events.focus = availableEvents.focus\n      events.blur = availableEvents.blur\n    }\n\n    return events\n  })\n\n  const contentEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        isHovered = true\n        runOpenDelay()\n      }\n      events.mouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null)\n      events.click = () => {\n        isActive.value = false\n        menu?.closeParents()\n      }\n    }\n\n    return events\n  })\n\n  const scrimEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        if (firstEnter) {\n          isHovered = true\n          firstEnter = false\n          runOpenDelay()\n        }\n      }\n      events.mouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    return events\n  })\n\n  watch(isTop, val => {\n    if (val && (\n      (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused)) ||\n      (openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))\n    )) {\n      isActive.value = false\n    }\n  })\n\n  const activatorRef = ref()\n  watchEffect(() => {\n    if (!activatorRef.value) return\n\n    nextTick(() => {\n      const activator = activatorRef.value\n      activatorEl.value = isComponentInstance(activator) ? activator.$el : activator\n    })\n  })\n\n  const vm = getCurrentInstance('useActivator')\n  let scope: EffectScope\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope()\n      scope.run(() => {\n        _useActivator(props, vm, { activatorEl, activatorEvents })\n      })\n    } else if (scope) {\n      scope.stop()\n    }\n  }, { flush: 'post', immediate: true })\n\n  onScopeDispose(() => {\n    scope?.stop()\n  })\n\n  return { activatorEl, activatorRef, activatorEvents, contentEvents, scrimEvents }\n}\n\nfunction _useActivator (\n  props: ActivatorProps,\n  vm: ComponentInternalInstance,\n  { activatorEl, activatorEvents }: Pick<ReturnType<typeof useActivator>, 'activatorEl' | 'activatorEvents'>\n) {\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal)\n      activator && unbindActivatorProps(activator)\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps())\n    }\n  }, { immediate: true })\n\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps()\n  })\n\n  onScopeDispose(() => {\n    unbindActivatorProps()\n  })\n\n  function bindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.addEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      if (_props[k] == null) {\n        el.removeAttribute(k)\n      } else {\n        el.setAttribute(k, _props[k])\n      }\n    })\n  }\n\n  function unbindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.removeEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      el.removeAttribute(k)\n    })\n  }\n\n  function getActivator (selector = props.activator): HTMLElement | undefined {\n    let activator\n    if (selector) {\n      if (selector === 'parent') {\n        let el = vm?.proxy?.$el?.parentNode\n        while (el.hasAttribute('data-no-activator')) {\n          el = el.parentNode\n        }\n        activator = el\n      } else if (typeof selector === 'string') {\n        // Selector\n        activator = document.querySelector(selector)\n      } else if ('$el' in selector) {\n        // Component (ref)\n        activator = selector.$el\n      } else {\n        // HTMLElement | Element\n        activator = selector\n      }\n    }\n\n    // The activator should only be a valid element (Ignore comments and text nodes)\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n    return activatorEl.value\n  }\n}\n"]},"metadata":{},"sourceType":"module"}