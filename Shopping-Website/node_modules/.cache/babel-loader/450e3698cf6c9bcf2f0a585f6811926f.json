{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VProgressLinear.css\"; // Composables\n\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\"; // Utilities\n\nimport { computed, Transition } from 'vue';\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VProgressLinear = genericComponent()({\n  name: 'VProgressLinear',\n  props: {\n    absolute: Boolean,\n    active: {\n      type: Boolean,\n      default: true\n    },\n    bgColor: String,\n    bgOpacity: [Number, String],\n    bufferValue: {\n      type: [Number, String],\n      default: 0\n    },\n    clickable: Boolean,\n    color: String,\n    height: {\n      type: [Number, String],\n      default: 4\n    },\n    indeterminate: Boolean,\n    max: {\n      type: [Number, String],\n      default: 100\n    },\n    modelValue: {\n      type: [Number, String],\n      default: 0\n    },\n    reverse: Boolean,\n    stream: Boolean,\n    striped: Boolean,\n    roundedBar: Boolean,\n    ...makeLocationProps({\n      location: 'top'\n    }),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const progress = useProxiedModel(props, 'modelValue');\n    const {\n      isRtl\n    } = useRtl();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(props, 'color');\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(computed(() => props.bgColor || props.color));\n    const {\n      backgroundColorClasses: barColorClasses,\n      backgroundColorStyles: barColorStyles\n    } = useBackgroundColor(props, 'color');\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      intersectionRef,\n      isIntersecting\n    } = useIntersectionObserver();\n    const max = computed(() => parseInt(props.max, 10));\n    const height = computed(() => parseInt(props.height, 10));\n    const normalizedBuffer = computed(() => parseFloat(props.bufferValue) / max.value * 100);\n    const normalizedValue = computed(() => parseFloat(progress.value) / max.value * 100);\n    const isReversed = computed(() => isRtl.value !== props.reverse);\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition');\n    const opacity = computed(() => {\n      return props.bgOpacity == null ? props.bgOpacity : parseFloat(props.bgOpacity);\n    });\n\n    function handleClick(e) {\n      if (!intersectionRef.value) return;\n      const {\n        left,\n        right,\n        width\n      } = intersectionRef.value.getBoundingClientRect();\n      const value = isReversed.value ? width - e.clientX + (right - width) : e.clientX - left;\n      progress.value = Math.round(value / width * max.value);\n    }\n\n    useRender(() => _createVNode(props.tag, {\n      \"ref\": intersectionRef,\n      \"class\": ['v-progress-linear', {\n        'v-progress-linear--absolute': props.absolute,\n        'v-progress-linear--active': props.active && isIntersecting.value,\n        'v-progress-linear--reverse': isReversed.value,\n        'v-progress-linear--rounded': props.rounded,\n        'v-progress-linear--rounded-bar': props.roundedBar,\n        'v-progress-linear--striped': props.striped\n      }, roundedClasses.value, themeClasses.value],\n      \"style\": {\n        bottom: props.location === 'bottom' ? 0 : undefined,\n        top: props.location === 'top' ? 0 : undefined,\n        height: props.active ? convertToUnit(height.value) : 0,\n        '--v-progress-linear-height': convertToUnit(height.value),\n        ...locationStyles.value\n      },\n      \"role\": \"progressbar\",\n      \"aria-hidden\": props.active ? 'false' : 'true',\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": props.max,\n      \"aria-valuenow\": props.indeterminate ? undefined : normalizedValue.value,\n      \"onClick\": props.clickable && handleClick\n    }, {\n      default: () => [props.stream && _createVNode(\"div\", {\n        \"key\": \"stream\",\n        \"class\": ['v-progress-linear__stream', textColorClasses.value],\n        \"style\": { ...textColorStyles.value,\n          [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n          borderTop: `${convertToUnit(height.value / 2)} dotted`,\n          opacity: opacity.value,\n          top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n          width: convertToUnit(100 - normalizedBuffer.value, '%'),\n          '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1))\n        }\n      }, null), _createVNode(\"div\", {\n        \"class\": ['v-progress-linear__background', backgroundColorClasses.value],\n        \"style\": [backgroundColorStyles.value, {\n          opacity: opacity.value,\n          width: convertToUnit(!props.stream ? 100 : normalizedBuffer.value, '%')\n        }]\n      }, null), _createVNode(Transition, {\n        \"name\": transition.value\n      }, {\n        default: () => [!props.indeterminate ? _createVNode(\"div\", {\n          \"class\": ['v-progress-linear__determinate', barColorClasses.value],\n          \"style\": [barColorStyles.value, {\n            width: convertToUnit(normalizedValue.value, '%')\n          }]\n        }, null) : _createVNode(\"div\", {\n          \"class\": \"v-progress-linear__indeterminate\"\n        }, [['long', 'short'].map(bar => _createVNode(\"div\", {\n          \"key\": bar,\n          \"class\": ['v-progress-linear__indeterminate', bar, barColorClasses.value],\n          \"style\": barColorStyles.value\n        }, null))])]\n      }), slots.default && _createVNode(\"div\", {\n        \"class\": \"v-progress-linear__content\"\n      }, [slots.default({\n        value: normalizedValue.value,\n        buffer: normalizedBuffer.value\n      })])]\n    }));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeRoundedProps","useRounded","makeTagProps","makeLocationProps","useLocation","makeThemeProps","provideTheme","useBackgroundColor","useTextColor","useIntersectionObserver","useProxiedModel","useRtl","computed","Transition","convertToUnit","genericComponent","useRender","VProgressLinear","name","props","absolute","Boolean","active","type","default","bgColor","String","bgOpacity","Number","bufferValue","clickable","color","height","indeterminate","max","modelValue","reverse","stream","striped","roundedBar","location","emits","value","setup","_ref","slots","progress","isRtl","themeClasses","locationStyles","textColorClasses","textColorStyles","backgroundColorClasses","backgroundColorStyles","barColorClasses","barColorStyles","roundedClasses","intersectionRef","isIntersecting","parseInt","normalizedBuffer","parseFloat","normalizedValue","isReversed","transition","opacity","handleClick","e","left","right","width","getBoundingClientRect","clientX","Math","round","rounded","bottom","undefined","top","_createVNode","borderTop","map","bar","buffer"],"sources":["../../../src/components/VProgressLinear/VProgressLinear.tsx"],"sourcesContent":["// Styles\nimport './VProgressLinear.sass'\n\n// Composables\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRtl } from '@/composables/locale'\n\n// Utilities\nimport { computed, Transition } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\ntype VProgressLinearSlots = {\n  default: [{ value: number, buffer: number }]\n}\n\nexport const VProgressLinear = genericComponent<VProgressLinearSlots>()({\n  name: 'VProgressLinear',\n\n  props: {\n    absolute: Boolean,\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    bgColor: String,\n    bgOpacity: [Number, String],\n    bufferValue: {\n      type: [Number, String],\n      default: 0,\n    },\n    clickable: Boolean,\n    color: String,\n    height: {\n      type: [Number, String],\n      default: 4,\n    },\n    indeterminate: Boolean,\n    max: {\n      type: [Number, String],\n      default: 100,\n    },\n    modelValue: {\n      type: [Number, String],\n      default: 0,\n    },\n    reverse: Boolean,\n    stream: Boolean,\n    striped: Boolean,\n    roundedBar: Boolean,\n\n    ...makeLocationProps({ location: 'top' } as const),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: number) => true,\n  },\n\n  setup (props, { slots }) {\n    const progress = useProxiedModel(props, 'modelValue')\n    const { isRtl } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { locationStyles } = useLocation(props)\n    const { textColorClasses, textColorStyles } = useTextColor(props, 'color')\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => props.bgColor || props.color))\n    const { backgroundColorClasses: barColorClasses, backgroundColorStyles: barColorStyles } = useBackgroundColor(props, 'color')\n    const { roundedClasses } = useRounded(props)\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    const max = computed(() => parseInt(props.max, 10))\n    const height = computed(() => parseInt(props.height, 10))\n    const normalizedBuffer = computed(() => parseFloat(props.bufferValue) / max.value * 100)\n    const normalizedValue = computed(() => parseFloat(progress.value) / max.value * 100)\n    const isReversed = computed(() => isRtl.value !== props.reverse)\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition')\n    const opacity = computed(() => {\n      return props.bgOpacity == null\n        ? props.bgOpacity\n        : parseFloat(props.bgOpacity)\n    })\n\n    function handleClick (e: MouseEvent) {\n      if (!intersectionRef.value) return\n\n      const { left, right, width } = intersectionRef.value.getBoundingClientRect()\n      const value = isReversed.value ? (width - e.clientX) + (right - width) : e.clientX - left\n\n      progress.value = Math.round(value / width * max.value)\n    }\n\n    useRender(() => (\n      <props.tag\n        ref={ intersectionRef }\n        class={[\n          'v-progress-linear',\n          {\n            'v-progress-linear--absolute': props.absolute,\n            'v-progress-linear--active': props.active && isIntersecting.value,\n            'v-progress-linear--reverse': isReversed.value,\n            'v-progress-linear--rounded': props.rounded,\n            'v-progress-linear--rounded-bar': props.roundedBar,\n            'v-progress-linear--striped': props.striped,\n          },\n          roundedClasses.value,\n          themeClasses.value,\n        ]}\n        style={{\n          bottom: props.location === 'bottom' ? 0 : undefined,\n          top: props.location === 'top' ? 0 : undefined,\n          height: props.active ? convertToUnit(height.value) : 0,\n          '--v-progress-linear-height': convertToUnit(height.value),\n          ...locationStyles.value,\n        }}\n        role=\"progressbar\"\n        aria-hidden={ props.active ? 'false' : 'true' }\n        aria-valuemin=\"0\"\n        aria-valuemax={ props.max }\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n        onClick={ props.clickable && handleClick }\n      >\n        { props.stream && (\n          <div\n            key=\"stream\"\n            class={[\n              'v-progress-linear__stream',\n              textColorClasses.value,\n            ]}\n            style={{\n              ...textColorStyles.value,\n              [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n              borderTop: `${convertToUnit(height.value / 2)} dotted`,\n              opacity: opacity.value,\n              top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n              width: convertToUnit(100 - normalizedBuffer.value, '%'),\n              '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1)),\n            }}\n          />\n        )}\n\n        <div\n          class={[\n            'v-progress-linear__background',\n            backgroundColorClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            {\n              opacity: opacity.value,\n              width: convertToUnit((!props.stream ? 100 : normalizedBuffer.value), '%'),\n            },\n          ]}\n        />\n\n        <Transition name={ transition.value }>\n          { !props.indeterminate ? (\n            <div\n              class={[\n                'v-progress-linear__determinate',\n                barColorClasses.value,\n              ]}\n              style={[\n                barColorStyles.value,\n                { width: convertToUnit(normalizedValue.value, '%') },\n              ]}\n            />\n          ) : (\n            <div class=\"v-progress-linear__indeterminate\">\n              {['long', 'short'].map(bar => (\n                <div\n                  key={ bar }\n                  class={[\n                    'v-progress-linear__indeterminate',\n                    bar,\n                    barColorClasses.value,\n                  ]}\n                  style={ barColorStyles.value }\n                />\n              ))}\n            </div>\n          )}\n        </Transition>\n\n        { slots.default && (\n          <div class=\"v-progress-linear__content\">\n            { slots.default({ value: normalizedValue.value, buffer: normalizedBuffer.value }) }\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VProgressLinear = InstanceType<typeof VProgressLinear>\n"]},"metadata":{},"sourceType":"module"}