{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Composables\n\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nexport const VBreadcrumbsItem = genericComponent()({\n  name: 'VBreadcrumbsItem',\n  props: {\n    active: Boolean,\n    activeClass: String,\n    activeColor: String,\n    color: String,\n    disabled: Boolean,\n    title: String,\n    ...makeRouterProps(),\n    ...makeTagProps({\n      tag: 'li'\n    })\n  },\n\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs\n    } = _ref;\n    const link = useLink(props, attrs);\n    const isActive = computed(() => props.active || link.isActive?.value);\n    const color = computed(() => isActive.value ? props.activeColor : props.color);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(color);\n    useRender(() => {\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      return _createVNode(Tag, {\n        \"class\": ['v-breadcrumbs-item', {\n          'v-breadcrumbs-item--active': isActive.value,\n          'v-breadcrumbs-item--disabled': props.disabled,\n          'v-breadcrumbs-item--link': link.isLink.value,\n          [`${props.activeClass}`]: isActive.value && props.activeClass\n        }, textColorClasses.value],\n        \"style\": [textColorStyles.value],\n        \"href\": link.href.value,\n        \"aria-current\": isActive.value ? 'page' : undefined,\n        \"onClick\": link.navigate\n      }, {\n        default: () => [slots.default?.() ?? props.title]\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AAAA,SACSA,eADT,EAC0BC,OAD1B,QACiC,8BADjC;AACiC,SACxBC,YADwB,QACZ,2BADY;AACZ,SACZC,YADY,QACA,6BADA,C,CAGrB;;AACA,SAASC,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,gBADqB,EACHC,SADG,QACM,sBADN;AAG9B,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,GAAG;EACjDG,IAAI,EAAE,kBAD2C;EAGjDC,KAAK,EAAE;IACLC,MAAM,EAAEC,OADH;IAELC,WAAW,EAAEC,MAFR;IAGLC,WAAW,EAAED,MAHR;IAILE,KAAK,EAAEF,MAJF;IAKLG,QAAQ,EAAEL,OALL;IAMLM,KAAK,EAAEJ,MANF;IAQL,GAAGb,eAAe,EARb;IASL,GAAGE,YAAY,CAAC;MAAEgB,GAAG,EAAE;IAAP,CAAD;EATV,CAH0C;;EAejDC,KAAKA,CAAEV,KAAFU,EAAOC,IAAPD,EAA2B;IAAA,IAAlB;MAAEE,KAAF;MAASC;IAAT,IAAgBF,IAAE;IAC9B,MAAMG,IAAI,GAAGtB,OAAO,CAACQ,KAAD,EAAQa,KAAR,CAApB;IACA,MAAME,QAAQ,GAAGpB,QAAQ,CAAC,MAAMK,KAAK,CAACC,MAAND,IAAgBc,IAAI,CAACC,QAALD,EAAeE,KAAtC,CAAzB;IACA,MAAMV,KAAK,GAAGX,QAAQ,CAAC,MAAMoB,QAAQ,CAACC,KAATD,GAAiBf,KAAK,CAACK,WAAvBU,GAAqCf,KAAK,CAACM,KAAlD,CAAtB;IAEA,MAAM;MAAEW,gBAAF;MAAoBC;IAApB,IAAwCxB,YAAY,CAACY,KAAD,CAA1D;IAEAT,SAAS,CAAC,MAAM;MACd,MAAMsB,GAAG,GAAGL,IAAI,CAACM,MAALN,CAAYE,KAAZF,GAAoB,GAApBA,GAA0Bd,KAAK,CAACS,GAA5C;MAEA;QAAA,SAEW,CACL,oBADK,EAEL;UACE,8BAA8BM,QAAQ,CAACC,KADzC;UAEE,gCAAgChB,KAAK,CAACO,QAFxC;UAGE,4BAA4BO,IAAI,CAACM,MAALN,CAAYE,KAH1C;UAIE,CAAE,GAAEhB,KAAK,CAACG,WAAY,EAAtB,GAA0BY,QAAQ,CAACC,KAATD,IAAkBf,KAAK,CAACG;QAJpD,CAFK,EAQLc,gBAAgB,CAACD,KARZ,CAFX;QAWK,SACM,CACLE,eAAe,CAACF,KADX,CAZX;QAcK,QACMF,IAAI,CAACO,IAALP,CAAUE,KAfrB;QAe0B,gBACPD,QAAQ,CAACC,KAATD,GAAiB,MAAjBA,GAA0BO,SAhB7C;QAgBsD,WACxCR,IAAI,CAACS;MAjBnB,GAiB2B;QAAAC,gBAErBZ,KAAK,CAACY,OAANZ,QAAqBZ,KAAK,CAACQ,KAFN;MAAA,CAjB3B;IAsBD,CAzBQ,CAATX;IA2BA,OAAO,EAAP;EACF;;AAlDiD,CAAH,CAAzC","names":["makeRouterProps","useLink","makeTagProps","useTextColor","computed","genericComponent","useRender","VBreadcrumbsItem","name","props","active","Boolean","activeClass","String","activeColor","color","disabled","title","tag","setup","_ref","slots","attrs","link","isActive","value","textColorClasses","textColorStyles","Tag","isLink","href","undefined","navigate","default"],"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbsItem.tsx"],"sourcesContent":["// Composables\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\nexport const VBreadcrumbsItem = genericComponent()({\n  name: 'VBreadcrumbsItem',\n\n  props: {\n    active: Boolean,\n    activeClass: String,\n    activeColor: String,\n    color: String,\n    disabled: Boolean,\n    title: String,\n\n    ...makeRouterProps(),\n    ...makeTagProps({ tag: 'li' }),\n  },\n\n  setup (props, { slots, attrs }) {\n    const link = useLink(props, attrs)\n    const isActive = computed(() => props.active || link.isActive?.value)\n    const color = computed(() => isActive.value ? props.activeColor : props.color)\n\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n\n    useRender(() => {\n      const Tag = link.isLink.value ? 'a' : props.tag\n\n      return (\n        <Tag\n          class={[\n            'v-breadcrumbs-item',\n            {\n              'v-breadcrumbs-item--active': isActive.value,\n              'v-breadcrumbs-item--disabled': props.disabled,\n              'v-breadcrumbs-item--link': link.isLink.value,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            textColorClasses.value,\n          ]}\n          style={[\n            textColorStyles.value,\n          ]}\n          href={ link.href.value }\n          aria-current={ isActive.value ? 'page' : undefined }\n          onClick={ link.navigate }\n        >\n          { slots.default?.() ?? props.title }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbsItem = InstanceType<typeof VBreadcrumbsItem>\n"]},"metadata":{},"sourceType":"module"}