{"ast":null,"code":"import { computed, onBeforeUnmount, onMounted, ref, watch } from 'vue';\nimport { convertToUnit } from \"../../util/index.mjs\";\nexport function useSticky(_ref) {\n  let {\n    rootEl,\n    isSticky,\n    layoutItemStyles\n  } = _ref;\n  const isStuck = ref(false);\n  const stuckPosition = ref(0);\n  const stickyStyles = computed(() => {\n    const side = typeof isStuck.value === 'boolean' ? 'top' : isStuck.value;\n    return [isSticky.value ? {\n      top: 'auto',\n      bottom: 'auto',\n      height: undefined\n    } : undefined, isStuck.value ? {\n      [side]: convertToUnit(stuckPosition.value)\n    } : {\n      top: layoutItemStyles.value.top\n    }];\n  });\n  onMounted(() => {\n    watch(isSticky, val => {\n      if (val) {\n        window.addEventListener('scroll', onScroll, {\n          passive: true\n        });\n      } else {\n        window.removeEventListener('scroll', onScroll);\n      }\n    }, {\n      immediate: true\n    });\n  });\n  onBeforeUnmount(() => {\n    document.removeEventListener('scroll', onScroll);\n  });\n  let lastScrollTop = 0;\n\n  function onScroll() {\n    const direction = lastScrollTop > window.scrollY ? 'up' : 'down';\n    const rect = rootEl.value.getBoundingClientRect();\n    const layoutTop = parseFloat(layoutItemStyles.value.top ?? 0);\n    const top = window.scrollY - Math.max(0, stuckPosition.value - layoutTop);\n    const bottom = rect.height + Math.max(stuckPosition.value, layoutTop) - window.scrollY - window.innerHeight;\n\n    if (rect.height < window.innerHeight - layoutTop) {\n      isStuck.value = 'top';\n      stuckPosition.value = layoutTop;\n    } else if (direction === 'up' && isStuck.value === 'bottom' || direction === 'down' && isStuck.value === 'top') {\n      stuckPosition.value = window.scrollY + rect.top;\n      isStuck.value = true;\n    } else if (direction === 'down' && bottom <= 0) {\n      stuckPosition.value = 0;\n      isStuck.value = 'bottom';\n    } else if (direction === 'up' && top <= 0) {\n      stuckPosition.value = rect.top + top;\n      isStuck.value = 'top';\n    }\n\n    lastScrollTop = window.scrollY;\n  }\n\n  return {\n    isStuck,\n    stickyStyles\n  };\n}","map":{"version":3,"mappings":"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","names":["computed","onBeforeUnmount","onMounted","ref","watch","convertToUnit","useSticky","_ref","rootEl","isSticky","layoutItemStyles","isStuck","stuckPosition","stickyStyles","side","value","top","bottom","height","undefined","val","window","addEventListener","onScroll","passive","removeEventListener","immediate","document","lastScrollTop","direction","scrollY","rect","getBoundingClientRect","layoutTop","parseFloat","Math","max","innerHeight"],"sources":["../../../src/components/VNavigationDrawer/sticky.ts"],"sourcesContent":["import type { CSSProperties, Ref } from 'vue'\nimport { computed, onBeforeUnmount, onMounted, ref, watch } from 'vue'\nimport { convertToUnit } from '@/util'\n\ninterface StickyProps {\n  rootEl: Ref<HTMLElement | undefined>\n  isSticky: Ref<boolean>\n  layoutItemStyles: Ref<CSSProperties>\n}\n\nexport function useSticky ({ rootEl, isSticky, layoutItemStyles }: StickyProps) {\n  const isStuck = ref<boolean | 'top' | 'bottom'>(false)\n  const stuckPosition = ref(0)\n\n  const stickyStyles = computed(() => {\n    const side = typeof isStuck.value === 'boolean' ? 'top' : isStuck.value\n    return [\n      isSticky.value ? { top: 'auto', bottom: 'auto', height: undefined } : undefined,\n      isStuck.value\n        ? { [side]: convertToUnit(stuckPosition.value) }\n        : { top: layoutItemStyles.value.top },\n    ]\n  })\n\n  onMounted(() => {\n    watch(isSticky, val => {\n      if (val) {\n        window.addEventListener('scroll', onScroll, { passive: true })\n      } else {\n        window.removeEventListener('scroll', onScroll)\n      }\n    }, { immediate: true })\n  })\n\n  onBeforeUnmount(() => {\n    document.removeEventListener('scroll', onScroll)\n  })\n\n  let lastScrollTop = 0\n  function onScroll () {\n    const direction = lastScrollTop > window.scrollY ? 'up' : 'down'\n    const rect = rootEl.value!.getBoundingClientRect()\n    const layoutTop = parseFloat(layoutItemStyles.value.top ?? 0)\n    const top = window.scrollY - Math.max(0, stuckPosition.value - layoutTop)\n    const bottom =\n      rect.height +\n      Math.max(stuckPosition.value, layoutTop) -\n      window.scrollY -\n      window.innerHeight\n\n    if (rect.height < window.innerHeight - layoutTop) {\n      isStuck.value = 'top'\n      stuckPosition.value = layoutTop\n    } else if (\n      (direction === 'up' && isStuck.value === 'bottom') ||\n      (direction === 'down' && isStuck.value === 'top')\n    ) {\n      stuckPosition.value = window.scrollY + rect.top\n      isStuck.value = true\n    } else if (direction === 'down' && bottom <= 0) {\n      stuckPosition.value = 0\n      isStuck.value = 'bottom'\n    } else if (direction === 'up' && top <= 0) {\n      stuckPosition.value = rect.top + top\n      isStuck.value = 'top'\n    }\n\n    lastScrollTop = window.scrollY\n  }\n\n  return { isStuck, stickyStyles }\n}\n"]},"metadata":{},"sourceType":"module"}