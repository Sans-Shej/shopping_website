{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Make Payment \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_paystack = _resolveComponent(\"paystack\");\n\n  return _openBlock(), _createBlock(_component_paystack, {\n    amount: $data.amount,\n    email: $data.email,\n    paystackkey: $data.paystackkey,\n    reference: $options.reference,\n    callback: $options.callback,\n    close: $options.close,\n    embed: false\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"amount\", \"email\", \"paystackkey\", \"reference\", \"callback\", \"close\"]);\n}","map":{"version":3,"mappings":";;iDASK;;;;;uBARDA,aAWWC,mBAXX,EAWW;IAVRC,MAAM,EAAEC,YAUA;IATRC,KAAK,EAAED,WASC;IARRE,WAAW,EAAEF,iBAQL;IAPRG,SAAS,EAAEC,kBAOH;IANRC,QAAQ,EAAED,iBAMF;IALRE,KAAK,EAAEF,cAKC;IAJRG,KAAK,EAAE;EAIC,CAXX;sBAQC,MAGD;;;;GAXA;;EAAA","names":["_createBlock","_component_paystack","amount","$data","email","paystackkey","reference","$options","callback","close","embed"],"sourceRoot":"","sources":["C:\\Users\\Sans\\Downloads\\Shopping-Website-master\\Shopping-Website-master\\src\\views\\Payment.vue"],"sourcesContent":["<template>\r\n    <paystack\r\n      :amount=\"amount\"\r\n      :email=\"email\"\r\n      :paystackkey=\"paystackkey\"\r\n      :reference=\"reference\"\r\n      :callback=\"callback\"\r\n      :close=\"close\"\r\n      :embed=\"false\"\r\n    >\r\n      \r\n      Make Payment\r\n    </paystack>\r\n  </template>\r\n  \r\n  <script>\r\n  import paystack from \"vue-paystack\";\r\n  export default {\r\n    components: {\r\n      paystack,\r\n    },\r\n    data() {\r\n      return {\r\n        paystackkey: \"pk_test_xxxxxxxxxxxxxxxxxxxxxxx\", //paystack public key\r\n        email: \"foobar@example.com\", // Customer email\r\n        amount: 1000000, // in kobo\r\n      };\r\n    },\r\n    computed: {\r\n      reference() {\r\n        let text = \"\";\r\n        let possible =\r\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  \r\n        for (let i = 0; i < 10; i++)\r\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  \r\n        return text;\r\n      },\r\n    },\r\n    methods: {\r\n      callback: function (response) {\r\n        console.log(response);\r\n      },\r\n      close: function () {\r\n        console.log(\"Payment closed\");\r\n      },\r\n    },\r\n  };\r\n  </script>"]},"metadata":{},"sourceType":"module"}