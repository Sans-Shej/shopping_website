{"ast":null,"code":"// Composables\nimport { makeDelayProps, useDelay } from \"../../composables/delay.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\n\nimport { genericComponent } from \"../../util/index.mjs\";\nexport const VHover = genericComponent()({\n  name: 'VHover',\n  props: {\n    disabled: Boolean,\n    modelValue: {\n      type: Boolean,\n      default: undefined\n    },\n    ...makeDelayProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isHovering = useProxiedModel(props, 'modelValue');\n    const {\n      runOpenDelay,\n      runCloseDelay\n    } = useDelay(props, value => !props.disabled && (isHovering.value = value));\n    return () => slots.default?.({\n      isHovering: isHovering.value,\n      props: {\n        onMouseenter: runOpenDelay,\n        onMouseleave: runCloseDelay\n      }\n    });\n  }\n\n});","map":{"version":3,"mappings":"AAAA;AAAA,SACSA,cADT,EACyBC,QADzB,QACiC,6BADjC;AACiC,SACxBC,eADwB,QACT,oCADS,C,CAGjC;;AAAA,SACSC,gBADT,QACyB,sBADzB;AAUA,OAAO,MAAMC,MAAM,GAAGD,gBAAgB,GAAgB;EACpDE,IAAI,EAAE,QAD8C;EAGpDC,KAAK,EAAE;IACLC,QAAQ,EAAEC,OADL;IAELC,UAAU,EAAE;MACVC,IAAI,EAAEF,OADI;MAEVG,OAAO,EAAEC;IAFC,CAFP;IAOL,GAAGZ,cAAc;EAPZ,CAH6C;EAapDa,KAAK,EAAE;IACL,qBAAsBC,KAAc,IAAK;EADpC,CAb6C;;EAiBpDC,KAAKA,CAAET,KAAFS,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAME,UAAU,GAAGhB,eAAe,CAACI,KAAD,EAAQ,YAAR,CAAlC;IACA,MAAM;MAAEa,YAAF;MAAgBC;IAAhB,IAAkCnB,QAAQ,CAACK,KAAD,EAAQQ,KAAK,IAAI,CAACR,KAAK,CAACC,QAAP,KAAoBW,UAAU,CAACJ,KAAXI,GAAmBJ,KAAvC,CAAjB,CAAhD;IAEA,OAAO,MAAMG,KAAK,CAACN,OAANM,GAAgB;MAC3BC,UAAU,EAAEA,UAAU,CAACJ,KADI;MAE3BR,KAAK,EAAE;QACLe,YAAY,EAAEF,YADT;QAELG,YAAY,EAAEF;MAFT;IAFoB,CAAhBH,CAAb;EAOF;;AA5BoD,CAAhB,CAA/B","names":["makeDelayProps","useDelay","useProxiedModel","genericComponent","VHover","name","props","disabled","Boolean","modelValue","type","default","undefined","emits","value","setup","_ref","slots","isHovering","runOpenDelay","runCloseDelay","onMouseenter","onMouseleave"],"sources":["../../../src/components/VHover/VHover.tsx"],"sourcesContent":["// Composables\nimport { makeDelayProps, useDelay } from '@/composables/delay'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\ntype VHoverSlots = {\n  default: [{\n    isHovering: boolean\n    props: Record<string, unknown>\n  }]\n}\n\nexport const VHover = genericComponent<VHoverSlots>()({\n  name: 'VHover',\n\n  props: {\n    disabled: Boolean,\n    modelValue: {\n      type: Boolean,\n      default: undefined,\n    },\n\n    ...makeDelayProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isHovering = useProxiedModel(props, 'modelValue')\n    const { runOpenDelay, runCloseDelay } = useDelay(props, value => !props.disabled && (isHovering.value = value))\n\n    return () => slots.default?.({\n      isHovering: isHovering.value,\n      props: {\n        onMouseenter: runOpenDelay,\n        onMouseleave: runCloseDelay,\n      },\n    })\n  },\n})\n\nexport type VHover = InstanceType<typeof VHover>\n"]},"metadata":{},"sourceType":"module"}