{"ast":null,"code":"import { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VToolbar.css\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VExpandTransition } from \"../transitions/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\";\nimport { VToolbarTitle } from \"./VToolbarTitle.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\"; // Utilities\n\nimport { computed, ref, toRef } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'];\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String,\n    default: 'default',\n    validator: v => allowedDensities.includes(v)\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 64\n  },\n  image: String,\n  title: String,\n  ...makeBorderProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({\n    tag: 'header'\n  }),\n  ...makeThemeProps()\n}, 'v-toolbar');\nexport const VToolbar = genericComponent()({\n  name: 'VToolbar',\n  props: makeVToolbarProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const isExtended = ref(!!(props.extended || slots.extension?.()));\n    const contentHeight = computed(() => parseInt(Number(props.height) + (props.density === 'prominent' ? Number(props.height) : 0) - (props.density === 'comfortable' ? 8 : 0) - (props.density === 'compact' ? 16 : 0), 10));\n    const extensionHeight = computed(() => isExtended.value ? parseInt(Number(props.extensionHeight) + (props.density === 'prominent' ? Number(props.extensionHeight) : 0) - (props.density === 'comfortable' ? 4 : 0) - (props.density === 'compact' ? 8 : 0), 10) : 0);\n    provideDefaults({\n      VBtn: {\n        variant: 'text'\n      }\n    });\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title);\n      const hasImage = !!(slots.image || props.image);\n      const extension = slots.extension?.();\n      isExtended.value = !!(props.extended || extension);\n      return _createVNode(props.tag, {\n        \"class\": ['v-toolbar', {\n          'v-toolbar--absolute': props.absolute,\n          'v-toolbar--collapse': props.collapse,\n          'v-toolbar--flat': props.flat,\n          'v-toolbar--floating': props.floating,\n          [`v-toolbar--density-${props.density}`]: true\n        }, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, roundedClasses.value, themeClasses.value],\n        \"style\": [backgroundColorStyles.value]\n      }, {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-toolbar__image\"\n        }, [!slots.image ? _createVNode(VImg, {\n          \"key\": \"image-img\",\n          \"cover\": true,\n          \"src\": props.image\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"image-defaults\",\n          \"disabled\": !props.image,\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, slots.image)]), _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VTabs: {\n              height: convertToUnit(contentHeight.value)\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-toolbar__content\",\n            \"style\": {\n              height: convertToUnit(contentHeight.value)\n            }\n          }, [slots.prepend && _createVNode(\"div\", {\n            \"class\": \"v-toolbar__prepend\"\n          }, [slots.prepend?.()]), hasTitle && _createVNode(VToolbarTitle, {\n            \"key\": \"title\",\n            \"text\": props.title\n          }, {\n            text: slots.title\n          }), slots.default?.(), slots.append && _createVNode(\"div\", {\n            \"class\": \"v-toolbar__append\"\n          }, [slots.append?.()])])]\n        }), _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VTabs: {\n              height: convertToUnit(extensionHeight.value)\n            }\n          }\n        }, {\n          default: () => [_createVNode(VExpandTransition, null, {\n            default: () => [isExtended.value && _createVNode(\"div\", {\n              \"class\": \"v-toolbar__extension\",\n              \"style\": {\n                height: convertToUnit(extensionHeight.value)\n              }\n            }, [extension])]\n          })]\n        })]\n      });\n    });\n    return {\n      contentHeight,\n      extensionHeight\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VDefaultsProvider","VExpandTransition","VImg","VToolbarTitle","makeBorderProps","useBorder","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","provideDefaults","useBackgroundColor","computed","ref","toRef","convertToUnit","genericComponent","propsFactory","useRender","allowedDensities","makeVToolbarProps","absolute","Boolean","collapse","color","String","density","type","default","validator","v","includes","extended","extensionHeight","Number","flat","floating","height","image","title","tag","VToolbar","name","props","setup","_ref","slots","backgroundColorClasses","backgroundColorStyles","borderClasses","elevationClasses","roundedClasses","themeClasses","isExtended","extension","contentHeight","parseInt","value","VBtn","variant","hasTitle","hasImage","_createVNode","cover","src","VTabs","prepend","text","append"],"sources":["../../../src/components/VToolbar/VToolbar.tsx"],"sourcesContent":["// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandTransition } from '@/components/transitions'\nimport { VImg } from '@/components/VImg'\nimport { VToolbarTitle } from './VToolbarTitle'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref, toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MakeSlots } from '@/util'\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport type Density = null | 'prominent' | 'default' | 'comfortable' | 'compact'\n\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48,\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 64,\n  },\n  image: String,\n  title: String,\n\n  ...makeBorderProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'header' }),\n  ...makeThemeProps(),\n}, 'v-toolbar')\n\nexport type VToolbarSlots = MakeSlots<{\n  default: []\n  image: []\n  prepend: []\n  append: []\n  title: []\n  extension: []\n}>\n\nexport const VToolbar = genericComponent<VToolbarSlots>()({\n  name: 'VToolbar',\n\n  props: makeVToolbarProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isExtended = ref(!!(props.extended || slots.extension?.()))\n    const contentHeight = computed(() => parseInt((\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ), 10))\n    const extensionHeight = computed(() => isExtended.value\n      ? parseInt((\n        Number(props.extensionHeight) +\n        (props.density === 'prominent' ? Number(props.extensionHeight) : 0) -\n        (props.density === 'comfortable' ? 4 : 0) -\n        (props.density === 'compact' ? 8 : 0)\n      ), 10)\n      : 0\n    )\n\n    provideDefaults({\n      VBtn: {\n        variant: 'text',\n      },\n    })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n\n      const extension = slots.extension?.()\n      isExtended.value = !!(props.extended || extension)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n          ]}\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-toolbar__image\">\n              { !slots.image ? (\n                <VImg\n                  key=\"image-img\"\n                  cover\n                  src={ props.image }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"image-defaults\"\n                  disabled={ !props.image }\n                  defaults={{\n                    VImg: {\n                      cover: true,\n                      src: props.image,\n                    },\n                  }}\n                  v-slots:default={ slots.image }\n                />\n              )}\n            </div>\n          )}\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(contentHeight.value),\n              },\n            }}\n          >\n            <div\n              class=\"v-toolbar__content\"\n              style={{ height: convertToUnit(contentHeight.value) }}\n            >\n              { slots.prepend && (\n                <div class=\"v-toolbar__prepend\">\n                  { slots.prepend?.() }\n                </div>\n              )}\n\n              { hasTitle && (\n                <VToolbarTitle key=\"title\" text={ props.title }>\n                  {{ text: slots.title }}\n                </VToolbarTitle>\n              )}\n\n              { slots.default?.() }\n\n              { slots.append && (\n                <div class=\"v-toolbar__append\">\n                  { slots.append?.() }\n                </div>\n              )}\n            </div>\n          </VDefaultsProvider>\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(extensionHeight.value),\n              },\n            }}\n          >\n            <VExpandTransition>\n              { isExtended.value && (\n                <div\n                  class=\"v-toolbar__extension\"\n                  style={{ height: convertToUnit(extensionHeight.value) }}\n                >\n                  { extension }\n                </div>\n              )}\n            </VExpandTransition>\n          </VDefaultsProvider>\n        </props.tag>\n      )\n    })\n\n    return {\n      contentHeight,\n      extensionHeight,\n    }\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n"]},"metadata":{},"sourceType":"module"}