{"ast":null,"code":"function mounted(el, binding) {\n  const {\n    self = false\n  } = binding.modifiers ?? {};\n  const value = binding.value;\n  const options = typeof value === 'object' && value.options || {\n    passive: true\n  };\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler;\n  const target = self ? el : binding.arg ? document.querySelector(binding.arg) : window;\n  if (!target) return;\n  target.addEventListener('scroll', handler, options);\n  el._onScroll = Object(el._onScroll);\n  el._onScroll[binding.instance.$.uid] = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target\n  };\n}\n\nfunction unmounted(el, binding) {\n  if (!el._onScroll?.[binding.instance.$.uid]) return;\n  const {\n    handler,\n    options,\n    target = el\n  } = el._onScroll[binding.instance.$.uid];\n  target.removeEventListener('scroll', handler, options);\n  delete el._onScroll[binding.instance.$.uid];\n}\n\nfunction updated(el, binding) {\n  if (binding.value === binding.oldValue) return;\n  unmounted(el, binding);\n  mounted(el, binding);\n}\n\nexport const Scroll = {\n  mounted,\n  unmounted,\n  updated\n};\nexport default Scroll;","map":{"version":3,"mappings":"AAYA,SAASA,OAAT,CAAkBC,EAAlB,EAAmCC,OAAnC,EAAoE;EAClE,MAAM;IAAEC,IAAI,GAAG;EAAT,IAAmBD,OAAO,CAACE,SAARF,IAAqB,EAA9C;EACA,MAAMG,KAAK,GAAGH,OAAO,CAACG,KAAtB;EACA,MAAMC,OAAO,GAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,OAAnC,IAA+C;IAAEC,OAAO,EAAE;EAAX,CAAhE;EACA,MAAMC,OAAO,GAAG,OAAOH,KAAP,KAAiB,UAAjB,IAA+B,iBAAiBA,KAAhD,GAAwDA,KAAxD,GAAgEA,KAAK,CAACG,OAAtF;EAEA,MAAMC,MAAM,GAAGN,IAAI,GACfF,EADe,GAEfC,OAAO,CAACQ,GAARR,GACES,QAAQ,CAACC,aAATD,CAAuBT,OAAO,CAACQ,GAA/BC,CADFT,GAEEW,MAJN;EAMA,IAAI,CAACJ,MAAL,EAAa;EAEbA,MAAM,CAACK,gBAAPL,CAAwB,QAAxBA,EAAkCD,OAAlCC,EAA2CH,OAA3CG;EAEAR,EAAE,CAACc,SAAHd,GAAee,MAAM,CAACf,EAAE,CAACc,SAAJ,CAArBd;EACAA,EAAE,CAACc,SAAHd,CAAcC,OAAO,CAACe,QAARf,CAAkBgB,CAAlBhB,CAAoBiB,GAAlClB,IAAyC;IACvCO,OADuC;IAEvCF,OAFuC;IAGvC;IACAG,MAAM,EAAEN,IAAI,GAAGiB,SAAH,GAAeX;EAJY,CAAzCR;AAMF;;AAEA,SAASoB,SAAT,CAAoBpB,EAApB,EAAqCC,OAArC,EAAsE;EACpE,IAAI,CAACD,EAAE,CAACc,SAAHd,GAAeC,OAAO,CAACe,QAARf,CAAkBgB,CAAlBhB,CAAoBiB,GAAnClB,CAAL,EAA8C;EAE9C,MAAM;IAAEO,OAAF;IAAWF,OAAX;IAAoBG,MAAM,GAAGR;EAA7B,IAAoCA,EAAE,CAACc,SAAHd,CAAaC,OAAO,CAACe,QAARf,CAAkBgB,CAAlBhB,CAAoBiB,GAAjClB,CAA1C;EAEAQ,MAAM,CAACa,mBAAPb,CAA2B,QAA3BA,EAAqCD,OAArCC,EAA8CH,OAA9CG;EACA,OAAOR,EAAE,CAACc,SAAHd,CAAaC,OAAO,CAACe,QAARf,CAAkBgB,CAAlBhB,CAAoBiB,GAAjClB,CAAP;AACF;;AAEA,SAASsB,OAAT,CAAkBtB,EAAlB,EAAmCC,OAAnC,EAAoE;EAClE,IAAIA,OAAO,CAACG,KAARH,KAAkBA,OAAO,CAACsB,QAA9B,EAAwC;EAExCH,SAAS,CAACpB,EAAD,EAAKC,OAAL,CAATmB;EACArB,OAAO,CAACC,EAAD,EAAKC,OAAL,CAAPF;AACF;;AAEA,OAAO,MAAMyB,MAAM,GAAG;EACpBzB,OADoB;EAEpBqB,SAFoB;EAGpBE;AAHoB,CAAf;AAMP,eAAeE,MAAf","names":["mounted","el","binding","self","modifiers","value","options","passive","handler","target","arg","document","querySelector","window","addEventListener","_onScroll","Object","instance","$","uid","undefined","unmounted","removeEventListener","updated","oldValue","Scroll"],"sources":["../../../src/directives/scroll/index.ts"],"sourcesContent":["import type { DirectiveBinding } from 'vue'\n\ninterface ScrollDirectiveBinding extends Omit<DirectiveBinding, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: AddEventListenerOptions\n  } | EventListenerObject & { options?: AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: ScrollDirectiveBinding) {\n  const { self = false } = binding.modifiers ?? {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = Object(el._onScroll)\n  el._onScroll![binding.instance!.$.uid] = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unmounted (el: HTMLElement, binding: ScrollDirectiveBinding) {\n  if (!el._onScroll?.[binding.instance!.$.uid]) return\n\n  const { handler, options, target = el } = el._onScroll[binding.instance!.$.uid]!\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll[binding.instance!.$.uid]\n}\n\nfunction updated (el: HTMLElement, binding: ScrollDirectiveBinding) {\n  if (binding.value === binding.oldValue) return\n\n  unmounted(el, binding)\n  mounted(el, binding)\n}\n\nexport const Scroll = {\n  mounted,\n  unmounted,\n  updated,\n}\n\nexport default Scroll\n"]},"metadata":{},"sourceType":"module"}