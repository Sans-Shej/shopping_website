{"ast":null,"code":"import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VAlert.css\"; // Components\n\nimport { VAlertTitle } from \"./VAlertTitle.mjs\";\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\n\nconst allowedTypes = ['success', 'info', 'warning', 'error'];\nexport const VAlert = genericComponent()({\n  name: 'VAlert',\n  props: {\n    border: {\n      type: [Boolean, String],\n      validator: val => {\n        return typeof val === 'boolean' || ['top', 'end', 'bottom', 'start'].includes(val);\n      }\n    },\n    borderColor: String,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$close'\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close'\n    },\n    icon: {\n      type: [Boolean, String, Function, Object],\n      default: null\n    },\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    prominent: Boolean,\n    title: String,\n    text: String,\n    type: {\n      type: String,\n      validator: val => allowedTypes.includes(val)\n    },\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'flat'\n    })\n  },\n  emits: {\n    'click:close': e => true,\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const icon = computed(() => {\n      if (props.icon === false) return undefined;\n      if (!props.type) return props.icon;\n      return props.icon ?? `$${props.type}`;\n    });\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant\n    }));\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'borderColor'));\n    const {\n      t\n    } = useLocale();\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n\n      onClick(e) {\n        isActive.value = false;\n        emit('click:close', e);\n      }\n\n    }));\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value);\n      const hasTitle = !!(slots.title || props.title);\n      const hasText = !!(props.text || slots.text);\n      const hasClose = !!(slots.close || props.closable);\n      return isActive.value && _createVNode(props.tag, {\n        \"class\": ['v-alert', props.border && {\n          'v-alert--border': !!props.border,\n          [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true\n        }, {\n          'v-alert--prominent': props.prominent\n        }, themeClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value],\n        \"role\": \"alert\"\n      }, {\n        default: () => [genOverlays(false, 'v-alert'), props.border && _createVNode(\"div\", {\n          \"key\": \"border\",\n          \"class\": ['v-alert__border', textColorClasses.value],\n          \"style\": textColorStyles.value\n        }, null), hasPrepend && _createVNode(\"div\", {\n          \"key\": \"prepend\",\n          \"class\": \"v-alert__prepend\"\n        }, [!slots.prepend ? _createVNode(VIcon, {\n          \"key\": \"prepend-icon\",\n          \"density\": props.density,\n          \"icon\": icon.value,\n          \"size\": props.prominent ? 44 : 28\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend-defaults\",\n          \"disabled\": !icon.value,\n          \"defaults\": {\n            VIcon: {\n              density: props.density,\n              icon: icon.value,\n              size: props.prominent ? 44 : 28\n            }\n          }\n        }, slots.prepend)]), _createVNode(\"div\", {\n          \"class\": \"v-alert__content\"\n        }, [hasTitle && _createVNode(VAlertTitle, {\n          \"key\": \"title\"\n        }, {\n          default: () => [slots.title?.() ?? props.title]\n        }), hasText && (slots.text?.() ?? props.text), slots.default?.()]), slots.append && _createVNode(\"div\", {\n          \"key\": \"append\",\n          \"class\": \"v-alert__append\"\n        }, [slots.append()]), hasClose && _createVNode(\"div\", {\n          \"key\": \"close\",\n          \"class\": \"v-alert__close\"\n        }, [!slots.close ? _createVNode(VBtn, _mergeProps({\n          \"key\": \"close-btn\",\n          \"icon\": props.closeIcon,\n          \"size\": \"x-small\",\n          \"variant\": \"text\"\n        }, closeProps.value), null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"close-defaults\",\n          \"defaults\": {\n            VBtn: {\n              icon: props.closeIcon,\n              size: 'x-small',\n              variant: 'text'\n            }\n          }\n        }, {\n          default: () => [slots.close?.({\n            props: closeProps.value\n          })]\n        })])]\n      });\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VAlertTitle","VBtn","VDefaultsProvider","VIcon","genOverlays","makeVariantProps","useVariant","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","useLocale","useProxiedModel","useTextColor","IconValue","computed","toRef","genericComponent","allowedTypes","VAlert","name","props","border","type","Boolean","String","validator","val","includes","borderColor","closable","closeIcon","default","closeLabel","icon","Function","Object","modelValue","prominent","title","text","variant","emits","e","value","setup","_ref","emit","slots","isActive","undefined","variantProps","color","themeClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","locationStyles","positionClasses","roundedClasses","textColorClasses","textColorStyles","t","closeProps","onClick","hasPrepend","prepend","hasTitle","hasText","hasClose","close","_createVNode","density","size","append"],"sources":["../../../src/components/VAlert/VAlert.tsx"],"sourcesContent":["// Styles\nimport './VAlert.sass'\n\n// Components\nimport { VAlertTitle } from './VAlertTitle'\nimport { VBtn } from '@/components/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MakeSlots } from '@/util'\n\nconst allowedTypes = ['success', 'info', 'warning', 'error'] as const\n\ntype ContextualType = typeof allowedTypes[number]\n\nexport type VAlertSlots = MakeSlots<{\n  default: []\n  prepend: []\n  title: []\n  text: []\n  append: []\n  close: []\n}>\n\nexport const VAlert = genericComponent<VAlertSlots>()({\n  name: 'VAlert',\n\n  props: {\n    border: {\n      type: [Boolean, String] as PropType<boolean | 'top' | 'end' | 'bottom' | 'start'>,\n      validator: (val: boolean | string) => {\n        return typeof val === 'boolean' || [\n          'top',\n          'end',\n          'bottom',\n          'start',\n        ].includes(val)\n      },\n    },\n    borderColor: String,\n    closable: Boolean,\n    closeIcon: {\n      type: IconValue,\n      default: '$close',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    icon: {\n      type: [Boolean, String, Function, Object] as PropType<false | IconValue>,\n      default: null,\n    },\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    prominent: Boolean,\n    title: String,\n    text: String,\n    type: {\n      type: String as PropType<ContextualType>,\n      validator: (val: ContextualType) => allowedTypes.includes(val),\n    },\n\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'flat' } as const),\n  },\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const icon = computed(() => {\n      if (props.icon === false) return undefined\n      if (!props.type) return props.icon\n\n      return props.icon ?? `$${props.type}`\n    })\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant,\n    }))\n\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'borderColor'))\n    const { t } = useLocale()\n\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value)\n      const hasTitle = !!(slots.title || props.title)\n      const hasText = !!(props.text || slots.text)\n      const hasClose = !!(slots.close || props.closable)\n\n      return isActive.value && (\n        <props.tag\n          class={[\n            'v-alert',\n            props.border && {\n              'v-alert--border': !!props.border,\n              [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true,\n            },\n            {\n              'v-alert--prominent': props.prominent,\n            },\n            themeClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n          ]}\n          role=\"alert\"\n        >\n          { genOverlays(false, 'v-alert') }\n\n          { props.border && (\n            <div\n              key=\"border\"\n              class={[\n                'v-alert__border',\n                textColorClasses.value,\n              ]}\n              style={ textColorStyles.value }\n            />\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-alert__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  density={ props.density }\n                  icon={ icon.value }\n                  size={ props.prominent ? 44 : 28 }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !icon.value }\n                  defaults={{\n                    VIcon: {\n                      density: props.density,\n                      icon: icon.value,\n                      size: props.prominent ? 44 : 28,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-alert__content\">\n            { hasTitle && (\n              <VAlertTitle key=\"title\">\n                { slots.title?.() ?? props.title }\n              </VAlertTitle>\n            )}\n\n            { hasText && (slots.text?.() ?? props.text) }\n\n            { slots.default?.() }\n          </div>\n\n          { slots.append && (\n            <div key=\"append\" class=\"v-alert__append\">\n              { slots.append() }\n            </div>\n          )}\n\n          { hasClose && (\n            <div key=\"close\" class=\"v-alert__close\">\n              { !slots.close ? (\n                <VBtn\n                  key=\"close-btn\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                  variant=\"text\"\n                  { ...closeProps.value }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VBtn: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                      variant: 'text',\n                    },\n                  }}\n                >\n                  { slots.close?.({ props: closeProps.value }) }\n                </VDefaultsProvider>\n              )}\n            </div>\n          )}\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VAlert = InstanceType<typeof VAlert>\n"]},"metadata":{},"sourceType":"module"}