{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\"; // Components\n\nimport { Transition } from 'vue'; // Utilities\n\nimport { acceleratedEasing, animate, deceleratedEasing, genericComponent, nullifyTransforms, standardEasing } from \"../../util/index.mjs\"; // Types\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n  props: {\n    target: Object\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const functions = {\n      onBeforeEnter(el) {\n        el.style.pointerEvents = 'none';\n        el.style.visibility = 'hidden';\n      },\n\n      async onEnter(el, done) {\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        el.style.visibility = '';\n        const {\n          x,\n          y,\n          sx,\n          sy,\n          speed\n        } = getDimensions(props.target, el);\n        const animation = animate(el, [{\n          transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`,\n          opacity: 0\n        }, {}], {\n          duration: 225 * speed,\n          easing: deceleratedEasing\n        });\n        getChildren(el)?.forEach(el => {\n          animate(el, [{\n            opacity: 0\n          }, {\n            opacity: 0,\n            offset: 0.33\n          }, {}], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing\n          });\n        });\n        animation.finished.then(() => done());\n      },\n\n      onAfterEnter(el) {\n        el.style.removeProperty('pointer-events');\n      },\n\n      onBeforeLeave(el) {\n        el.style.pointerEvents = 'none';\n      },\n\n      async onLeave(el, done) {\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        const {\n          x,\n          y,\n          sx,\n          sy,\n          speed\n        } = getDimensions(props.target, el);\n        const animation = animate(el, [{}, {\n          transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`,\n          opacity: 0\n        }], {\n          duration: 125 * speed,\n          easing: acceleratedEasing\n        });\n        animation.finished.then(() => done());\n        getChildren(el)?.forEach(el => {\n          animate(el, [{}, {\n            opacity: 0,\n            offset: 0.2\n          }, {\n            opacity: 0\n          }], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing\n          });\n        });\n      },\n\n      onAfterLeave(el) {\n        el.style.removeProperty('pointer-events');\n      }\n\n    };\n    return () => {\n      return props.target ? _createVNode(Transition, _mergeProps({\n        \"name\": \"dialog-transition\"\n      }, functions, {\n        \"css\": false\n      }), slots) : _createVNode(Transition, {\n        \"name\": \"dialog-transition\"\n      }, slots);\n    };\n  }\n\n});\n/** Animatable children (card, sheet, list) */\n\nfunction getChildren(el) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children;\n  return els && [...els];\n}\n\nfunction getDimensions(target, el) {\n  const targetBox = target.getBoundingClientRect();\n  const elBox = nullifyTransforms(el);\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v));\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ');\n  let offsetX = targetBox.left + targetBox.width / 2;\n\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2;\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2;\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2;\n\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2;\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2;\n  }\n\n  const tsx = targetBox.width / elBox.width;\n  const tsy = targetBox.height / elBox.height;\n  const maxs = Math.max(1, tsx, tsy);\n  const sx = tsx / maxs || 0;\n  const sy = tsy / maxs || 0; // Animate elements larger than 12% of the screen area up to 1.5x slower\n\n  const asa = elBox.width * elBox.height / (window.innerWidth * window.innerHeight);\n  const speed = asa > 0.12 ? Math.min(1.5, (asa - 0.12) * 10 + 1) : 1;\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed\n  };\n}","map":{"version":3,"mappings":"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","names":["Transition","acceleratedEasing","animate","deceleratedEasing","genericComponent","nullifyTransforms","standardEasing","VDialogTransition","name","props","target","Object","setup","_ref","slots","functions","onBeforeEnter","el","style","pointerEvents","visibility","onEnter","done","Promise","resolve","requestAnimationFrame","x","y","sx","sy","speed","getDimensions","animation","transform","opacity","duration","easing","getChildren","forEach","offset","finished","then","onAfterEnter","removeProperty","onBeforeLeave","onLeave","onAfterLeave","_createVNode","els","querySelector","children","targetBox","getBoundingClientRect","elBox","originX","originY","getComputedStyle","transformOrigin","split","map","v","parseFloat","anchorSide","anchorOffset","getPropertyValue","offsetX","left","width","offsetY","top","height","tsx","tsy","maxs","Math","max","asa","window","innerWidth","innerHeight","min"],"sources":["../../../src/components/transitions/dialog-transition.tsx"],"sourcesContent":["// Components\nimport { Transition } from 'vue'\n\n// Utilities\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  standardEasing,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: {\n    target: Object as PropType<HTMLElement>,\n  },\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\nfunction getDimensions (target: HTMLElement, el: HTMLElement) {\n  const targetBox = target.getBoundingClientRect()\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n"]},"metadata":{},"sourceType":"module"}