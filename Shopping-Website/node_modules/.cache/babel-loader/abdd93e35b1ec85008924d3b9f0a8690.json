{"ast":null,"code":"import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\"; // Styles\n\nimport \"./VParallax.css\"; // Components\n\nimport { VImg } from \"../VImg/index.mjs\"; // Composables\n\nimport { useDisplay } from \"../../composables/index.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\"; // Utilities\n\nimport { clamp, genericComponent, getScrollParent, useRender } from \"../../util/index.mjs\";\nimport { computed, onBeforeUnmount, ref, watch, watchEffect } from 'vue'; // Types\n\nfunction floor(val) {\n  return Math.floor(Math.abs(val)) * Math.sign(val);\n}\n\nexport const VParallax = genericComponent()({\n  name: 'VParallax',\n  props: {\n    scale: {\n      type: [Number, String],\n      default: 0.5\n    }\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      intersectionRef,\n      isIntersecting\n    } = useIntersectionObserver();\n    const {\n      resizeRef,\n      contentRect\n    } = useResizeObserver();\n    const {\n      height: displayHeight\n    } = useDisplay();\n    const root = ref();\n    watchEffect(() => {\n      intersectionRef.value = resizeRef.value = root.value?.$el;\n    });\n    let scrollParent;\n    watch(isIntersecting, val => {\n      if (val) {\n        scrollParent = getScrollParent(intersectionRef.value);\n        scrollParent = scrollParent === document.scrollingElement ? document : scrollParent;\n        scrollParent.addEventListener('scroll', onScroll, {\n          passive: true\n        });\n        onScroll();\n      } else {\n        scrollParent.removeEventListener('scroll', onScroll);\n      }\n    });\n    onBeforeUnmount(() => {\n      scrollParent?.removeEventListener('scroll', onScroll);\n    });\n    watch(displayHeight, onScroll);\n    watch(() => contentRect.value?.height, onScroll);\n    const scale = computed(() => {\n      return 1 - clamp(+props.scale);\n    });\n    let frame = -1;\n\n    function onScroll() {\n      if (!isIntersecting.value) return;\n      cancelAnimationFrame(frame);\n      frame = requestAnimationFrame(() => {\n        const el = (root.value?.$el).querySelector('.v-img__img');\n        if (!el) return;\n        const scrollHeight = scrollParent instanceof Document ? document.documentElement.clientHeight : scrollParent.clientHeight;\n        const scrollPos = scrollParent instanceof Document ? window.scrollY : scrollParent.scrollTop;\n        const top = intersectionRef.value.getBoundingClientRect().top + scrollPos;\n        const height = contentRect.value.height;\n        const center = top + (height - scrollHeight) / 2;\n        const translate = floor((scrollPos - center) * scale.value);\n        const sizeScale = Math.max(1, (scale.value * (scrollHeight - height) + height) / height);\n        el.style.setProperty('transform', `translateY(${translate}px) scale(${sizeScale})`);\n      });\n    }\n\n    useRender(() => _createVNode(VImg, {\n      \"class\": ['v-parallax', {\n        'v-parallax--active': isIntersecting.value\n      }],\n      \"ref\": root,\n      \"cover\": true,\n      \"onLoadstart\": onScroll,\n      \"onLoad\": onScroll\n    }, slots));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VImg","useDisplay","useIntersectionObserver","useResizeObserver","clamp","genericComponent","getScrollParent","useRender","computed","onBeforeUnmount","ref","watch","watchEffect","floor","val","Math","abs","sign","VParallax","name","props","scale","type","Number","String","default","setup","_ref","slots","intersectionRef","isIntersecting","resizeRef","contentRect","height","displayHeight","root","value","$el","scrollParent","document","scrollingElement","addEventListener","onScroll","passive","removeEventListener","frame","cancelAnimationFrame","requestAnimationFrame","el","querySelector","scrollHeight","Document","documentElement","clientHeight","scrollPos","window","scrollY","scrollTop","top","getBoundingClientRect","center","translate","sizeScale","max","style","setProperty"],"sources":["../../../src/components/VParallax/VParallax.tsx"],"sourcesContent":["// Styles\nimport './VParallax.sass'\n\n// Components\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { useDisplay } from '@/composables'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { clamp, genericComponent, getScrollParent, useRender } from '@/util'\nimport { computed, onBeforeUnmount, ref, watch, watchEffect } from 'vue'\n\n// Types\nimport type { VImgSlots } from '../VImg/VImg'\n\nfunction floor (val: number) {\n  return Math.floor(Math.abs(val)) * Math.sign(val)\n}\n\nexport const VParallax = genericComponent<VImgSlots>()({\n  name: 'VParallax',\n\n  props: {\n    scale: {\n      type: [Number, String],\n      default: 0.5,\n    },\n  },\n\n  setup (props, { slots }) {\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n    const { resizeRef, contentRect } = useResizeObserver()\n    const { height: displayHeight } = useDisplay()\n\n    const root = ref<VImg>()\n\n    watchEffect(() => {\n      intersectionRef.value = resizeRef.value = root.value?.$el\n    })\n\n    let scrollParent: Element | Document\n    watch(isIntersecting, val => {\n      if (val) {\n        scrollParent = getScrollParent(intersectionRef.value)\n        scrollParent = scrollParent === document.scrollingElement ? document : scrollParent\n        scrollParent.addEventListener('scroll', onScroll, { passive: true })\n        onScroll()\n      } else {\n        scrollParent.removeEventListener('scroll', onScroll)\n      }\n    })\n\n    onBeforeUnmount(() => {\n      scrollParent?.removeEventListener('scroll', onScroll)\n    })\n\n    watch(displayHeight, onScroll)\n    watch(() => contentRect.value?.height, onScroll)\n\n    const scale = computed(() => {\n      return 1 - clamp(+props.scale)\n    })\n\n    let frame = -1\n    function onScroll () {\n      if (!isIntersecting.value) return\n\n      cancelAnimationFrame(frame)\n      frame = requestAnimationFrame(() => {\n        const el: HTMLElement | null = (root.value?.$el as Element).querySelector('.v-img__img')\n        if (!el) return\n\n        const scrollHeight = scrollParent instanceof Document ? document.documentElement.clientHeight : scrollParent.clientHeight\n        const scrollPos = scrollParent instanceof Document ? window.scrollY : scrollParent.scrollTop\n        const top = intersectionRef.value!.getBoundingClientRect().top + scrollPos\n        const height = contentRect.value!.height\n\n        const center = top + (height - scrollHeight) / 2\n        const translate = floor((scrollPos - center) * scale.value)\n        const sizeScale = Math.max(1, (scale.value * (scrollHeight - height) + height) / height)\n\n        el.style.setProperty('transform', `translateY(${translate}px) scale(${sizeScale})`)\n      })\n    }\n\n    useRender(() => (\n      <VImg\n        class={[\n          'v-parallax',\n          { 'v-parallax--active': isIntersecting.value },\n        ]}\n        ref={ root }\n        cover\n        onLoadstart={ onScroll }\n        onLoad={ onScroll }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VParallax = InstanceType<typeof VParallax>\n"]},"metadata":{},"sourceType":"module"}