{"ast":null,"code":"import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\"; // Styles\n\nimport \"./VTimeline.css\"; // Composables\n\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, genericComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VTimeline = genericComponent()({\n  name: 'VTimeline',\n  props: {\n    align: {\n      type: String,\n      default: 'center',\n      validator: v => ['center', 'start'].includes(v)\n    },\n    direction: {\n      type: String,\n      default: 'vertical',\n      validator: v => ['vertical', 'horizontal'].includes(v)\n    },\n    justify: {\n      type: String,\n      default: 'auto',\n      validator: v => ['auto', 'center'].includes(v)\n    },\n    side: {\n      type: String,\n      validator: v => v == null || ['start', 'end'].includes(v)\n    },\n    lineInset: {\n      type: [String, Number],\n      default: 0\n    },\n    lineThickness: {\n      type: [String, Number],\n      default: 2\n    },\n    lineColor: String,\n    truncateLine: {\n      type: String,\n      validator: v => ['start', 'end', 'both'].includes(v)\n    },\n    ...makeDensityProps(),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    provideDefaults({\n      VTimelineDivider: {\n        lineColor: toRef(props, 'lineColor')\n      },\n      VTimelineItem: {\n        density: toRef(props, 'density'),\n        lineInset: toRef(props, 'lineInset')\n      }\n    });\n    const sideClasses = computed(() => {\n      const side = props.side ? props.side : props.density !== 'default' ? 'end' : null;\n      return side && `v-timeline--side-${side}`;\n    });\n    const truncateClasses = computed(() => {\n      const classes = ['v-timeline--truncate-line-start', 'v-timeline--truncate-line-end'];\n\n      switch (props.truncateLine) {\n        case 'both':\n          return classes;\n\n        case 'start':\n          return classes[0];\n\n        case 'end':\n          return classes[1];\n\n        default:\n          return null;\n      }\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-timeline', `v-timeline--${props.direction}`, `v-timeline--align-${props.align}`, `v-timeline--justify-${props.justify}`, truncateClasses.value, {\n        'v-timeline--inset-line': !!props.lineInset\n      }, themeClasses.value, densityClasses.value, sideClasses.value],\n      \"style\": {\n        '--v-timeline-line-thickness': convertToUnit(props.lineThickness)\n      }\n    }, slots));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"0FAAA;;AACA,yB,CAEA;;AAAA,SACSA,gBADT,EAC2BC,UAD3B,QACqC,+BADrC;AACqC,SAC5BC,YAD4B,QAChB,2BADgB;AAChB,SACZC,cADY,EACIC,YADJ,QACgB,6BADhB;AACgB,SAC5BC,eAD4B,QACb,gCADa,C,CAGrC;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;AAAqC,SAC5BC,aAD4B,EACbC,gBADa,EACKC,SADL,QACc,sBADd,C,CAGrC;;AAQA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,GAAG;EAC1CG,IAAI,EAAE,WADoC;EAG1CC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MADD;MAELC,OAAO,EAAE,QAFJ;MAGLC,SAAS,EAAGC,CAAM,IAAK,CAAC,QAAD,EAAW,OAAX,EAAoBC,QAApB,CAA6BD,CAA7B;IAHlB,CADF;IAMLE,SAAS,EAAE;MACTN,IAAI,EAAEC,MADG;MAETC,OAAO,EAAE,UAFA;MAGTC,SAAS,EAAGC,CAAM,IAAK,CAAC,UAAD,EAAa,YAAb,EAA2BC,QAA3B,CAAoCD,CAApC;IAHd,CANN;IAWLG,OAAO,EAAE;MACPP,IAAI,EAAEC,MADC;MAEPC,OAAO,EAAE,MAFF;MAGPC,SAAS,EAAGC,CAAM,IAAK,CAAC,MAAD,EAAS,QAAT,EAAmBC,QAAnB,CAA4BD,CAA5B;IAHhB,CAXJ;IAgBLI,IAAI,EAAE;MACJR,IAAI,EAAEC,MADF;MAEJE,SAAS,EAAGC,CAAM,IAAKA,CAAC,IAAI,IAALA,IAAa,CAAC,OAAD,EAAU,KAAV,EAAiBC,QAAjB,CAA0BD,CAA1B;IAFhC,CAhBD;IAoBLK,SAAS,EAAE;MACTT,IAAI,EAAE,CAACC,MAAD,EAASS,MAAT,CADG;MAETR,OAAO,EAAE;IAFA,CApBN;IAwBLS,aAAa,EAAE;MACbX,IAAI,EAAE,CAACC,MAAD,EAASS,MAAT,CADO;MAEbR,OAAO,EAAE;IAFI,CAxBV;IA4BLU,SAAS,EAAEX,MA5BN;IA6BLY,YAAY,EAAE;MACZb,IAAI,EAAEC,MADM;MAEZE,SAAS,EAAGC,CAAM,IAAK,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,EAAyBC,QAAzB,CAAkCD,CAAlC;IAFX,CA7BT;IAkCL,GAAGnB,gBAAgB,EAlCd;IAmCL,GAAGE,YAAY,EAnCV;IAoCL,GAAGC,cAAc;EApCZ,CAHmC;;EA0C1C0B,KAAKA,CAAEhB,KAAFgB,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAM;MAAEE;IAAF,IAAmB5B,YAAY,CAACS,KAAD,CAArC;IACA,MAAM;MAAEoB;IAAF,IAAqBhC,UAAU,CAACY,KAAD,CAArC;IAEAR,eAAe,CAAC;MACd6B,gBAAgB,EAAE;QAChBP,SAAS,EAAEpB,KAAK,CAACM,KAAD,EAAQ,WAAR;MADA,CADJ;MAIdsB,aAAa,EAAE;QACbC,OAAO,EAAE7B,KAAK,CAACM,KAAD,EAAQ,SAAR,CADD;QAEbW,SAAS,EAAEjB,KAAK,CAACM,KAAD,EAAQ,WAAR;MAFH;IAJD,CAAD,CAAfR;IAUA,MAAMgC,WAAW,GAAG/B,QAAQ,CAAC,MAAM;MACjC,MAAMiB,IAAI,GAAGV,KAAK,CAACU,IAANV,GAAaA,KAAK,CAACU,IAAnBV,GAA0BA,KAAK,CAACuB,OAANvB,KAAkB,SAAlBA,GAA8B,KAA9BA,GAAsC,IAA7E;MAEA,OAAOU,IAAI,IAAK,oBAAmBA,IAAK,EAAxC;IACD,CAJ2B,CAA5B;IAMA,MAAMe,eAAe,GAAGhC,QAAQ,CAAC,MAAM;MACrC,MAAMiC,OAAO,GAAG,CACd,iCADc,EAEd,+BAFc,CAAhB;;MAKA,QAAQ1B,KAAK,CAACe,YAAd;QACE,KAAK,MAAL;UAAa,OAAOW,OAAP;;QACb,KAAK,OAAL;UAAc,OAAOA,OAAO,CAAC,CAAD,CAAd;;QACd,KAAK,KAAL;UAAY,OAAOA,OAAO,CAAC,CAAD,CAAd;;QACZ;UAAS,OAAO,IAAP;MAJX;IAMD,CAZ+B,CAAhC;IAcA7B,SAAS,CAAC;MAAA,SAEC,CACL,YADK,EAEJ,eAAcG,KAAK,CAACQ,SAAU,EAF1B,EAGJ,qBAAoBR,KAAK,CAACC,KAAM,EAH5B,EAIJ,uBAAsBD,KAAK,CAACS,OAAQ,EAJhC,EAKLgB,eAAe,CAACE,KALX,EAML;QACE,0BAA0B,CAAC,CAAC3B,KAAK,CAACW;MADpC,CANK,EASLQ,YAAY,CAACQ,KATR,EAULP,cAAc,CAACO,KAVV,EAWLH,WAAW,CAACG,KAXP,CAFD;MAcL,SACM;QACL,+BAA+BhC,aAAa,CAACK,KAAK,CAACa,aAAP;MADvC;IAfD,GAkBIK,KAlBJ,CAAD,CAATrB;IAsBA,OAAO,EAAP;EACF;;AAnG0C,CAAH,CAAlC","names":["makeDensityProps","useDensity","makeTagProps","makeThemeProps","provideTheme","provideDefaults","computed","toRef","convertToUnit","genericComponent","useRender","VTimeline","name","props","align","type","String","default","validator","v","includes","direction","justify","side","lineInset","Number","lineThickness","lineColor","truncateLine","setup","_ref","slots","themeClasses","densityClasses","VTimelineDivider","VTimelineItem","density","sideClasses","truncateClasses","classes","value"],"sources":["../../../src/components/VTimeline/VTimeline.tsx"],"sourcesContent":["// Styles\nimport './VTimeline.sass'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, useRender } from '@/util'\n\n// Types\nimport type { Prop } from 'vue'\n\nexport type TimelineDirection = 'vertical' | 'horizontal'\nexport type TimelineSide = 'start' | 'end' | undefined\nexport type TimelineAlign = 'center' | 'start'\nexport type TimelineTruncateLine = 'start' | 'end' | 'both' | undefined\n\nexport const VTimeline = genericComponent()({\n  name: 'VTimeline',\n\n  props: {\n    align: {\n      type: String,\n      default: 'center',\n      validator: (v: any) => ['center', 'start'].includes(v),\n    } as Prop<TimelineAlign>,\n    direction: {\n      type: String,\n      default: 'vertical',\n      validator: (v: any) => ['vertical', 'horizontal'].includes(v),\n    } as Prop<TimelineDirection>,\n    justify: {\n      type: String,\n      default: 'auto',\n      validator: (v: any) => ['auto', 'center'].includes(v),\n    },\n    side: {\n      type: String,\n      validator: (v: any) => v == null || ['start', 'end'].includes(v),\n    } as Prop<TimelineSide>,\n    lineInset: {\n      type: [String, Number],\n      default: 0,\n    },\n    lineThickness: {\n      type: [String, Number],\n      default: 2,\n    },\n    lineColor: String,\n    truncateLine: {\n      type: String,\n      validator: (v: any) => ['start', 'end', 'both'].includes(v),\n    } as Prop<TimelineTruncateLine>,\n\n    ...makeDensityProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { densityClasses } = useDensity(props)\n\n    provideDefaults({\n      VTimelineDivider: {\n        lineColor: toRef(props, 'lineColor'),\n      },\n      VTimelineItem: {\n        density: toRef(props, 'density'),\n        lineInset: toRef(props, 'lineInset'),\n      },\n    })\n\n    const sideClasses = computed(() => {\n      const side = props.side ? props.side : props.density !== 'default' ? 'end' : null\n\n      return side && `v-timeline--side-${side}`\n    })\n\n    const truncateClasses = computed(() => {\n      const classes = [\n        'v-timeline--truncate-line-start',\n        'v-timeline--truncate-line-end',\n      ]\n\n      switch (props.truncateLine) {\n        case 'both': return classes\n        case 'start': return classes[0]\n        case 'end': return classes[1]\n        default: return null\n      }\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-timeline',\n          `v-timeline--${props.direction}`,\n          `v-timeline--align-${props.align}`,\n          `v-timeline--justify-${props.justify}`,\n          truncateClasses.value,\n          {\n            'v-timeline--inset-line': !!props.lineInset,\n          },\n          themeClasses.value,\n          densityClasses.value,\n          sideClasses.value,\n        ]}\n        style={{\n          '--v-timeline-line-thickness': convertToUnit(props.lineThickness),\n        }}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VTimeline = InstanceType<typeof VTimeline>\n"]},"metadata":{},"sourceType":"module"}