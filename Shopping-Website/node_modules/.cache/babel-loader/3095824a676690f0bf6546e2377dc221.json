{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VBtnToggle.css\"; // Components\n\nimport { makeVBtnGroupProps, VBtnGroup } from \"../VBtnGroup/VBtnGroup.mjs\"; // Composables\n\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\"; // Utility\n\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VBtnToggleSymbol = Symbol.for('vuetify:v-btn-toggle');\nexport const VBtnToggle = genericComponent()({\n  name: 'VBtnToggle',\n  props: { ...makeVBtnGroupProps(),\n    ...makeGroupProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      isSelected,\n      next,\n      prev,\n      select,\n      selected\n    } = useGroup(props, VBtnToggleSymbol);\n    useRender(() => {\n      const [btnGroupProps] = VBtnGroup.filterProps(props);\n      return _createVNode(VBtnGroup, _mergeProps({\n        \"class\": \"v-btn-toggle\"\n      }, btnGroupProps), {\n        default: () => [slots.default?.({\n          isSelected,\n          next,\n          prev,\n          select,\n          selected\n        })]\n      });\n    });\n    return {\n      next,\n      prev,\n      select\n    };\n  }\n\n});","map":{"version":3,"mappings":"8EAAA;;AACA,0B,CAEA;;AAAA,SACSA,kBADT,EAC6BC,SAD7B,QACsC,4BADtC,C,CAGA;;AAAA,SACSC,cADT,EACyBC,QADzB,QACiC,6BADjC,C,CAGA;;AAAA,SACSC,gBADT,EAC2BC,SAD3B,QACoC,sBADpC,C,CAGA;;AAOA,OAAO,MAAMC,gBAA4C,GAAGC,MAAM,CAACC,GAAPD,CAAW,sBAAXA,CAArD;AAMP,OAAO,MAAME,UAAU,GAAGL,gBAAgB,GAAoB;EAC5DM,IAAI,EAAE,YADsD;EAG5DC,KAAK,EAAE,EACL,GAAGX,kBAAkB,EADhB;IAEL,GAAGE,cAAc;EAFZ,CAHqD;EAQ5DU,KAAK,EAAE;IACL,qBAAsBC,KAAU,IAAK;EADhC,CARqD;;EAY5DC,KAAKA,CAAEH,KAAFG,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAM;MAAEE,UAAF;MAAcC,IAAd;MAAoBC,IAApB;MAA0BC,MAA1B;MAAkCC;IAAlC,IAA+ClB,QAAQ,CAACQ,KAAD,EAAQL,gBAAR,CAA7D;IAEAD,SAAS,CAAC,MAAM;MACd,MAAM,CAACiB,aAAD,IAAkBrB,SAAS,CAACsB,WAAVtB,CAAsBU,KAAtBV,CAAxB;MAEA;QAAA,SAEU;MAFV,GAGSqB,aAHT,GAGsB;QAAAE,gBAEhBR,KAAK,CAACQ,OAANR,GAAgB;UAChBC,UADgB;UAEhBC,IAFgB;UAGhBC,IAHgB;UAIhBC,MAJgB;UAKhBC;QALgB,CAAhBL,CAFgB;MAAA,CAHtB;IAcD,CAjBQ,CAATX;IAmBA,OAAO;MACLa,IADK;MAELC,IAFK;MAGLC;IAHK,CAAP;EAKF;;AAvC4D,CAApB,CAAnC","names":["makeVBtnGroupProps","VBtnGroup","makeGroupProps","useGroup","genericComponent","useRender","VBtnToggleSymbol","Symbol","for","VBtnToggle","name","props","emits","value","setup","_ref","slots","isSelected","next","prev","select","selected","btnGroupProps","filterProps","default"],"sources":["../../../src/components/VBtnToggle/VBtnToggle.tsx"],"sourcesContent":["// Styles\nimport './VBtnToggle.sass'\n\n// Components\nimport { makeVBtnGroupProps, VBtnGroup } from '@/components/VBtnGroup/VBtnGroup'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\n\n// Utility\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport type BtnToggleSlotProps = 'isSelected' | 'select' | 'selected' | 'next' | 'prev'\nexport interface DefaultBtnToggleSlot extends Pick<GroupProvide, BtnToggleSlotProps> {}\n\nexport const VBtnToggleSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-btn-toggle')\n\ntype VBtnToggleSlots = {\n  default: [DefaultBtnToggleSlot]\n}\n\nexport const VBtnToggle = genericComponent<VBtnToggleSlots>()({\n  name: 'VBtnToggle',\n\n  props: {\n    ...makeVBtnGroupProps(),\n    ...makeGroupProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, next, prev, select, selected } = useGroup(props, VBtnToggleSymbol)\n\n    useRender(() => {\n      const [btnGroupProps] = VBtnGroup.filterProps(props)\n\n      return (\n        <VBtnGroup\n          class=\"v-btn-toggle\"\n          { ...btnGroupProps }\n        >\n          { slots.default?.({\n            isSelected,\n            next,\n            prev,\n            select,\n            selected,\n          } as DefaultBtnToggleSlot)}\n        </VBtnGroup>\n      )\n    })\n\n    return {\n      next,\n      prev,\n      select,\n    }\n  },\n})\n\nexport type VBtnToggle = InstanceType<typeof VBtnToggle>\n"]},"metadata":{},"sourceType":"module"}