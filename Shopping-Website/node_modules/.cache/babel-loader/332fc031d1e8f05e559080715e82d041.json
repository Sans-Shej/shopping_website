{"ast":null,"code":"import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VMenu.css\"; // Components\n\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\"; // Composables\n\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\"; // Utilities\n\nimport { computed, inject, mergeProps, provide, ref, watch } from 'vue';\nimport { genericComponent, getUid, omit, useRender } from \"../../util/index.mjs\";\nimport { makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\";\nimport { VMenuSymbol } from \"./shared.mjs\"; // Types\n\nexport const VMenu = genericComponent()({\n  name: 'VMenu',\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    id: String,\n    ...omit(makeVOverlayProps({\n      closeDelay: 250,\n      closeOnContentClick: true,\n      locationStrategy: 'connected',\n      openDelay: 300,\n      scrim: false,\n      scrollStrategy: 'reposition',\n      transition: {\n        component: VDialogTransition\n      }\n    }), ['absolute'])\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      scopeId\n    } = useScopeId();\n    const uid = getUid();\n    const id = computed(() => props.id || `v-menu-${uid}`);\n    const overlay = ref();\n    const parent = inject(VMenuSymbol, null);\n    const openChildren = ref(0);\n    provide(VMenuSymbol, {\n      register() {\n        ++openChildren.value;\n      },\n\n      unregister() {\n        --openChildren.value;\n      },\n\n      closeParents() {\n        setTimeout(() => {\n          if (!openChildren.value) {\n            isActive.value = false;\n            parent?.closeParents();\n          }\n        }, 40);\n      }\n\n    });\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister();\n    });\n\n    function onClickOutside() {\n      parent?.closeParents();\n    }\n\n    const activatorProps = computed(() => mergeProps({\n      'aria-haspopup': 'menu',\n      'aria-expanded': String(isActive.value),\n      'aria-owns': id.value\n    }, props.activatorProps));\n    useRender(() => {\n      const [overlayProps] = VOverlay.filterProps(props);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-menu']\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"absolute\": true,\n        \"activatorProps\": activatorProps.value,\n        \"onClick:outside\": onClickOutside\n      }, scopeId), {\n        activator: slots.activator,\n        default: function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _createVNode(VDefaultsProvider, {\n            \"root\": true\n          }, {\n            default: () => [slots.default?.(...args)]\n          });\n        }\n      });\n    });\n    return forwardRefs({\n      id,\n      ΨopenChildren: openChildren\n    }, overlay);\n  }\n\n});","map":{"version":3,"mappings":"8EAAA;;AACA,qB,CAEA;;AAAA,SACSA,iBADT,QAC0B,0BAD1B;AAC0B,SACjBC,iBADiB,QACA,gCADA;AACA,SACjBC,QADiB,QACT,uBADS,C,CAG1B;;AAAA,SACSC,WADT,QACoB,mCADpB;AACoB,SACXC,eADW,QACI,oCADJ;AACI,SACfC,UADe,QACL,+BADK,C,CAGxB;;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,GAAhD,EAAqDC,KAArD,QAAkE,KAAlE;AAAuE,SAC9DC,gBAD8D,EAC5CC,MAD4C,EACpCC,IADoC,EAC9BC,SAD8B,QACrB,sBADqB;AACrB,SACzCC,iBADyC,QACxB,0BADwB;AACxB,SACjBC,WADiB,QACN,cADM,C,CAG1B;;AAGA,OAAO,MAAMC,KAAK,GAAGN,gBAAgB,GAAiB;EACpDO,IAAI,EAAE,OAD8C;EAGpDC,KAAK,EAAE;IACL;IACA;IACAC,EAAE,EAAEC,MAHC;IAKL,GAAGR,IAAI,CAACE,iBAAiB,CAAC;MACxBO,UAAU,EAAE,GADY;MAExBC,mBAAmB,EAAE,IAFG;MAGxBC,gBAAgB,EAAE,WAHM;MAIxBC,SAAS,EAAE,GAJa;MAKxBC,KAAK,EAAE,KALiB;MAMxBC,cAAc,EAAE,YANQ;MAOxBC,UAAU,EAAE;QAAEC,SAAS,EAAE9B;MAAb;IAPY,CAAD,CAAlB,EAQH,CAAC,UAAD,CARG;EALF,CAH6C;EAmBpD+B,KAAK,EAAE;IACL,qBAAsBC,KAAc,IAAK;EADpC,CAnB6C;;EAuBpDC,KAAKA,CAAEb,KAAFa,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAME,QAAQ,GAAGhC,eAAe,CAACgB,KAAD,EAAQ,YAAR,CAAhC;IACA,MAAM;MAAEiB;IAAF,IAAchC,UAAU,EAA9B;IAEA,MAAMiC,GAAG,GAAGzB,MAAM,EAAlB;IACA,MAAMQ,EAAE,GAAGf,QAAQ,CAAC,MAAMc,KAAK,CAACC,EAAND,IAAa,UAASkB,GAAI,EAAjC,CAAnB;IAEA,MAAMC,OAAO,GAAG7B,GAAG,EAAnB;IAEA,MAAM8B,MAAM,GAAGjC,MAAM,CAACU,WAAD,EAAc,IAAd,CAArB;IACA,MAAMwB,YAAY,GAAG/B,GAAG,CAAC,CAAD,CAAxB;IACAD,OAAO,CAACQ,WAAD,EAAc;MACnByB,QAAQA,GAAI;QACV,EAAED,YAAY,CAACT,KAAf;MACD,CAHkB;;MAInBW,UAAUA,GAAI;QACZ,EAAEF,YAAY,CAACT,KAAf;MACD,CANkB;;MAOnBY,YAAYA,GAAI;QACdC,UAAU,CAAC,MAAM;UACf,IAAI,CAACJ,YAAY,CAACT,KAAlB,EAAyB;YACvBI,QAAQ,CAACJ,KAATI,GAAiB,KAAjBA;YACAI,MAAM,EAAEI,YAARJ;UACF;QACD,CALS,EAKP,EALO,CAAVK;MAMF;;IAdmB,CAAd,CAAPpC;IAiBAE,KAAK,CAACyB,QAAD,EAAWU,GAAG,IAAI;MACrBA,GAAG,GAAGN,MAAM,EAAEE,QAARF,EAAH,GAAwBA,MAAM,EAAEG,UAARH,EAA3BM;IACD,CAFI,CAALnC;;IAIA,SAASoC,cAAT,GAA2B;MACzBP,MAAM,EAAEI,YAARJ;IACF;;IAEA,MAAMQ,cAAc,GAAG1C,QAAQ,CAAC,MAC9BE,UAAU,CAAC;MACT,iBAAiB,MADR;MAET,iBAAiBc,MAAM,CAACc,QAAQ,CAACJ,KAAV,CAFd;MAGT,aAAaX,EAAE,CAACW;IAHP,CAAD,EAIPZ,KAAK,CAAC4B,cAJC,CADmB,CAA/B;IAQAjC,SAAS,CAAC,MAAM;MACd,MAAM,CAACkC,YAAD,IAAiB/C,QAAQ,CAACgD,WAAThD,CAAqBkB,KAArBlB,CAAvB;MAEA;QAAA,OAEUqC,OAFV;QAEiB,SACN,CACL,QADK;MAHX,GAMSU,YANT,EAMqB;QAAA,cACPb,QAAQ,CAACJ,KADF;QACO,iCAAdI,QAAQ,CAACJ,KAATI,GAAce,MADP;QACO,gBADP;QACO,kBAEPH,cAAc,CAAChB,KAHf;QAGoB,mBACnBe;MAJD,CANrB,EAWSV,OAXT,GAWgB;QAGVe,SAAS,EAAEjB,KAAK,CAACiB,SAHP;QAIVC,OAAO,EAAE;UAAA,kCAAIC,IAAI,kBAAR,EAAQC,QAAR,EAAQA,WAAR,EAAQA,MAAR,EAAQ;YAAJD,IAAI,MAAJA,GAAIE,eAAJF;UAAI;;UAAA;YAAA;UAAA;YAAAD,gBAEXlB,KAAK,CAACkB,OAANlB,GAAgB,GAAGmB,IAAnBnB,CAFW;UAAA;QAEa;MANpB,CAXhB;IAuBD,CA1BQ,CAATpB;IA4BA,OAAOZ,WAAW,CAAC;MAAEkB,EAAF;MAAMoC,aAAa,EAAEhB;IAArB,CAAD,EAAsCF,OAAtC,CAAlB;EACF;;AAhGoD,CAAjB,CAA9B","names":["VDialogTransition","VDefaultsProvider","VOverlay","forwardRefs","useProxiedModel","useScopeId","computed","inject","mergeProps","provide","ref","watch","genericComponent","getUid","omit","useRender","makeVOverlayProps","VMenuSymbol","VMenu","name","props","id","String","closeDelay","closeOnContentClick","locationStrategy","openDelay","scrim","scrollStrategy","transition","component","emits","value","setup","_ref","slots","isActive","scopeId","uid","overlay","parent","openChildren","register","unregister","closeParents","setTimeout","val","onClickOutside","activatorProps","overlayProps","filterProps","$event","activator","default","args","_key","arguments","ΨopenChildren"],"sources":["../../../src/components/VMenu/VMenu.tsx"],"sourcesContent":["// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, inject, mergeProps, provide, ref, watch } from 'vue'\nimport { genericComponent, getUid, omit, useRender } from '@/util'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\nimport { VMenuSymbol } from './shared'\n\n// Types\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    id: String,\n\n    ...omit(makeVOverlayProps({\n      closeDelay: 250,\n      closeOnContentClick: true,\n      locationStrategy: 'connected' as const,\n      openDelay: 300,\n      scrim: false,\n      scrollStrategy: 'reposition' as const,\n      transition: { component: VDialogTransition },\n    }), ['absolute']),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = ref(0)\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren.value\n      },\n      unregister () {\n        --openChildren.value\n      },\n      closeParents () {\n        setTimeout(() => {\n          if (!openChildren.value) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister()\n    })\n\n    function onClickOutside () {\n      parent?.closeParents()\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const [overlayProps] = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-menu',\n          ]}\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          onClick:outside={ onClickOutside }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root>\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n"]},"metadata":{},"sourceType":"module"}