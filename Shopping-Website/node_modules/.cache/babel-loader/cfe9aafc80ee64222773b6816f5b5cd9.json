{"ast":null,"code":"// Utilities\nimport { computed, inject, provide, reactive, ref, watch, watchEffect } from 'vue';\nimport { createRange, darken, getCurrentInstance, getLuma, IN_BROWSER, lighten, mergeDeep, parseColor, propsFactory, RGBtoHex } from \"../util/index.mjs\";\nimport { APCAcontrast } from \"../util/color/APCA.mjs\"; // Types\n\nexport const ThemeSymbol = Symbol.for('vuetify:theme');\nexport const makeThemeProps = propsFactory({\n  theme: String\n}, 'theme');\nconst defaultThemeOptions = {\n  defaultTheme: 'light',\n  variations: {\n    colors: [],\n    lighten: 0,\n    darken: 0\n  },\n  themes: {\n    light: {\n      dark: false,\n      colors: {\n        background: '#FFFFFF',\n        surface: '#FFFFFF',\n        'surface-variant': '#424242',\n        'on-surface-variant': '#EEEEEE',\n        primary: '#6200EE',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC6',\n        'secondary-darken-1': '#018786',\n        error: '#B00020',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      variables: {\n        'border-color': '#000000',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.04,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.12,\n        'dragged-opacity': 0.08,\n        'theme-kbd': '#212529',\n        'theme-on-kbd': '#FFFFFF',\n        'theme-code': '#F5F5F5',\n        'theme-on-code': '#000000'\n      }\n    },\n    dark: {\n      dark: true,\n      colors: {\n        background: '#121212',\n        surface: '#212121',\n        'surface-variant': '#BDBDBD',\n        'on-surface-variant': '#424242',\n        primary: '#BB86FC',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC5',\n        'secondary-darken-1': '#03DAC5',\n        error: '#CF6679',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      variables: {\n        'border-color': '#FFFFFF',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.10,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.16,\n        'dragged-opacity': 0.08,\n        'theme-kbd': '#212529',\n        'theme-on-kbd': '#FFFFFF',\n        'theme-code': '#343434',\n        'theme-on-code': '#CCCCCC'\n      }\n    }\n  }\n};\n\nfunction parseThemeOptions() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultThemeOptions;\n  if (!options) return { ...defaultThemeOptions,\n    isDisabled: true\n  };\n  const themes = {};\n\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === 'dark' ? defaultThemeOptions.themes?.dark : defaultThemeOptions.themes?.light;\n    themes[key] = mergeDeep(defaultTheme, theme);\n  }\n\n  return mergeDeep(defaultThemeOptions, { ...options,\n    themes\n  });\n} // Composables\n\n\nexport function createTheme(options) {\n  const parsedOptions = reactive(parseThemeOptions(options));\n  const name = ref(parsedOptions.defaultTheme);\n  const themes = ref(parsedOptions.themes);\n  const computedThemes = computed(() => {\n    const acc = {};\n\n    for (const [name, original] of Object.entries(themes.value)) {\n      const theme = acc[name] = { ...original,\n        colors: { ...original.colors\n        }\n      };\n\n      if (parsedOptions.variations) {\n        for (const name of parsedOptions.variations.colors) {\n          const color = theme.colors[name];\n          if (!color) continue;\n\n          for (const variation of ['lighten', 'darken']) {\n            const fn = variation === 'lighten' ? lighten : darken;\n\n            for (const amount of createRange(parsedOptions.variations[variation], 1)) {\n              theme.colors[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount));\n            }\n          }\n        }\n      }\n\n      for (const color of Object.keys(theme.colors)) {\n        if (/^on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue;\n        const onColor = `on-${color}`;\n        const colorVal = parseColor(theme.colors[color]);\n        const blackContrast = Math.abs(APCAcontrast(parseColor(0), colorVal));\n        const whiteContrast = Math.abs(APCAcontrast(parseColor(0xffffff), colorVal)); // TODO: warn about poor color selections\n        // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n        // const minContrast = Math.max(blackContrast, whiteContrast)\n        // if (minContrast < 60) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n        // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n        // }\n        // Prefer white text if both have an acceptable contrast ratio\n\n        theme.colors[onColor] = whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000';\n      }\n    }\n\n    return acc;\n  });\n  const current = computed(() => computedThemes.value[name.value]);\n  const styles = computed(() => {\n    const lines = [];\n\n    if (current.value.dark) {\n      createCssClass(lines, ':root', ['color-scheme: dark']);\n    }\n\n    createCssClass(lines, ':root', genCssVariables(current.value));\n\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      createCssClass(lines, `.v-theme--${themeName}`, [`color-scheme: ${theme.dark ? 'dark' : 'normal'}`, ...genCssVariables(theme)]);\n    }\n\n    const bgLines = [];\n    const fgLines = [];\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)));\n\n    for (const key of colors) {\n      if (/^on-[a-z]/.test(key)) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [`--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`, `background-color: rgb(var(--v-theme-${key})) !important`, `color: rgb(var(--v-theme-on-${key})) !important`]);\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]);\n      }\n    }\n\n    lines.push(...bgLines, ...fgLines);\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('');\n  });\n\n  function getHead() {\n    return {\n      style: [{\n        children: styles.value,\n        id: 'vuetify-theme-stylesheet',\n        nonce: parsedOptions.cspNonce || false\n      }]\n    };\n  }\n\n  function install(app) {\n    const head = app._context.provides.usehead;\n\n    if (head) {\n      if (head.push) {\n        const entry = head.push(getHead);\n        watch(styles, () => {\n          entry.patch(getHead);\n        });\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead));\n          watchEffect(() => head.updateDOM());\n        } else {\n          head.addHeadObjs(getHead());\n        }\n      }\n    } else {\n      let styleEl = IN_BROWSER ? document.getElementById('vuetify-theme-stylesheet') : null;\n      watch(styles, updateStyles, {\n        immediate: true\n      });\n\n      function updateStyles() {\n        if (parsedOptions.isDisabled) return;\n\n        if (typeof document !== 'undefined' && !styleEl) {\n          const el = document.createElement('style');\n          el.type = 'text/css';\n          el.id = 'vuetify-theme-stylesheet';\n          if (parsedOptions.cspNonce) el.setAttribute('nonce', parsedOptions.cspNonce);\n          styleEl = el;\n          document.head.appendChild(styleEl);\n        }\n\n        if (styleEl) styleEl.innerHTML = styles.value;\n      }\n    }\n  }\n\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`);\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current\n    }\n  };\n}\nexport function provideTheme(props) {\n  getCurrentInstance('provideTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  const name = computed(() => {\n    return props.theme ?? theme?.name.value;\n  });\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`);\n  const newTheme = { ...theme,\n    name,\n    themeClasses\n  };\n  provide(ThemeSymbol, newTheme);\n  return newTheme;\n}\nexport function useTheme() {\n  getCurrentInstance('useTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  return theme;\n}\n\nfunction createCssClass(lines, selector, content) {\n  lines.push(`${selector} {\\n`, ...content.map(line => `  ${line};\\n`), '}\\n');\n}\n\nfunction genCssVariables(theme) {\n  const lightOverlay = theme.dark ? 2 : 1;\n  const darkOverlay = theme.dark ? 1 : 2;\n  const variables = [];\n\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value);\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);\n\n    if (!key.startsWith('on-')) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`);\n    }\n  }\n\n  for (const [key, value] of Object.entries(theme.variables)) {\n    const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined;\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined;\n    variables.push(`--v-${key}: ${rgb ?? value}`);\n  }\n\n  return variables;\n}","map":{"version":3,"mappings":"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","names":["computed","inject","provide","reactive","ref","watch","watchEffect","createRange","darken","getCurrentInstance","getLuma","IN_BROWSER","lighten","mergeDeep","parseColor","propsFactory","RGBtoHex","APCAcontrast","ThemeSymbol","Symbol","for","makeThemeProps","theme","String","defaultThemeOptions","defaultTheme","variations","colors","themes","light","dark","background","surface","primary","secondary","error","info","success","warning","variables","parseThemeOptions","options","isDisabled","key","Object","entries","createTheme","parsedOptions","name","computedThemes","acc","original","value","color","variation","fn","amount","keys","test","onColor","colorVal","blackContrast","Math","abs","whiteContrast","min","current","styles","lines","createCssClass","genCssVariables","themeName","bgLines","fgLines","Set","values","flatMap","push","map","str","i","join","getHead","style","children","id","nonce","cspNonce","install","app","head","_context","provides","usehead","entry","patch","addHeadObjs","updateDOM","styleEl","document","getElementById","updateStyles","immediate","el","createElement","type","setAttribute","appendChild","innerHTML","themeClasses","undefined","global","provideTheme","props","Error","newTheme","useTheme","selector","content","line","lightOverlay","darkOverlay","rgb","r","g","b","startsWith"],"sources":["../../src/composables/theme.ts"],"sourcesContent":["// Utilities\nimport {\n  computed,\n  inject,\n  provide,\n  reactive,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport {\n  createRange,\n  darken,\n  getCurrentInstance,\n  getLuma,\n  IN_BROWSER,\n  lighten,\n  mergeDeep,\n  parseColor,\n  propsFactory,\n  RGBtoHex,\n} from '@/util'\nimport { APCAcontrast } from '@/util/color/APCA'\n\n// Types\nimport type { App, DeepReadonly, InjectionKey, Ref } from 'vue'\nimport type { HeadClient } from '@vueuse/head'\n\ntype DeepPartial<T> = T extends object ? { [P in keyof T]?: DeepPartial<T[P]> } : T\n\nexport type ThemeOptions = false | {\n  cspNonce?: string\n  defaultTheme?: string\n  variations?: false | VariationsOptions\n  themes?: Record<string, ThemeDefinition>\n}\nexport type ThemeDefinition = DeepPartial<InternalThemeDefinition>\n\ninterface InternalThemeOptions {\n  cspNonce?: string\n  isDisabled: boolean\n  defaultTheme: string\n  variations: false | VariationsOptions\n  themes: Record<string, InternalThemeDefinition>\n}\n\ninterface VariationsOptions {\n  colors: string[]\n  lighten: number\n  darken: number\n}\n\ninterface InternalThemeDefinition {\n  dark: boolean\n  colors: Colors\n  variables: Record<string, string | number>\n}\n\nexport interface Colors extends BaseColors, OnColors {\n  [key: string]: string\n}\n\ninterface BaseColors {\n  background: string\n  surface: string\n  primary: string\n  secondary: string\n  success: string\n  warning: string\n  error: string\n  info: string\n}\n\ninterface OnColors {\n  'on-background': string\n  'on-surface': string\n  'on-primary': string\n  'on-secondary': string\n  'on-success': string\n  'on-warning': string\n  'on-error': string\n  'on-info': string\n}\n\nexport interface ThemeInstance {\n  readonly isDisabled: boolean\n  readonly themes: Ref<Record<string, InternalThemeDefinition>>\n\n  readonly name: Readonly<Ref<string>>\n  readonly current: DeepReadonly<Ref<InternalThemeDefinition>>\n  readonly computedThemes: DeepReadonly<Ref<Record<string, InternalThemeDefinition>>>\n\n  readonly themeClasses: Readonly<Ref<string | undefined>>\n  readonly styles: Readonly<Ref<string>>\n\n  readonly global: {\n    readonly name: Ref<string>\n    readonly current: DeepReadonly<Ref<InternalThemeDefinition>>\n  }\n}\n\nexport const ThemeSymbol: InjectionKey<ThemeInstance> = Symbol.for('vuetify:theme')\n\nexport const makeThemeProps = propsFactory({\n  theme: String,\n}, 'theme')\n\nconst defaultThemeOptions: Exclude<ThemeOptions, false> = {\n  defaultTheme: 'light',\n  variations: { colors: [], lighten: 0, darken: 0 },\n  themes: {\n    light: {\n      dark: false,\n      colors: {\n        background: '#FFFFFF',\n        surface: '#FFFFFF',\n        'surface-variant': '#424242',\n        'on-surface-variant': '#EEEEEE',\n        primary: '#6200EE',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC6',\n        'secondary-darken-1': '#018786',\n        error: '#B00020',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n      variables: {\n        'border-color': '#000000',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.04,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.12,\n        'dragged-opacity': 0.08,\n        'theme-kbd': '#212529',\n        'theme-on-kbd': '#FFFFFF',\n        'theme-code': '#F5F5F5',\n        'theme-on-code': '#000000',\n      },\n    },\n    dark: {\n      dark: true,\n      colors: {\n        background: '#121212',\n        surface: '#212121',\n        'surface-variant': '#BDBDBD',\n        'on-surface-variant': '#424242',\n        primary: '#BB86FC',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC5',\n        'secondary-darken-1': '#03DAC5',\n        error: '#CF6679',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n      variables: {\n        'border-color': '#FFFFFF',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'idle-opacity': 0.10,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'activated-opacity': 0.12,\n        'pressed-opacity': 0.16,\n        'dragged-opacity': 0.08,\n        'theme-kbd': '#212529',\n        'theme-on-kbd': '#FFFFFF',\n        'theme-code': '#343434',\n        'theme-on-code': '#CCCCCC',\n      },\n    },\n  },\n}\n\nfunction parseThemeOptions (options: ThemeOptions = defaultThemeOptions): InternalThemeOptions {\n  if (!options) return { ...defaultThemeOptions, isDisabled: true } as InternalThemeOptions\n\n  const themes: Record<string, InternalThemeDefinition> = {}\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === 'dark'\n      ? defaultThemeOptions.themes?.dark\n      : defaultThemeOptions.themes?.light\n    themes[key] = mergeDeep(defaultTheme, theme) as InternalThemeDefinition\n  }\n\n  return mergeDeep(\n    defaultThemeOptions,\n    { ...options, themes },\n  ) as InternalThemeOptions\n}\n\n// Composables\nexport function createTheme (options?: ThemeOptions): ThemeInstance & { install: (app: App) => void } {\n  const parsedOptions = reactive(parseThemeOptions(options))\n  const name = ref(parsedOptions.defaultTheme)\n  const themes = ref(parsedOptions.themes)\n\n  const computedThemes = computed(() => {\n    const acc: Record<string, InternalThemeDefinition> = {}\n    for (const [name, original] of Object.entries(themes.value)) {\n      const theme: InternalThemeDefinition = acc[name] = {\n        ...original,\n        colors: {\n          ...original.colors,\n        },\n      }\n\n      if (parsedOptions.variations) {\n        for (const name of parsedOptions.variations.colors) {\n          const color = theme.colors[name]\n\n          if (!color) continue\n\n          for (const variation of (['lighten', 'darken'] as const)) {\n            const fn = variation === 'lighten' ? lighten : darken\n            for (const amount of createRange(parsedOptions.variations[variation], 1)) {\n              theme.colors[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount))\n            }\n          }\n        }\n      }\n\n      for (const color of Object.keys(theme.colors)) {\n        if (/^on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue\n\n        const onColor = `on-${color}` as keyof OnColors\n        const colorVal = parseColor(theme.colors[color]!)\n\n        const blackContrast = Math.abs(APCAcontrast(parseColor(0), colorVal))\n        const whiteContrast = Math.abs(APCAcontrast(parseColor(0xffffff), colorVal))\n\n        // TODO: warn about poor color selections\n        // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n        // const minContrast = Math.max(blackContrast, whiteContrast)\n        // if (minContrast < 60) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n        // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n        // }\n\n        // Prefer white text if both have an acceptable contrast ratio\n        theme.colors[onColor] = whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000'\n      }\n    }\n\n    return acc\n  })\n  const current = computed(() => computedThemes.value[name.value])\n\n  const styles = computed(() => {\n    const lines: string[] = []\n\n    if (current.value.dark) {\n      createCssClass(lines, ':root', ['color-scheme: dark'])\n    }\n\n    createCssClass(lines, ':root', genCssVariables(current.value))\n\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      createCssClass(lines, `.v-theme--${themeName}`, [\n        `color-scheme: ${theme.dark ? 'dark' : 'normal'}`,\n        ...genCssVariables(theme),\n      ])\n    }\n\n    const bgLines: string[] = []\n    const fgLines: string[] = []\n\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)))\n    for (const key of colors) {\n      if (/^on-[a-z]/.test(key)) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`])\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [\n          `--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`,\n          `background-color: rgb(var(--v-theme-${key})) !important`,\n          `color: rgb(var(--v-theme-on-${key})) !important`,\n        ])\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`])\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`])\n      }\n    }\n\n    lines.push(...bgLines, ...fgLines)\n\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('')\n  })\n\n  function getHead () {\n    return {\n      style: [{\n        children: styles.value,\n        id: 'vuetify-theme-stylesheet',\n        nonce: parsedOptions.cspNonce || false as never,\n      }],\n    }\n  }\n\n  function install (app: App) {\n    const head = app._context.provides.usehead as HeadClient | undefined\n    if (head) {\n      if (head.push) {\n        const entry = head.push(getHead)\n        watch(styles, () => { entry.patch(getHead) })\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead))\n          watchEffect(() => head.updateDOM())\n        } else {\n          head.addHeadObjs(getHead())\n        }\n      }\n    } else {\n      let styleEl = IN_BROWSER\n        ? document.getElementById('vuetify-theme-stylesheet')\n        : null\n\n      watch(styles, updateStyles, { immediate: true })\n\n      function updateStyles () {\n        if (parsedOptions.isDisabled) return\n\n        if (typeof document !== 'undefined' && !styleEl) {\n          const el = document.createElement('style')\n          el.type = 'text/css'\n          el.id = 'vuetify-theme-stylesheet'\n          if (parsedOptions.cspNonce) el.setAttribute('nonce', parsedOptions.cspNonce)\n\n          styleEl = el\n          document.head.appendChild(styleEl)\n        }\n\n        if (styleEl) styleEl.innerHTML = styles.value\n      }\n    }\n  }\n\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`)\n\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current,\n    },\n  }\n}\n\nexport function provideTheme (props: { theme?: string }) {\n  getCurrentInstance('provideTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  const name = computed<string>(() => {\n    return props.theme ?? theme?.name.value\n  })\n\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`)\n\n  const newTheme: ThemeInstance = {\n    ...theme,\n    name,\n    themeClasses,\n  }\n\n  provide(ThemeSymbol, newTheme)\n\n  return newTheme\n}\n\nexport function useTheme () {\n  getCurrentInstance('useTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  return theme\n}\n\nfunction createCssClass (lines: string[], selector: string, content: string[]) {\n  lines.push(\n    `${selector} {\\n`,\n    ...content.map(line => `  ${line};\\n`),\n    '}\\n',\n  )\n}\n\nfunction genCssVariables (theme: InternalThemeDefinition) {\n  const lightOverlay = theme.dark ? 2 : 1\n  const darkOverlay = theme.dark ? 1 : 2\n\n  const variables: string[] = []\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value)\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`)\n    if (!key.startsWith('on-')) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`)\n    }\n  }\n\n  for (const [key, value] of Object.entries(theme.variables)) {\n    const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined\n    variables.push(`--v-${key}: ${rgb ?? value}`)\n  }\n\n  return variables\n}\n"]},"metadata":{},"sourceType":"module"}