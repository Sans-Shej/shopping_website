{"ast":null,"code":"// Utilities\nimport { h, mergeProps, Transition } from 'vue';\nimport { propsFactory } from \"../util/index.mjs\"; // Types\n\nexport const makeTransitionProps = propsFactory({\n  transition: {\n    type: [Boolean, String, Object],\n    default: 'fade-transition',\n    validator: val => val !== true\n  }\n}, 'transition');\nexport const MaybeTransition = (props, _ref) => {\n  let {\n    slots\n  } = _ref;\n  const {\n    transition,\n    ...rest\n  } = props;\n  const {\n    component = Transition,\n    ...customProps\n  } = typeof transition === 'object' ? transition : {};\n  return h(component, mergeProps(typeof transition === 'string' ? {\n    name: transition\n  } : customProps, rest), slots);\n};","map":{"version":3,"mappings":"AAAA;AACA,SAASA,CAAT,EAAYC,UAAZ,EAAwBC,UAAxB,QAA0C,KAA1C;AAA+C,SACtCC,YADsC,QAC1B,mBAD0B,C,CAG/C;;AAGA,OAAO,MAAMC,mBAAmB,GAAGD,YAAY,CAAC;EAC9CE,UAAU,EAAE;IACVC,IAAI,EAAE,CAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,CADI;IAEVC,OAAO,EAAE,iBAFC;IAGVC,SAAS,EAAEC,GAAG,IAAIA,GAAG,KAAK;EAHhB;AADkC,CAAD,EAM5C,YAN4C,CAAxC;AAYP,OAAO,MAAMC,eAA0D,GAAGA,CAACC,KAADD,EAAME,IAANF,KAAsB;EAAA,IAAd;IAAEG;EAAF,IAASD,IAAK;EAC9F,MAAM;IAAEV,UAAF;IAAc,GAAGY;EAAjB,IAA0BH,KAAhC;EAEA,MAAM;IAAEI,SAAS,GAAGhB,UAAd;IAA0B,GAAGiB;EAA7B,IAA6C,OAAOd,UAAP,KAAsB,QAAtB,GAAiCA,UAAjC,GAA8C,EAAjG;EAEA,OAAOL,CAAC,CACNkB,SADM,EAENjB,UAAU,CAAC,OAAOI,UAAP,KAAsB,QAAtB,GAAiC;IAAEe,IAAI,EAAEf;EAAR,CAAjC,GAAwDc,WAAzD,EAA6EF,IAA7E,CAFJ,EAGND,KAHM,CAAR;AAKD,CAVM","names":["h","mergeProps","Transition","propsFactory","makeTransitionProps","transition","type","Boolean","String","Object","default","validator","val","MaybeTransition","props","_ref","slots","rest","component","customProps","name"],"sources":["../../src/composables/transition.ts"],"sourcesContent":["// Utilities\nimport { h, mergeProps, Transition } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Component, FunctionalComponent, PropType, TransitionProps } from 'vue'\n\nexport const makeTransitionProps = propsFactory({\n  transition: {\n    type: [Boolean, String, Object] as PropType<string | boolean | TransitionProps & { component?: Component }>,\n    default: 'fade-transition',\n    validator: val => val !== true,\n  },\n}, 'transition')\n\ninterface MaybeTransitionProps extends TransitionProps {\n  transition?: string | boolean | TransitionProps & { component?: any }\n}\n\nexport const MaybeTransition: FunctionalComponent<MaybeTransitionProps> = (props, { slots }) => {\n  const { transition, ...rest } = props\n\n  const { component = Transition, ...customProps } = typeof transition === 'object' ? transition : {}\n\n  return h(\n    component,\n    mergeProps(typeof transition === 'string' ? { name: transition } : customProps as any, rest as any),\n    slots\n  )\n}\n"]},"metadata":{},"sourceType":"module"}